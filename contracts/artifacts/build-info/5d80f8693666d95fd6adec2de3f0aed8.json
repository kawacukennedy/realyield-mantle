{"id":"5d80f8693666d95fd6adec2de3f0aed8","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC5267.sol)\n\npragma solidity >=0.4.16;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /// @inheritdoc IERC20Permit\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /// @inheritdoc IERC20Permit\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /// @inheritdoc IERC20Permit\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /// @inheritdoc IERC5267\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/Hashes.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library of standard hash functions.\n *\n * _Available since v5.1._\n */\nlibrary Hashes {\n    /**\n     * @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n     *\n     * NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n     */\n    function commutativeKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32) {\n        return a < b ? efficientKeccak256(a, b) : efficientKeccak256(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function efficientKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32 value) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MerkleProof.sol)\n// This file was procedurally generated from scripts/generate/templates/MerkleProof.js.\n\npragma solidity ^0.8.20;\n\nimport {Hashes} from \"./Hashes.sol\";\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n *\n * IMPORTANT: Consider memory side-effects when using custom hashing functions\n * that access memory in an unsafe way.\n *\n * NOTE: This library supports proof verification for merkle trees built using\n * custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n * leaf inclusion in trees built using non-commutative hashing functions requires\n * additional logic that is not supported by this library.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProof(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function processProof(\n        bytes32[] memory proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProofCalldata(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function processProofCalldata(\n        bytes32[] calldata proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/AssetTokenizer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract AssetTokenizer is Ownable {\n    uint256 private _nextAssetId;\n\n    struct Asset {\n        string uri;\n        address issuer;\n        bytes32 proofHash;\n        uint256 valuation;\n        uint256 maturity;\n        bool locked;\n    }\n\n    mapping(uint256 => Asset) public assets;\n\n    event AssetMinted(uint256 indexed assetId, address indexed issuer, string uri);\n\n    constructor() Ownable(msg.sender) {}\n\n    function mintAsset(\n        string memory uri,\n        address issuer,\n        bytes32 proofHash,\n        uint256 valuation,\n        uint256 maturity\n    ) external onlyOwner returns (uint256) {\n        uint256 assetId = _nextAssetId++;\n        assets[assetId] = Asset({\n            uri: uri,\n            issuer: issuer,\n            proofHash: proofHash,\n            valuation: valuation,\n            maturity: maturity,\n            locked: false\n        });\n\n        emit AssetMinted(assetId, issuer, uri);\n        return assetId;\n    }\n\n    function lockAssetForVault(uint256 assetId, address vault) external {\n        require(msg.sender == assets[assetId].issuer || msg.sender == owner(), \"Not authorized\");\n        assets[assetId].locked = true;\n    }\n\n    function getAsset(uint256 assetId) external view returns (Asset memory) {\n        return assets[assetId];\n    }\n}"},"contracts/ComplianceModule.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract ComplianceModule is Ownable {\n    mapping(address => bytes) public attestations;\n\n    event KYCAttested(address indexed wallet, bytes32 attestationHash);\n\n    constructor() Ownable(msg.sender) {}\n\n    function attestKYC(address wallet, bytes memory attestation) external onlyOwner {\n        attestations[wallet] = attestation;\n        emit KYCAttested(wallet, keccak256(attestation));\n    }\n\n    function verifyAttestation(address wallet, bytes memory attestation) external view returns (bool) {\n        // For MVP, just check if attestation exists\n        return attestations[wallet].length > 0;\n    }\n}"},"contracts/MockERC20.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MockERC20 is ERC20 {\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\n        _mint(msg.sender, 1000000 * 10**decimals());\n    }\n}"},"contracts/ShareToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./ComplianceModule.sol\";\n\ncontract ShareToken is ERC20Permit, Ownable {\n    ComplianceModule public compliance;\n\n    constructor(string memory name, string memory symbol, ComplianceModule _compliance)\n        ERC20(name, symbol)\n        ERC20Permit(name)\n        Ownable(msg.sender)\n    {\n        compliance = _compliance;\n    }\n\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal {\n        if (from != address(0) && to != address(0)) {\n            require(compliance.verifyAttestation(from, \"\"), \"From not compliant\"); // Placeholder, need attestation\n            require(compliance.verifyAttestation(to, \"\"), \"To not compliant\");\n        }\n    }\n}"},"contracts/Vault.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./AssetTokenizer.sol\";\nimport \"./ComplianceModule.sol\";\nimport \"./ZKModule.sol\";\nimport \"./YieldDistributor.sol\";\nimport \"./ShareToken.sol\";\n\ncontract VaultContract is Ownable {\n    AssetTokenizer public assetTokenizer;\n    ShareToken public shareToken;\n    ComplianceModule public compliance;\n    YieldDistributor public yieldDistributor;\n    ZKModule public zkModule;\n\n    mapping(uint256 => bool) public depositedAssets;\n    mapping(address => uint256) public pendingWithdrawals;\n\n    event Deposit(address indexed depositor, uint256 assetId);\n    event WithdrawRequest(address indexed user, uint256 shares);\n    event WithdrawFulfilled(address indexed user, uint256 shares);\n\n    constructor(\n        AssetTokenizer _assetTokenizer,\n        ShareToken _shareToken,\n        ComplianceModule _compliance,\n        YieldDistributor _yieldDistributor,\n        ZKModule _zkModule\n    ) Ownable(msg.sender) {\n        assetTokenizer = _assetTokenizer;\n        shareToken = _shareToken;\n        compliance = _compliance;\n        yieldDistributor = _yieldDistributor;\n        zkModule = _zkModule;\n    }\n\n    function depositAsset(uint256 assetId) external {\n        require(compliance.verifyAttestation(msg.sender, \"\"), \"Not compliant\"); // Placeholder\n        require(!depositedAssets[assetId], \"Already deposited\");\n        // Assume transfer or lock\n        assetTokenizer.lockAssetForVault(assetId, address(this));\n        depositedAssets[assetId] = true;\n        // Mint shares based on valuation\n        AssetTokenizer.Asset memory asset = assetTokenizer.getAsset(assetId);\n        uint256 valuation = asset.valuation;\n        shareToken.mint(msg.sender, valuation); // Simple 1:1 for MVP\n        emit Deposit(msg.sender, assetId);\n    }\n\n    function requestWithdrawal(uint256 shares) external {\n        require(shareToken.balanceOf(msg.sender) >= shares, \"Insufficient shares\");\n        shareToken.transferFrom(msg.sender, address(this), shares);\n        pendingWithdrawals[msg.sender] += shares;\n        emit WithdrawRequest(msg.sender, shares);\n    }\n\n    function settleWithdrawal(bytes memory signedReceipt) external onlyOwner {\n        // For MVP, decode user and shares from signedReceipt\n        (address user, uint256 shares) = abi.decode(signedReceipt, (address, uint256));\n        require(pendingWithdrawals[user] >= shares, \"No pending withdrawal\");\n        pendingWithdrawals[user] -= shares;\n        shareToken.transfer(user, shares);\n        emit WithdrawFulfilled(user, shares);\n    }\n}"},"contracts/YieldDistributor.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\ncontract YieldDistributor is Ownable {\n    ERC20 public rewardToken;\n    bytes32 public merkleRoot;\n    mapping(uint256 => mapping(address => bool)) public claimed;\n\n    event YieldDistributed(uint256 indexed period, bytes32 merkleRoot);\n\n    constructor(ERC20 _rewardToken) Ownable(msg.sender) {\n        rewardToken = _rewardToken;\n    }\n\n    function distributeYield(uint256 period, bytes32 _merkleRoot) external onlyOwner {\n        merkleRoot = _merkleRoot;\n        emit YieldDistributed(period, _merkleRoot);\n    }\n\n    function claimYield(uint256 period, address account, uint256 amount, bytes32[] calldata proof) external {\n        require(!claimed[period][account], \"Already claimed\");\n        bytes32 leaf = keccak256(abi.encodePacked(account, amount));\n        require(MerkleProof.verify(proof, merkleRoot, leaf), \"Invalid proof\");\n        claimed[period][account] = true;\n        rewardToken.transfer(account, amount);\n    }\n}"},"contracts/ZKModule.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract ZKModule is Ownable {\n    event ProofSubmitted(address indexed user, bytes32 proofHash);\n\n    constructor() Ownable(msg.sender) {}\n\n    function verifyProof(bytes memory proof, bytes memory publicInputs) external returns (bool) {\n        // Placeholder: in real implementation, verify ZK proof against public inputs\n        // For MVP, assume valid if proof length > 0\n        if (proof.length > 0) {\n            emit ProofSubmitted(msg.sender, keccak256(proof));\n            return true;\n        }\n        return false;\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/AssetTokenizer.sol:45:49:\n   |\n45 |     function lockAssetForVault(uint256 assetId, address vault) external {\n   |                                                 ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":1132,"file":"contracts/AssetTokenizer.sol","start":1119},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ComplianceModule.sol:18:48:\n   |\n18 |     function verifyAttestation(address wallet, bytes memory attestation) external view returns (bool) {\n   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":584,"file":"contracts/ComplianceModule.sol","start":560},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ShareToken.sol:23:61:\n   |\n23 |     function _beforeTokenTransfer(address from, address to, uint256 amount) internal {\n   |                                                             ^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":697,"file":"contracts/ShareToken.sol","start":683},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ZKModule.sol:11:46:\n   |\n11 |     function verifyProof(bytes memory proof, bytes memory publicInputs) external returns (bool) {\n   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":323,"file":"contracts/ZKModule.sol","start":298},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n  --> contracts/ShareToken.sol:23:5:\n   |\n23 |     function _beforeTokenTransfer(address from, address to, uint256 amount) internal {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":974,"file":"contracts/ShareToken.sol","start":627},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1148],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1149,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1148,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1148],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[172]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"107:25:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"IERC5267","nameLocation":"144:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"159:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":152,"name":"EIP712DomainChanged","nameLocation":"254:19:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"273:2:1"},"src":"248:28:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"282:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"436:12:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"448:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"fields","nameLocation":"518:6:1","nodeType":"VariableDeclaration","scope":171,"src":"511:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":155,"name":"bytes1","nodeType":"ElementaryTypeName","src":"511:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"name","nameLocation":"552:4:1","nodeType":"VariableDeclaration","scope":171,"src":"538:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":157,"name":"string","nodeType":"ElementaryTypeName","src":"538:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"version","nameLocation":"584:7:1","nodeType":"VariableDeclaration","scope":171,"src":"570:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":159,"name":"string","nodeType":"ElementaryTypeName","src":"570:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"chainId","nameLocation":"613:7:1","nodeType":"VariableDeclaration","scope":171,"src":"605:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"verifyingContract","nameLocation":"642:17:1","nodeType":"VariableDeclaration","scope":171,"src":"634:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"salt","nameLocation":"681:4:1","nodeType":"VariableDeclaration","scope":171,"src":"673:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"673:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"extensions","nameLocation":"716:10:1","nodeType":"VariableDeclaration","scope":171,"src":"699:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":168,"nodeType":"ArrayTypeName","src":"699:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"497:239:1"},"scope":172,"src":"427:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":173,"src":"134:605:1","usedErrors":[],"usedEvents":[152]}],"src":"107:633:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[309],"IERC20Errors":[214],"IERC721Errors":[262]},"id":310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"138:141:2","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":214,"linearizedBaseContracts":[214],"name":"IERC20Errors","nameLocation":"290:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"309:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":184,"name":"ERC20InsufficientBalance","nameLocation":"629:24:2","nodeType":"ErrorDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"sender","nameLocation":"662:6:2","nodeType":"VariableDeclaration","scope":184,"src":"654:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"balance","nameLocation":"678:7:2","nodeType":"VariableDeclaration","scope":184,"src":"670:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"needed","nameLocation":"695:6:2","nodeType":"VariableDeclaration","scope":184,"src":"687:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:2"},"src":"623:80:2"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"709:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":189,"name":"ERC20InvalidSender","nameLocation":"872:18:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"sender","nameLocation":"899:6:2","nodeType":"VariableDeclaration","scope":189,"src":"891:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:2"},"src":"866:41:2"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"913:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":194,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:2","nodeType":"ErrorDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:2","nodeType":"VariableDeclaration","scope":194,"src":"1104:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:2"},"src":"1077:45:2"},{"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1128:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":203,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:2","nodeType":"ErrorDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1519:7:2","nodeType":"VariableDeclaration","scope":203,"src":"1511:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:2","nodeType":"VariableDeclaration","scope":203,"src":"1528:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"needed","nameLocation":"1555:6:2","nodeType":"VariableDeclaration","scope":203,"src":"1547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:2"},"src":"1478:85:2"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1569:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":208,"name":"ERC20InvalidApprover","nameLocation":"1754:20:2","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"approver","nameLocation":"1783:8:2","nodeType":"VariableDeclaration","scope":208,"src":"1775:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:2"},"src":"1748:45:2"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"1799:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":213,"name":"ERC20InvalidSpender","nameLocation":"2005:19:2","nodeType":"ErrorDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"spender","nameLocation":"2033:7:2","nodeType":"VariableDeclaration","scope":213,"src":"2025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:2"},"src":"1999:43:2"}],"scope":310,"src":"280:1764:2","usedErrors":[184,189,194,203,208,213],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"2046:143:2","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":262,"linearizedBaseContracts":[262],"name":"IERC721Errors","nameLocation":"2200:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2220:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":220,"name":"ERC721InvalidOwner","nameLocation":"2450:18:2","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"owner","nameLocation":"2477:5:2","nodeType":"VariableDeclaration","scope":220,"src":"2469:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:2"},"src":"2444:40:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2490:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":225,"name":"ERC721NonexistentToken","nameLocation":"2633:22:2","nodeType":"ErrorDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:2","nodeType":"VariableDeclaration","scope":225,"src":"2656:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:2"},"src":"2627:46:2"},{"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"2679:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":234,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:2","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"sender","nameLocation":"3008:6:2","nodeType":"VariableDeclaration","scope":234,"src":"3000:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:2","nodeType":"VariableDeclaration","scope":234,"src":"3016:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"owner","nameLocation":"3041:5:2","nodeType":"VariableDeclaration","scope":234,"src":"3033:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:2"},"src":"2973:75:2"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3054:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":239,"name":"ERC721InvalidSender","nameLocation":"3217:19:2","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"sender","nameLocation":"3245:6:2","nodeType":"VariableDeclaration","scope":239,"src":"3237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:2"},"src":"3211:42:2"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3259:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":244,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:2","nodeType":"ErrorDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:2","nodeType":"VariableDeclaration","scope":244,"src":"3451:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:2"},"src":"3423:46:2"},{"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"3475:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":251,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:2","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"operator","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":251,"src":"3760:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:2","nodeType":"VariableDeclaration","scope":251,"src":"3778:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:2"},"src":"3727:68:2"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3801:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":256,"name":"ERC721InvalidApprover","nameLocation":"3986:21:2","nodeType":"ErrorDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"approver","nameLocation":"4016:8:2","nodeType":"VariableDeclaration","scope":256,"src":"4008:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:2"},"src":"3980:46:2"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"4032:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":261,"name":"ERC721InvalidOperator","nameLocation":"4240:21:2","nodeType":"ErrorDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"operator","nameLocation":"4270:8:2","nodeType":"VariableDeclaration","scope":261,"src":"4262:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:2"},"src":"4234:46:2"}],"scope":310,"src":"2190:2092:2","usedErrors":[220,225,234,239,244,251,256,261],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"4284:145:2","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":309,"linearizedBaseContracts":[309],"name":"IERC1155Errors","nameLocation":"4440:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4461:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":274,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:2","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"sender","nameLocation":"4868:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4860:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"balance","nameLocation":"4884:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4876:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"needed","nameLocation":"4901:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4893:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4909:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:2"},"src":"4827:99:2"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"4932:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":279,"name":"ERC1155InvalidSender","nameLocation":"5095:20:2","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"sender","nameLocation":"5124:6:2","nodeType":"VariableDeclaration","scope":279,"src":"5116:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:2"},"src":"5089:43:2"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5138:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":284,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:2","nodeType":"ErrorDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:2","nodeType":"VariableDeclaration","scope":284,"src":"5331:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:2"},"src":"5302:47:2"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"5355:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":291,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:2","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"operator","nameLocation":"5659:8:2","nodeType":"VariableDeclaration","scope":291,"src":"5651:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"5677:5:2","nodeType":"VariableDeclaration","scope":291,"src":"5669:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:2"},"src":"5616:68:2"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5690:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":296,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:2","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"approver","nameLocation":"5906:8:2","nodeType":"VariableDeclaration","scope":296,"src":"5898:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:2"},"src":"5869:47:2"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"5922:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":301,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:2","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"operator","nameLocation":"6161:8:2","nodeType":"VariableDeclaration","scope":301,"src":"6153:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:2"},"src":"6124:47:2"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"6177:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":308,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:2","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:2","nodeType":"VariableDeclaration","scope":308,"src":"6494:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:2","nodeType":"VariableDeclaration","scope":308,"src":"6513:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:2"},"src":"6462:73:2"}],"scope":310,"src":"4430:2107:2","usedErrors":[274,279,284,291,296,301,308],"usedEvents":[]}],"src":"112:6426:2"},"id":2},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1148],"ERC20":[824],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1082]},"id":825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":311,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":903,"src":"131:36:3","symbolAliases":[{"foreign":{"id":312,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1083,"src":"168:63:3","symbolAliases":[{"foreign":{"id":314,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"176:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1149,"src":"232:48:3","symbolAliases":[{"foreign":{"id":316,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"240:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":310,"src":"281:65:3","symbolAliases":[{"foreign":{"id":318,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"289:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":321,"name":"Context","nameLocations":["1133:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1148,"src":"1133:7:3"},"id":322,"nodeType":"InheritanceSpecifier","src":"1133:7:3"},{"baseName":{"id":323,"name":"IERC20","nameLocations":["1142:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1142:6:3"},"id":324,"nodeType":"InheritanceSpecifier","src":"1142:6:3"},{"baseName":{"id":325,"name":"IERC20Metadata","nameLocations":["1150:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"1150:14:3"},"id":326,"nodeType":"InheritanceSpecifier","src":"1150:14:3"},{"baseName":{"id":327,"name":"IERC20Errors","nameLocations":["1166:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":214,"src":"1166:12:3"},"id":328,"nodeType":"InheritanceSpecifier","src":"1166:12:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"348:757:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":824,"linearizedBaseContracts":[824,214,1082,902,1148],"name":"ERC20","nameLocation":"1124:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":332,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:3","nodeType":"VariableDeclaration","scope":824,"src":"1185:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"1201:7:3","keyType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":338,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:3","nodeType":"VariableDeclaration","scope":824,"src":"1245:83:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":337,"keyName":"account","keyNameLocation":"1261:7:3","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":336,"keyName":"spender","keyNameLocation":"1288:7:3","keyType":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":340,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:3","nodeType":"VariableDeclaration","scope":824,"src":"1335:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":342,"mutability":"mutable","name":"_name","nameLocation":"1385:5:3","nodeType":"VariableDeclaration","scope":824,"src":"1370:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":344,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:3","nodeType":"VariableDeclaration","scope":824,"src":"1396:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":343,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":360,"nodeType":"Block","src":"1638:57:3","statements":[{"expression":{"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":352,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1648:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":353,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1656:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":355,"nodeType":"ExpressionStatement","src":"1648:13:3"},{"expression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":356,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1671:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":357,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1681:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":359,"nodeType":"ExpressionStatement","src":"1671:17:3"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"1425:152:3","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":361,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"name_","nameLocation":"1608:5:3","nodeType":"VariableDeclaration","scope":361,"src":"1594:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":346,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:3","nodeType":"VariableDeclaration","scope":361,"src":"1615:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:3"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"1638:0:3"},"scope":824,"src":"1582:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1069],"body":{"id":369,"nodeType":"Block","src":"1820:29:3","statements":[{"expression":{"id":367,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1837:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":366,"id":368,"nodeType":"Return","src":"1830:12:3"}]},"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"1701:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:3","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"1773:2:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"1805:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":364,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:3"},"scope":824,"src":"1760:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1075],"body":{"id":378,"nodeType":"Block","src":"2024:31:3","statements":[{"expression":{"id":376,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2041:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":375,"id":377,"nodeType":"Return","src":"2034:14:3"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"1855:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":379,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:3","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"1977:2:3"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":379,"src":"2009:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":373,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:3"},"scope":824,"src":"1962:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1081],"body":{"id":387,"nodeType":"Block","src":"2744:26:3","statements":[{"expression":{"hexValue":"3138","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":384,"id":386,"nodeType":"Return","src":"2754:9:3"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2061:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":388,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:3","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"2705:2:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"2737:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":382,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:3"},"scope":824,"src":"2688:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[851],"body":{"id":396,"nodeType":"Block","src":"2864:36:3","statements":[{"expression":{"id":394,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"2881:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":393,"id":395,"nodeType":"Return","src":"2874:19:3"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"2776:22:3","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":397,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2812:11:3","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"2823:2:3"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"2855:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:9:3"},"scope":824,"src":"2803:97:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[859],"body":{"id":409,"nodeType":"Block","src":"3007:42:3","statements":[{"expression":{"baseExpression":{"id":405,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3024:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":407,"indexExpression":{"id":406,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3034:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3024:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":404,"id":408,"nodeType":"Return","src":"3017:25:3"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"2906:22:3","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":410,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2942:9:3","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"account","nameLocation":"2960:7:3","nodeType":"VariableDeclaration","scope":410,"src":"2952:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2951:17:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"2998:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2997:9:3"},"scope":824,"src":"2933:116:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[869],"body":{"id":433,"nodeType":"Block","src":"3319:103:3","statements":[{"assignments":[421],"declarations":[{"constant":false,"id":421,"mutability":"mutable","name":"owner","nameLocation":"3337:5:3","nodeType":"VariableDeclaration","scope":433,"src":"3329:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":424,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3345:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3329:28:3"},{"expression":{"arguments":[{"id":426,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"3377:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"3384:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3388:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":425,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3367:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"3367:27:3"},{"expression":{"hexValue":"74727565","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3411:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":419,"id":432,"nodeType":"Return","src":"3404:11:3"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"3055:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":434,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3253:8:3","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"to","nameLocation":"3270:2:3","nodeType":"VariableDeclaration","scope":434,"src":"3262:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"value","nameLocation":"3282:5:3","nodeType":"VariableDeclaration","scope":434,"src":"3274:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3274:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3261:27:3"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":434,"src":"3313:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"3313:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3312:6:3"},"scope":824,"src":"3244:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[879],"body":{"id":450,"nodeType":"Block","src":"3544:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":444,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3561:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":446,"indexExpression":{"id":445,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3573:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":448,"indexExpression":{"id":447,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"3580:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":443,"id":449,"nodeType":"Return","src":"3554:34:3"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"3428:22:3","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":451,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3464:9:3","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"3482:5:3","nodeType":"VariableDeclaration","scope":451,"src":"3474:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"spender","nameLocation":"3497:7:3","nodeType":"VariableDeclaration","scope":451,"src":"3489:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3473:32:3"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":451,"src":"3535:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3534:9:3"},"scope":824,"src":"3455:140:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[889],"body":{"id":474,"nodeType":"Block","src":"3981:107:3","statements":[{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"owner","nameLocation":"3999:5:3","nodeType":"VariableDeclaration","scope":474,"src":"3991:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":465,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":463,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4007:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3991:28:3"},{"expression":{"arguments":[{"id":467,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4038:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4045:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"4054:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":466,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"4029:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"4029:31:3"},{"expression":{"hexValue":"74727565","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4077:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":460,"id":473,"nodeType":"Return","src":"4070:11:3"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"3601:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3911:7:3","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"spender","nameLocation":"3927:7:3","nodeType":"VariableDeclaration","scope":475,"src":"3919:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"value","nameLocation":"3944:5:3","nodeType":"VariableDeclaration","scope":475,"src":"3936:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:32:3"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"3975:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":458,"name":"bool","nodeType":"ElementaryTypeName","src":"3975:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3974:6:3"},"scope":824,"src":"3902:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[901],"body":{"id":506,"nodeType":"Block","src":"4773:151:3","statements":[{"assignments":[488],"declarations":[{"constant":false,"id":488,"mutability":"mutable","name":"spender","nameLocation":"4791:7:3","nodeType":"VariableDeclaration","scope":506,"src":"4783:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"4783:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":491,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":489,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4801:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4783:30:3"},{"expression":{"arguments":[{"id":493,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4839:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"4845:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4854:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":492,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"4823:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"4823:37:3"},{"expression":{"arguments":[{"id":499,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4880:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"4886:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4890:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4870:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"4870:26:3"},{"expression":{"hexValue":"74727565","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4913:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":486,"id":505,"nodeType":"Return","src":"4906:11:3"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"4094:581:3","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4689:12:3","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"from","nameLocation":"4710:4:3","nodeType":"VariableDeclaration","scope":507,"src":"4702:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"4702:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"to","nameLocation":"4724:2:3","nodeType":"VariableDeclaration","scope":507,"src":"4716:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"value","nameLocation":"4736:5:3","nodeType":"VariableDeclaration","scope":507,"src":"4728:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:41:3"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"4767:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":484,"name":"bool","nodeType":"ElementaryTypeName","src":"4767:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4766:6:3"},"scope":824,"src":"4680:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":553,"nodeType":"Block","src":"5366:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":517,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5380:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5396:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5388:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:3","typeDescriptions":{}}},"id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5380:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":531,"nodeType":"IfStatement","src":"5376:86:3","trueBody":{"id":530,"nodeType":"Block","src":"5400:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5448:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5440:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:3","typeDescriptions":{}}},"id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":523,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"5421:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":529,"nodeType":"RevertStatement","src":"5414:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5475:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5489:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5481:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:3","typeDescriptions":{}}},"id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5475:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"5471:86:3","trueBody":{"id":545,"nodeType":"Block","src":"5493:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:3","typeDescriptions":{}}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":538,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5514:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"RevertStatement","src":"5507:39:3"}]}},{"expression":{"arguments":[{"id":548,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5574:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":549,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5580:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5584:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":547,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5566:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"ExpressionStatement","src":"5566:24:3"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"4930:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":554,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5306:9:3","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"5324:4:3","nodeType":"VariableDeclaration","scope":554,"src":"5316:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"5338:2:3","nodeType":"VariableDeclaration","scope":554,"src":"5330:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"5330:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"value","nameLocation":"5350:5:3","nodeType":"VariableDeclaration","scope":554,"src":"5342:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5315:41:3"},"returnParameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"5366:0:3"},"scope":824,"src":"5297:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"5987:1032:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6001:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6009:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"6009:7:3","typeDescriptions":{}}},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6001:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":601,"nodeType":"Block","src":"6175:362:3","statements":[{"assignments":[576],"declarations":[{"constant":false,"id":576,"mutability":"mutable","name":"fromBalance","nameLocation":"6197:11:3","nodeType":"VariableDeclaration","scope":601,"src":"6189:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"6189:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":580,"initialValue":{"baseExpression":{"id":577,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6211:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":579,"indexExpression":{"id":578,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6221:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6211:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6189:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":581,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6244:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6258:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":591,"nodeType":"IfStatement","src":"6240:115:3","trueBody":{"id":590,"nodeType":"Block","src":"6265:90:3","statements":[{"errorCall":{"arguments":[{"id":585,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6315:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6321:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6334:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":584,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6290:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":589,"nodeType":"RevertStatement","src":"6283:57:3"}]}},{"id":600,"nodeType":"UncheckedBlock","src":"6368:159:3","statements":[{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":592,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6475:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":594,"indexExpression":{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6485:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6493:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6507:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6493:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":599,"nodeType":"ExpressionStatement","src":"6475:37:3"}]}]},"id":602,"nodeType":"IfStatement","src":"5997:540:3","trueBody":{"id":574,"nodeType":"Block","src":"6021:148:3","statements":[{"expression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":570,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6137:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6153:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":573,"nodeType":"ExpressionStatement","src":"6137:21:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6551:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"6557:7:3","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6557:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6551:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":622,"nodeType":"Block","src":"6766:206:3","statements":[{"id":621,"nodeType":"UncheckedBlock","src":"6780:182:3","statements":[{"expression":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":615,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6925:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":617,"indexExpression":{"id":616,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6935:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6925:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6942:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6925:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":620,"nodeType":"ExpressionStatement","src":"6925:22:3"}]}]},"id":623,"nodeType":"IfStatement","src":"6547:425:3","trueBody":{"id":614,"nodeType":"Block","src":"6569:191:3","statements":[{"id":613,"nodeType":"UncheckedBlock","src":"6583:167:3","statements":[{"expression":{"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":609,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6714:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6730:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6714:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":612,"nodeType":"ExpressionStatement","src":"6714:21:3"}]}]}},{"eventCall":{"arguments":[{"id":625,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6996:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7002:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7006:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":624,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"6987:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6987:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"EmitStatement","src":"6982:30:3"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"5603:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5921:7:3","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"from","nameLocation":"5937:4:3","nodeType":"VariableDeclaration","scope":631,"src":"5929:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"to","nameLocation":"5951:2:3","nodeType":"VariableDeclaration","scope":631,"src":"5943:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"5943:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"value","nameLocation":"5963:5:3","nodeType":"VariableDeclaration","scope":631,"src":"5955:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5928:41:3"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[],"src":"5987:0:3"},"scope":824,"src":"5912:1107:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"7418:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7432:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7451:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7443:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"7443:7:3","typeDescriptions":{}}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7443:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7432:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"IfStatement","src":"7428:91:3","trueBody":{"id":652,"nodeType":"Block","src":"7455:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7505:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7497:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:3","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7497:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"7476:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":651,"nodeType":"RevertStatement","src":"7469:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7544:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7536:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:3","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7536:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7548:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"7557:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7528:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7528:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"7528:35:3"}]},"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"7025:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7371:5:3","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"account","nameLocation":"7385:7:3","nodeType":"VariableDeclaration","scope":664,"src":"7377:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"7377:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"value","nameLocation":"7402:5:3","nodeType":"VariableDeclaration","scope":664,"src":"7394:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7376:32:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"7418:0:3"},"scope":824,"src":"7362:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":696,"nodeType":"Block","src":"7944:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":672,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"7958:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7969:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"7969:7:3","typeDescriptions":{}}},"id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7969:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7958:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":686,"nodeType":"IfStatement","src":"7954:89:3","trueBody":{"id":685,"nodeType":"Block","src":"7981:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8021:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"8021:7:3","typeDescriptions":{}}},"id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":678,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"8002:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"RevertStatement","src":"7995:37:3"}]}},{"expression":{"arguments":[{"id":688,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8060:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8077:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:3","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"8081:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":687,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8052:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"8052:35:3"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"7576:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":697,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7897:5:3","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"account","nameLocation":"7911:7:3","nodeType":"VariableDeclaration","scope":697,"src":"7903:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"7903:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"value","nameLocation":"7928:5:3","nodeType":"VariableDeclaration","scope":697,"src":"7920:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7902:32:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"7944:0:3"},"scope":824,"src":"7888:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":714,"nodeType":"Block","src":"8704:54:3","statements":[{"expression":{"arguments":[{"id":708,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"8723:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":709,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"8730:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"8739:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8746:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":707,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"8714:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8714:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"8714:37:3"}]},"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"8100:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8639:8:3","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"owner","nameLocation":"8656:5:3","nodeType":"VariableDeclaration","scope":715,"src":"8648:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"spender","nameLocation":"8671:7:3","nodeType":"VariableDeclaration","scope":715,"src":"8663:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"value","nameLocation":"8688:5:3","nodeType":"VariableDeclaration","scope":715,"src":"8680:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"8680:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8647:47:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"8704:0:3"},"scope":824,"src":"8630:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":774,"nodeType":"Block","src":"9703:334:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9717:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9726:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:3","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9717:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":741,"nodeType":"IfStatement","src":"9713:89:3","trueBody":{"id":740,"nodeType":"Block","src":"9738:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9788:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"9780:7:3","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":733,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"9759:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"RevertStatement","src":"9752:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":742,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"9815:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9834:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9826:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"9826:7:3","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9826:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9815:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":756,"nodeType":"IfStatement","src":"9811:90:3","trueBody":{"id":755,"nodeType":"Block","src":"9838:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9887:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9879:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"9879:7:3","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9879:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":748,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"9859:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9859:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":754,"nodeType":"RevertStatement","src":"9852:38:3"}]}},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":757,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"9910:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":760,"indexExpression":{"id":758,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9922:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9910:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":761,"indexExpression":{"id":759,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"9929:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9910:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"9940:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9910:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"nodeType":"ExpressionStatement","src":"9910:35:3"},{"condition":{"id":765,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"9959:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"nodeType":"IfStatement","src":"9955:76:3","trueBody":{"id":772,"nodeType":"Block","src":"9970:61:3","statements":[{"eventCall":{"arguments":[{"id":767,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9998:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10005:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10014:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":766,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"9989:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"EmitStatement","src":"9984:36:3"}]}}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"8764:836:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":775,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9614:8:3","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"owner","nameLocation":"9631:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9623:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"9623:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"spender","nameLocation":"9646:7:3","nodeType":"VariableDeclaration","scope":775,"src":"9638:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"value","nameLocation":"9663:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9655:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"emitEvent","nameLocation":"9675:9:3","nodeType":"VariableDeclaration","scope":775,"src":"9670:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":723,"name":"bool","nodeType":"ElementaryTypeName","src":"9670:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9622:63:3"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"9703:0:3"},"scope":824,"src":"9605:432:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"10408:387:3","statements":[{"assignments":[786],"declarations":[{"constant":false,"id":786,"mutability":"mutable","name":"currentAllowance","nameLocation":"10426:16:3","nodeType":"VariableDeclaration","scope":822,"src":"10418:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":791,"initialValue":{"arguments":[{"id":788,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10455:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10462:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":787,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"10445:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10445:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10418:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10484:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10508:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"10508:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":793,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10503:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10503:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10517:3:3","memberName":"max","nodeType":"MemberAccess","src":"10503:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10484:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"IfStatement","src":"10480:309:3","trueBody":{"id":820,"nodeType":"Block","src":"10522:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":799,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10540:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10559:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"10536:130:3","trueBody":{"id":808,"nodeType":"Block","src":"10566:100:3","statements":[{"errorCall":{"arguments":[{"id":803,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10618:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10627:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10645:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":802,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"10591:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"RevertStatement","src":"10584:67:3"}]}},{"id":819,"nodeType":"UncheckedBlock","src":"10679:100:3","statements":[{"expression":{"arguments":[{"id":811,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10716:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10723:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10732:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10751:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10732:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10758:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":810,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"10707:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10707:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"10707:57:3"}]}]}}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"10043:271:3","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10328:15:3","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"owner","nameLocation":"10352:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10344:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"10344:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"spender","nameLocation":"10367:7:3","nodeType":"VariableDeclaration","scope":823,"src":"10359:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"value","nameLocation":"10384:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10376:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"10376:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10343:47:3"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"10408:0:3"},"scope":824,"src":"10319:476:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":825,"src":"1106:9691:3","usedErrors":[184,189,194,203,208,213],"usedEvents":[836,845]}],"src":"105:10693:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[902]},"id":903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":826,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"133:71:4","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":902,"linearizedBaseContracts":[902],"name":"IERC20","nameLocation":"215:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"228:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":836,"name":"Transfer","nameLocation":"397:8:4","nodeType":"EventDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:4","nodeType":"VariableDeclaration","scope":836,"src":"406:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:4","nodeType":"VariableDeclaration","scope":836,"src":"428:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:4","nodeType":"VariableDeclaration","scope":836,"src":"448:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:4"},"src":"391:72:4"},{"anonymous":false,"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"469:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":845,"name":"Approval","nameLocation":"628:8:4","nodeType":"EventDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:4","nodeType":"VariableDeclaration","scope":845,"src":"637:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:4","nodeType":"VariableDeclaration","scope":845,"src":"660:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:4","nodeType":"VariableDeclaration","scope":845,"src":"685:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:4"},"src":"622:78:4"},{"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"706:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":851,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:4","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"796:2:4"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"822:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:4"},"scope":902,"src":"776:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"837:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":859,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:4","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"account","nameLocation":"940:7:4","nodeType":"VariableDeclaration","scope":859,"src":"932:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:4"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"972:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:4"},"scope":902,"src":"913:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"987:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":869,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:4","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"to","nameLocation":"1231:2:4","nodeType":"VariableDeclaration","scope":869,"src":"1223:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"value","nameLocation":"1243:5:4","nodeType":"VariableDeclaration","scope":869,"src":"1235:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:4"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":869,"src":"1268:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":866,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:4"},"scope":902,"src":"1205:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"1280:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":879,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:4","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"owner","nameLocation":"1576:5:4","nodeType":"VariableDeclaration","scope":879,"src":"1568:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"spender","nameLocation":"1591:7:4","nodeType":"VariableDeclaration","scope":879,"src":"1583:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:4"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"1623:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:4"},"scope":902,"src":"1549:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"1638:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:4","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"spender","nameLocation":"2335:7:4","nodeType":"VariableDeclaration","scope":889,"src":"2327:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"value","nameLocation":"2352:5:4","nodeType":"VariableDeclaration","scope":889,"src":"2344:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:4"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"2377:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":886,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:4"},"scope":902,"src":"2310:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"2389:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":901,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:4","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"from","nameLocation":"2721:4:4","nodeType":"VariableDeclaration","scope":901,"src":"2713:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"to","nameLocation":"2735:2:4","nodeType":"VariableDeclaration","scope":901,"src":"2727:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"value","nameLocation":"2747:5:4","nodeType":"VariableDeclaration","scope":901,"src":"2739:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:4"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"2772:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":898,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:4"},"scope":902,"src":"2691:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":903,"src":"205:2575:4","usedErrors":[],"usedEvents":[836,845]}],"src":"106:2675:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3359],"EIP712":[3586],"ERC20":[824],"ERC20Permit":[1056],"IERC20Permit":[1118],"Nonces":[1216]},"id":1057,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":904,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":1119,"src":"148:48:5","symbolAliases":[{"foreign":{"id":905,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"156:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":825,"src":"197:35:5","symbolAliases":[{"foreign":{"id":907,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"205:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":3360,"src":"233:60:5","symbolAliases":[{"foreign":{"id":909,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"241:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":912,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":3587,"src":"294:62:5","symbolAliases":[{"foreign":{"id":911,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"302:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":1217,"src":"357:49:5","symbolAliases":[{"foreign":{"id":913,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"365:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":916,"name":"ERC20","nameLocations":["931:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"931:5:5"},"id":917,"nodeType":"InheritanceSpecifier","src":"931:5:5"},{"baseName":{"id":918,"name":"IERC20Permit","nameLocations":["938:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":1118,"src":"938:12:5"},"id":919,"nodeType":"InheritanceSpecifier","src":"938:12:5"},{"baseName":{"id":920,"name":"EIP712","nameLocations":["952:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3586,"src":"952:6:5"},"id":921,"nodeType":"InheritanceSpecifier","src":"952:6:5"},{"baseName":{"id":922,"name":"Nonces","nameLocations":["960:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"960:6:5"},"id":923,"nodeType":"InheritanceSpecifier","src":"960:6:5"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"408:489:5","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1056,"linearizedBaseContracts":[1056,1216,3586,172,1118,824,214,1082,902,1148],"name":"ERC20Permit","nameLocation":"916:11:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":928,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:5","nodeType":"VariableDeclaration","scope":1056,"src":"973:146:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":925,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"1126:52:5","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":933,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:5","nodeType":"ErrorDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:5","nodeType":"VariableDeclaration","scope":933,"src":"1213:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:5"},"src":"1183:48:5"},{"documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"1237:45:5","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":940,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:5","nodeType":"ErrorDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"signer","nameLocation":"1322:6:5","nodeType":"VariableDeclaration","scope":940,"src":"1314:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"owner","nameLocation":"1338:5:5","nodeType":"VariableDeclaration","scope":940,"src":"1330:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:5"},"src":"1287:58:5"},{"body":{"id":950,"nodeType":"Block","src":"1627:2:5","statements":[]},"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"1351:221:5","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":951,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":946,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"1616:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":948,"kind":"baseConstructorSpecifier","modifierName":{"id":945,"name":"EIP712","nameLocations":["1609:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3586,"src":"1609:6:5"},"nodeType":"ModifierInvocation","src":"1609:17:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"name","nameLocation":"1603:4:5","nodeType":"VariableDeclaration","scope":951,"src":"1589:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":942,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:5"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"1627:0:5"},"scope":1056,"src":"1577:52:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1103],"body":{"id":1027,"nodeType":"Block","src":"1857:483:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":969,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1871:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1877:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"1871:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":971,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"1889:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1871:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":978,"nodeType":"IfStatement","src":"1867:97:5","trueBody":{"id":977,"nodeType":"Block","src":"1899:65:5","statements":[{"errorCall":{"arguments":[{"id":974,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"1944:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":973,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"1920:23:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1920:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":976,"nodeType":"RevertStatement","src":"1913:40:5"}]}},{"assignments":[980],"declarations":[{"constant":false,"id":980,"mutability":"mutable","name":"structHash","nameLocation":"1982:10:5","nodeType":"VariableDeclaration","scope":1027,"src":"1974:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1974:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":994,"initialValue":{"arguments":[{"arguments":[{"id":984,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"2016:15:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":985,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2033:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":986,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2040:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"2049:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":989,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2066:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":988,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"2056:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2056:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":991,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"2074:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":982,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2005:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2009:6:5","memberName":"encode","nodeType":"MemberAccess","src":"2005:10:5","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2005:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":981,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1995:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1995:89:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1974:110:5"},{"assignments":[996],"declarations":[{"constant":false,"id":996,"mutability":"mutable","name":"hash","nameLocation":"2103:4:5","nodeType":"VariableDeclaration","scope":1027,"src":"2095:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2095:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1000,"initialValue":{"arguments":[{"id":998,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"2127:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":997,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"2110:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2110:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2095:43:5"},{"assignments":[1002],"declarations":[{"constant":false,"id":1002,"mutability":"mutable","name":"signer","nameLocation":"2157:6:5","nodeType":"VariableDeclaration","scope":1027,"src":"2149:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1010,"initialValue":{"arguments":[{"id":1005,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2180:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1006,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2186:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1007,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"2189:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1008,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"2192:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1003,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"2166:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3359_$","typeString":"type(library ECDSA)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2172:7:5","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3309,"src":"2166:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2166:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2149:45:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1011,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"2208:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1012,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2218:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2208:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1020,"nodeType":"IfStatement","src":"2204:88:5","trueBody":{"id":1019,"nodeType":"Block","src":"2225:67:5","statements":[{"errorCall":{"arguments":[{"id":1015,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"2267:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1016,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2275:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1014,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"2246:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1018,"nodeType":"RevertStatement","src":"2239:42:5"}]}},{"expression":{"arguments":[{"id":1022,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2311:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1023,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2318:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"2327:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1021,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"2302:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2302:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"ExpressionStatement","src":"2302:31:5"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"1635:28:5","text":"@inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1028,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1677:6:5","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"owner","nameLocation":"1701:5:5","nodeType":"VariableDeclaration","scope":1028,"src":"1693:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"1693:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"spender","nameLocation":"1724:7:5","nodeType":"VariableDeclaration","scope":1028,"src":"1716:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"1716:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"value","nameLocation":"1749:5:5","nodeType":"VariableDeclaration","scope":1028,"src":"1741:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"1741:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"deadline","nameLocation":"1772:8:5","nodeType":"VariableDeclaration","scope":1028,"src":"1764:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"v","nameLocation":"1796:1:5","nodeType":"VariableDeclaration","scope":1028,"src":"1790:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":961,"name":"uint8","nodeType":"ElementaryTypeName","src":"1790:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"r","nameLocation":"1815:1:5","nodeType":"VariableDeclaration","scope":1028,"src":"1807:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1807:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"s","nameLocation":"1834:1:5","nodeType":"VariableDeclaration","scope":1028,"src":"1826:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1826:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1683:158:5"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[],"src":"1857:0:5"},"scope":1056,"src":"1668:672:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1111,1175],"body":{"id":1044,"nodeType":"Block","src":"2479:43:5","statements":[{"expression":{"arguments":[{"id":1041,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"2509:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1039,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2496:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1056_$","typeString":"type(contract super ERC20Permit)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2502:6:5","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1175,"src":"2496:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2496:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1038,"id":1043,"nodeType":"Return","src":"2489:26:5"}]},"documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"2346:28:5","text":"@inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1045,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2388:6:5","nodeType":"FunctionDefinition","overrides":{"id":1035,"nodeType":"OverrideSpecifier","overrides":[{"id":1033,"name":"IERC20Permit","nameLocations":["2439:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":1118,"src":"2439:12:5"},{"id":1034,"name":"Nonces","nameLocations":["2453:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"2453:6:5"}],"src":"2430:30:5"},"parameters":{"id":1032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"mutability":"mutable","name":"owner","nameLocation":"2403:5:5","nodeType":"VariableDeclaration","scope":1045,"src":"2395:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2394:15:5"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1045,"src":"2470:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2470:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2469:9:5"},"scope":1056,"src":"2379:143:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1117],"body":{"id":1054,"nodeType":"Block","src":"2682:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1051,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"2699:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2699:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1050,"id":1053,"nodeType":"Return","src":"2692:27:5"}]},"documentation":{"id":1046,"nodeType":"StructuredDocumentation","src":"2528:28:5","text":"@inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2623:16:5","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[],"src":"2639:2:5"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1055,"src":"2673:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2673:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2672:9:5"},"scope":1056,"src":"2614:112:5","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1057,"src":"898:1830:5","usedErrors":[184,189,194,203,208,213,933,940,1158,1282,1284,3022,3027,3032],"usedEvents":[152,836,845]}],"src":"122:2607:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[902],"IERC20Metadata":[1082]},"id":1083,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1058,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1060,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1083,"sourceUnit":903,"src":"151:37:6","symbolAliases":[{"foreign":{"id":1059,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"159:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1062,"name":"IERC20","nameLocations":["306:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"306:6:6"},"id":1063,"nodeType":"InheritanceSpecifier","src":"306:6:6"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"190:87:6","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1082,"linearizedBaseContracts":[1082,902],"name":"IERC20Metadata","nameLocation":"288:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"319:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1069,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:6","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[],"src":"391:2:6"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1069,"src":"417:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1066,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:6"},"scope":1082,"src":"378:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"438:56:6","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1075,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:6","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"514:2:6"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1075,"src":"540:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1072,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:6"},"scope":1082,"src":"499:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"561:65:6","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1081,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:6","nodeType":"FunctionDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[],"src":"648:2:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1081,"src":"674:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1078,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:6"},"scope":1082,"src":"631:50:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1083,"src":"278:405:6","usedErrors":[],"usedEvents":[836,845]}],"src":"125:559:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1118]},"id":1119,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1084,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"123:25:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"150:1965:7","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1118,"linearizedBaseContracts":[1118],"name":"IERC20Permit","nameLocation":"2126:12:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"2145:850:7","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1103,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3009:6:7","nodeType":"FunctionDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"owner","nameLocation":"3033:5:7","nodeType":"VariableDeclaration","scope":1103,"src":"3025:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"3025:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"spender","nameLocation":"3056:7:7","nodeType":"VariableDeclaration","scope":1103,"src":"3048:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"3048:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"value","nameLocation":"3081:5:7","nodeType":"VariableDeclaration","scope":1103,"src":"3073:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"3073:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"deadline","nameLocation":"3104:8:7","nodeType":"VariableDeclaration","scope":1103,"src":"3096:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"3096:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"v","nameLocation":"3128:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"3122:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1095,"name":"uint8","nodeType":"ElementaryTypeName","src":"3122:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"r","nameLocation":"3147:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"3139:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3139:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"s","nameLocation":"3166:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"3158:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3158:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3015:158:7"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[],"src":"3182:0:7"},"scope":1118,"src":"3000:183:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"3189:294:7","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1111,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3497:6:7","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"owner","nameLocation":"3512:5:7","nodeType":"VariableDeclaration","scope":1111,"src":"3504:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"3504:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3503:15:7"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1111,"src":"3542:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3542:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3541:9:7"},"scope":1118,"src":"3488:63:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"3557:128:7","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1117,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3752:16:7","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"3768:2:7"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1117,"src":"3794:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:9:7"},"scope":1118,"src":"3743:60:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1119,"src":"2116:1689:7","usedErrors":[],"usedEvents":[]}],"src":"123:3683:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1148]},"id":1149,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1120,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"127:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1148,"linearizedBaseContracts":[1148],"name":"Context","nameLocation":"642:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1129,"nodeType":"Block","src":"718:34:8","statements":[{"expression":{"expression":{"id":1126,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1125,"id":1128,"nodeType":"Return","src":"728:17:8"}]},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:8","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[],"src":"675:2:8"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1130,"src":"709:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:8"},"scope":1148,"src":"656:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1138,"nodeType":"Block","src":"825:32:8","statements":[{"expression":{"expression":{"id":1135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:8","memberName":"data","nodeType":"MemberAccess","src":"842:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1134,"id":1137,"nodeType":"Return","src":"835:15:8"}]},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:8","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"775:2:8"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"809:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1132,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:8"},"scope":1148,"src":"758:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1146,"nodeType":"Block","src":"935:25:8","statements":[{"expression":{"hexValue":"30","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1143,"id":1145,"nodeType":"Return","src":"945:8:8"}]},"id":1147,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:8","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[],"src":"892:2:8"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1147,"src":"926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:8"},"scope":1148,"src":"863:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1149,"src":"624:338:8","usedErrors":[],"usedEvents":[]}],"src":"101:862:8"},"id":8},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1216]},"id":1217,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1150,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"125:83:9","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1216,"linearizedBaseContracts":[1216],"name":"Nonces","nameLocation":"227:6:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"240:90:9","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1158,"name":"InvalidAccountNonce","nameLocation":"341:19:9","nodeType":"ErrorDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"account","nameLocation":"369:7:9","nodeType":"VariableDeclaration","scope":1158,"src":"361:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:9","nodeType":"VariableDeclaration","scope":1158,"src":"378:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:9"},"src":"335:65:9"},{"constant":false,"id":1162,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:9","nodeType":"VariableDeclaration","scope":1216,"src":"406:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1161,"keyName":"account","keyNameLocation":"422:7:9","keyType":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1174,"nodeType":"Block","src":"607:38:9","statements":[{"expression":{"baseExpression":{"id":1170,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"624:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1172,"indexExpression":{"id":1171,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"632:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1169,"id":1173,"nodeType":"Return","src":"617:21:9"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"464:69:9","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1175,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:9","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"owner","nameLocation":"562:5:9","nodeType":"VariableDeclaration","scope":1175,"src":"554:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:9"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1175,"src":"598:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:9"},"scope":1216,"src":"538:107:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1189,"nodeType":"Block","src":"828:326:9","statements":[{"id":1188,"nodeType":"UncheckedBlock","src":"1031:117:9","statements":[{"expression":{"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:9","subExpression":{"baseExpression":{"id":1183,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"1121:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1185,"indexExpression":{"id":1184,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"1129:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1182,"id":1187,"nodeType":"Return","src":"1114:23:9"}]}]},"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"651:103:9","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1190,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:9","nodeType":"FunctionDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"owner","nameLocation":"786:5:9","nodeType":"VariableDeclaration","scope":1190,"src":"778:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:9"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1190,"src":"819:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:9"},"scope":1216,"src":"759:395:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1214,"nodeType":"Block","src":"1338:149:9","statements":[{"assignments":[1199],"declarations":[{"constant":false,"id":1199,"mutability":"mutable","name":"current","nameLocation":"1356:7:9","nodeType":"VariableDeclaration","scope":1214,"src":"1348:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1203,"initialValue":{"arguments":[{"id":1201,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"1376:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1200,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"1366:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1204,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"1396:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1205,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"1405:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1213,"nodeType":"IfStatement","src":"1392:89:9","trueBody":{"id":1212,"nodeType":"Block","src":"1414:67:9","statements":[{"errorCall":{"arguments":[{"id":1208,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"1455:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"1462:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1207,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"1435:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1211,"nodeType":"RevertStatement","src":"1428:42:9"}]}}]},"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"1160:100:9","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:9","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"owner","nameLocation":"1299:5:9","nodeType":"VariableDeclaration","scope":1215,"src":"1291:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:9","nodeType":"VariableDeclaration","scope":1215,"src":"1306:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:9"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[],"src":"1338:0:9"},"scope":1216,"src":"1265:222:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1217,"src":"209:1280:9","usedErrors":[1158],"usedEvents":[]}],"src":"99:1391:9"},"id":9},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1268]},"id":1269,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1218,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"125:489:10","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1268,"linearizedBaseContracts":[1268],"name":"Panic","nameLocation":"665:5:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1220,"nodeType":"StructuredDocumentation","src":"677:36:10","text":"@dev generic / unspecified error"},"id":1223,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:10","nodeType":"VariableDeclaration","scope":1268,"src":"718:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1224,"nodeType":"StructuredDocumentation","src":"764:37:10","text":"@dev used by the assert() builtin"},"id":1227,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:10","nodeType":"VariableDeclaration","scope":1268,"src":"806:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1225,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1228,"nodeType":"StructuredDocumentation","src":"851:41:10","text":"@dev arithmetic underflow or overflow"},"id":1231,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:10","nodeType":"VariableDeclaration","scope":1268,"src":"897:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:10","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"950:35:10","text":"@dev division or modulo by zero"},"id":1235,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:10","nodeType":"VariableDeclaration","scope":1268,"src":"990:49:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1236,"nodeType":"StructuredDocumentation","src":"1045:30:10","text":"@dev enum conversion error"},"id":1239,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:10","nodeType":"VariableDeclaration","scope":1268,"src":"1080:54:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:10","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1240,"nodeType":"StructuredDocumentation","src":"1140:36:10","text":"@dev invalid encoding in storage"},"id":1243,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:10","nodeType":"VariableDeclaration","scope":1268,"src":"1181:55:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:10","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"1242:24:10","text":"@dev empty array pop"},"id":1247,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:10","nodeType":"VariableDeclaration","scope":1268,"src":"1271:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:10","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1248,"nodeType":"StructuredDocumentation","src":"1325:35:10","text":"@dev array out of bounds access"},"id":1251,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:10","nodeType":"VariableDeclaration","scope":1268,"src":"1365:52:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:10","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"1423:65:10","text":"@dev resource error (too large allocation or too large array)"},"id":1255,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:10","nodeType":"VariableDeclaration","scope":1268,"src":"1493:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:10","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"1546:42:10","text":"@dev calling invalid internal function"},"id":1259,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:10","nodeType":"VariableDeclaration","scope":1268,"src":"1593:58:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:10","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1266,"nodeType":"Block","src":"1819:151:10","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:10","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:10"},"nodeType":"YulFunctionCall","src":"1868:24:10"},"nodeType":"YulExpressionStatement","src":"1868:24:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:10","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:10"},"nodeType":"YulFunctionCall","src":"1905:18:10"},"nodeType":"YulExpressionStatement","src":"1905:18:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:10","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:10"},"nodeType":"YulFunctionCall","src":"1936:18:10"},"nodeType":"YulExpressionStatement","src":"1936:18:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1262,"isOffset":false,"isSlot":false,"src":"1918:4:10","valueSize":1}],"flags":["memory-safe"],"id":1265,"nodeType":"InlineAssembly","src":"1829:135:10"}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"1658:113:10","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1267,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:10","nodeType":"FunctionDefinition","parameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"code","nameLocation":"1799:4:10","nodeType":"VariableDeclaration","scope":1267,"src":"1791:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:10"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[],"src":"1819:0:10"},"scope":1268,"src":"1776:194:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1269,"src":"657:1315:10","usedErrors":[],"usedEvents":[]}],"src":"99:1874:10"},"id":10},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1274],"ShortStrings":[1485],"StorageSlot":[1609]},"id":1486,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1270,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1272,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1486,"sourceUnit":1610,"src":"132:46:11","symbolAliases":[{"foreign":{"id":1271,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"140:11:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1274,"name":"ShortString","nameLocation":"353:11:11","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:11","underlyingType":{"id":1273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"378:876:11","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1485,"linearizedBaseContracts":[1485],"name":"ShortStrings","nameLocation":"1263:12:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1278,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:11","nodeType":"VariableDeclaration","scope":1485,"src":"1345:111:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1282,"name":"StringTooLong","nameLocation":"1469:13:11","nodeType":"ErrorDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"str","nameLocation":"1490:3:11","nodeType":"VariableDeclaration","scope":1282,"src":"1483:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1279,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:11"},"src":"1463:32:11"},{"errorSelector":"b3512b0c","id":1284,"name":"InvalidShortString","nameLocation":"1506:18:11","nodeType":"ErrorDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[],"src":"1524:2:11"},"src":"1500:27:11"},{"body":{"id":1327,"nodeType":"Block","src":"1786:208:11","statements":[{"assignments":[1294],"declarations":[{"constant":false,"id":1294,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:11","nodeType":"VariableDeclaration","scope":1327,"src":"1796:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1293,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1299,"initialValue":{"arguments":[{"id":1297,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"1822:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1295,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:11","typeDescriptions":{}}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1300,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"1840:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:11","memberName":"length","nodeType":"MemberAccess","src":"1840:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:11","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1309,"nodeType":"IfStatement","src":"1836:72:11","trueBody":{"id":1308,"nodeType":"Block","src":"1858:50:11","statements":[{"errorCall":{"arguments":[{"id":1305,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"1893:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1304,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"1879:13:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1307,"nodeType":"RevertStatement","src":"1872:25:11"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1318,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"1965:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:11","typeDescriptions":{}}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:11","typeDescriptions":{}}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1321,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"1974:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:11","memberName":"length","nodeType":"MemberAccess","src":"1974:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:11","typeDescriptions":{}}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1310,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"1924:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"type(ShortString)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:11","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:11","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"functionReturnParameters":1292,"id":1326,"nodeType":"Return","src":"1917:70:11"}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"1533:170:11","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1328,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:11","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"str","nameLocation":"1745:3:11","nodeType":"VariableDeclaration","scope":1328,"src":"1731:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1286,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:11"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1328,"src":"1773:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1290,"nodeType":"UserDefinedTypeName","pathNode":{"id":1289,"name":"ShortString","nameLocations":["1773:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"1773:11:11"},"referencedDeclaration":1274,"src":"1773:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:11"},"scope":1485,"src":"1708:286:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1353,"nodeType":"Block","src":"2152:304:11","statements":[{"assignments":[1338],"declarations":[{"constant":false,"id":1338,"mutability":"mutable","name":"len","nameLocation":"2170:3:11","nodeType":"VariableDeclaration","scope":1353,"src":"2162:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1342,"initialValue":{"arguments":[{"id":1340,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2187:4:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"id":1339,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"2176:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:11"},{"assignments":[1344],"declarations":[{"constant":false,"id":1344,"mutability":"mutable","name":"str","nameLocation":"2294:3:11","nodeType":"VariableDeclaration","scope":1353,"src":"2280:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1343,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1349,"initialValue":{"arguments":[{"hexValue":"3332","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1345,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:11"},{"AST":{"nodeType":"YulBlock","src":"2349:81:11","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:11"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:11"},"nodeType":"YulFunctionCall","src":"2363:16:11"},"nodeType":"YulExpressionStatement","src":"2363:16:11"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:11"},"nodeType":"YulFunctionCall","src":"2399:14:11"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:11"},"nodeType":"YulFunctionCall","src":"2392:28:11"},"nodeType":"YulExpressionStatement","src":"2392:28:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":1338,"isOffset":false,"isSlot":false,"src":"2375:3:11","valueSize":1},{"declaration":1332,"isOffset":false,"isSlot":false,"src":"2415:4:11","valueSize":1},{"declaration":1344,"isOffset":false,"isSlot":false,"src":"2370:3:11","valueSize":1},{"declaration":1344,"isOffset":false,"isSlot":false,"src":"2403:3:11","valueSize":1}],"flags":["memory-safe"],"id":1350,"nodeType":"InlineAssembly","src":"2324:106:11"},{"expression":{"id":1351,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"2446:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1336,"id":1352,"nodeType":"Return","src":"2439:10:11"}]},"documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"2000:73:11","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:11","nodeType":"FunctionDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:11","nodeType":"VariableDeclaration","scope":1354,"src":"2096:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1331,"nodeType":"UserDefinedTypeName","pathNode":{"id":1330,"name":"ShortString","nameLocations":["2096:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2096:11:11"},"referencedDeclaration":1274,"src":"2096:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:11"},"returnParameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1354,"src":"2137:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1334,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:11"},"scope":1485,"src":"2078:378:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1385,"nodeType":"Block","src":"2598:175:11","statements":[{"assignments":[1364],"declarations":[{"constant":false,"id":1364,"mutability":"mutable","name":"result","nameLocation":"2616:6:11","nodeType":"VariableDeclaration","scope":1385,"src":"2608:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1374,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1369,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"2652:4:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"expression":{"id":1367,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"2633:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"type(ShortString)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:11","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:11","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:11","typeDescriptions":{}}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1375,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"2679:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:11","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1382,"nodeType":"IfStatement","src":"2675:69:11","trueBody":{"id":1381,"nodeType":"Block","src":"2692:52:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1378,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"2713:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1380,"nodeType":"RevertStatement","src":"2706:27:11"}]}},{"expression":{"id":1383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"2760:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1362,"id":1384,"nodeType":"Return","src":"2753:13:11"}]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"2462:61:11","text":" @dev Return the length of a `ShortString`."},"id":1386,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:11","nodeType":"FunctionDefinition","parameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:11","nodeType":"VariableDeclaration","scope":1386,"src":"2548:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1357,"nodeType":"UserDefinedTypeName","pathNode":{"id":1356,"name":"ShortString","nameLocations":["2548:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2548:11:11"},"referencedDeclaration":1274,"src":"2548:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:11"},"returnParameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1386,"src":"2589:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:11"},"scope":1485,"src":"2528:245:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1425,"nodeType":"Block","src":"2996:231:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"3016:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1397,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:11","typeDescriptions":{}}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:11","memberName":"length","nodeType":"MemberAccess","src":"3010:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1423,"nodeType":"Block","src":"3094:127:11","statements":[{"expression":{"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1412,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"3134:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1409,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"3108:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1609_$","typeString":"type(library StorageSlot)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:11","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1586,"src":"3108:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1506_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1506_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1505,"src":"3108:38:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"3149:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1417,"nodeType":"ExpressionStatement","src":"3108:46:11"},{"expression":{"arguments":[{"id":1420,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"3192:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1418,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"3175:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"type(ShortString)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:11","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:11","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"functionReturnParameters":1396,"id":1422,"nodeType":"Return","src":"3168:42:11"}]},"id":1424,"nodeType":"IfStatement","src":"3006:215:11","trueBody":{"id":1408,"nodeType":"Block","src":"3036:52:11","statements":[{"expression":{"arguments":[{"id":1405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"3071:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1404,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"3057:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"functionReturnParameters":1396,"id":1407,"nodeType":"Return","src":"3050:27:11"}]}}]},"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"2779:103:11","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1426,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:11","nodeType":"FunctionDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"value","nameLocation":"2936:5:11","nodeType":"VariableDeclaration","scope":1426,"src":"2922:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1388,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"store","nameLocation":"2958:5:11","nodeType":"VariableDeclaration","scope":1426,"src":"2943:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1390,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:11"},"returnParameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1426,"src":"2983:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1394,"nodeType":"UserDefinedTypeName","pathNode":{"id":1393,"name":"ShortString","nameLocations":["2983:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2983:11:11"},"referencedDeclaration":1274,"src":"2983:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:11"},"scope":1485,"src":"2887:340:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1452,"nodeType":"Block","src":"3477:158:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"3510:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"expression":{"id":1437,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"3491:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"type(ShortString)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:11","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:11","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1441,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"3520:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1450,"nodeType":"Block","src":"3592:37:11","statements":[{"expression":{"id":1448,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"3613:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1436,"id":1449,"nodeType":"Return","src":"3606:12:11"}]},"id":1451,"nodeType":"IfStatement","src":"3487:142:11","trueBody":{"id":1447,"nodeType":"Block","src":"3539:47:11","statements":[{"expression":{"arguments":[{"id":1444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"3569:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"id":1443,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"3560:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1436,"id":1446,"nodeType":"Return","src":"3553:22:11"}]}}]},"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"3233:130:11","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":1453,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:11","nodeType":"FunctionDefinition","parameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"value","nameLocation":"3410:5:11","nodeType":"VariableDeclaration","scope":1453,"src":"3398:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1429,"nodeType":"UserDefinedTypeName","pathNode":{"id":1428,"name":"ShortString","nameLocations":["3398:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"3398:11:11"},"referencedDeclaration":1274,"src":"3398:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1432,"mutability":"mutable","name":"store","nameLocation":"3432:5:11","nodeType":"VariableDeclaration","scope":1453,"src":"3417:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1431,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:11"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"3462:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1434,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:11"},"scope":1485,"src":"3368:267:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1483,"nodeType":"Block","src":"4125:174:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"4158:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"expression":{"id":1464,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"4139:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"type(ShortString)"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:11","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:11","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1468,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"4168:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1481,"nodeType":"Block","src":"4242:51:11","statements":[{"expression":{"expression":{"arguments":[{"id":1477,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"4269:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1475,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:11","typeDescriptions":{}}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:11","memberName":"length","nodeType":"MemberAccess","src":"4263:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1463,"id":1480,"nodeType":"Return","src":"4256:26:11"}]},"id":1482,"nodeType":"IfStatement","src":"4135:158:11","trueBody":{"id":1474,"nodeType":"Block","src":"4187:49:11","statements":[{"expression":{"arguments":[{"id":1471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"4219:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"id":1470,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"4208:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1463,"id":1473,"nodeType":"Return","src":"4201:24:11"}]}}]},"documentation":{"id":1454,"nodeType":"StructuredDocumentation","src":"3641:374:11","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1484,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:11","nodeType":"FunctionDefinition","parameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"value","nameLocation":"4064:5:11","nodeType":"VariableDeclaration","scope":1484,"src":"4052:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1456,"nodeType":"UserDefinedTypeName","pathNode":{"id":1455,"name":"ShortString","nameLocations":["4052:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"4052:11:11"},"referencedDeclaration":1274,"src":"4052:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1459,"mutability":"mutable","name":"store","nameLocation":"4086:5:11","nodeType":"VariableDeclaration","scope":1484,"src":"4071:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1458,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:11"},"returnParameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1484,"src":"4116:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:11"},"scope":1485,"src":"4020:279:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1486,"src":"1255:3046:11","usedErrors":[1282,1284],"usedEvents":[]}],"src":"106:4196:11"},"id":11},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1609]},"id":1610,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1487,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"219:1187:12","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1609,"linearizedBaseContracts":[1609],"name":"StorageSlot","nameLocation":"1415:11:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1491,"members":[{"constant":false,"id":1490,"mutability":"mutable","name":"value","nameLocation":"1470:5:12","nodeType":"VariableDeclaration","scope":1491,"src":"1462:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:12","nodeType":"StructDefinition","scope":1609,"src":"1433:49:12","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1494,"members":[{"constant":false,"id":1493,"mutability":"mutable","name":"value","nameLocation":"1522:5:12","nodeType":"VariableDeclaration","scope":1494,"src":"1517:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1492,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:12","nodeType":"StructDefinition","scope":1609,"src":"1488:46:12","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1497,"members":[{"constant":false,"id":1496,"mutability":"mutable","name":"value","nameLocation":"1577:5:12","nodeType":"VariableDeclaration","scope":1497,"src":"1569:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:12","nodeType":"StructDefinition","scope":1609,"src":"1540:49:12","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1500,"members":[{"constant":false,"id":1499,"mutability":"mutable","name":"value","nameLocation":"1632:5:12","nodeType":"VariableDeclaration","scope":1500,"src":"1624:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:12","nodeType":"StructDefinition","scope":1609,"src":"1595:49:12","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1503,"members":[{"constant":false,"id":1502,"mutability":"mutable","name":"value","nameLocation":"1685:5:12","nodeType":"VariableDeclaration","scope":1503,"src":"1678:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1501,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:12","nodeType":"StructDefinition","scope":1609,"src":"1650:47:12","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1506,"members":[{"constant":false,"id":1505,"mutability":"mutable","name":"value","nameLocation":"1738:5:12","nodeType":"VariableDeclaration","scope":1506,"src":"1731:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1504,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:12","nodeType":"StructDefinition","scope":1609,"src":"1703:47:12","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1509,"members":[{"constant":false,"id":1508,"mutability":"mutable","name":"value","nameLocation":"1789:5:12","nodeType":"VariableDeclaration","scope":1509,"src":"1783:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1507,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:12","nodeType":"StructDefinition","scope":1609,"src":"1756:45:12","visibility":"public"},{"body":{"id":1519,"nodeType":"Block","src":"1983:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:12","statements":[{"nodeType":"YulAssignment","src":"2032:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1516,"isOffset":false,"isSlot":true,"src":"2032:6:12","suffix":"slot","valueSize":1},{"declaration":1512,"isOffset":false,"isSlot":false,"src":"2042:4:12","valueSize":1}],"flags":["memory-safe"],"id":1518,"nodeType":"InlineAssembly","src":"1993:63:12"}]},"documentation":{"id":1510,"nodeType":"StructuredDocumentation","src":"1807:87:12","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1520,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:12","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"slot","nameLocation":"1931:4:12","nodeType":"VariableDeclaration","scope":1520,"src":"1923:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:12"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"r","nameLocation":"1980:1:12","nodeType":"VariableDeclaration","scope":1520,"src":"1960:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1491_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1515,"nodeType":"UserDefinedTypeName","pathNode":{"id":1514,"name":"AddressSlot","nameLocations":["1960:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1491,"src":"1960:11:12"},"referencedDeclaration":1491,"src":"1960:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1491_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:12"},"scope":1609,"src":"1899:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1530,"nodeType":"Block","src":"2243:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:12","statements":[{"nodeType":"YulAssignment","src":"2292:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1527,"isOffset":false,"isSlot":true,"src":"2292:6:12","suffix":"slot","valueSize":1},{"declaration":1523,"isOffset":false,"isSlot":false,"src":"2302:4:12","valueSize":1}],"flags":["memory-safe"],"id":1529,"nodeType":"InlineAssembly","src":"2253:63:12"}]},"documentation":{"id":1521,"nodeType":"StructuredDocumentation","src":"2068:86:12","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1531,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:12","nodeType":"FunctionDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"slot","nameLocation":"2191:4:12","nodeType":"VariableDeclaration","scope":1531,"src":"2183:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:12"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"r","nameLocation":"2240:1:12","nodeType":"VariableDeclaration","scope":1531,"src":"2220:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1494_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1526,"nodeType":"UserDefinedTypeName","pathNode":{"id":1525,"name":"BooleanSlot","nameLocations":["2220:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1494,"src":"2220:11:12"},"referencedDeclaration":1494,"src":"2220:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1494_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:12"},"scope":1609,"src":"2159:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1541,"nodeType":"Block","src":"2503:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:12","statements":[{"nodeType":"YulAssignment","src":"2552:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1538,"isOffset":false,"isSlot":true,"src":"2552:6:12","suffix":"slot","valueSize":1},{"declaration":1534,"isOffset":false,"isSlot":false,"src":"2562:4:12","valueSize":1}],"flags":["memory-safe"],"id":1540,"nodeType":"InlineAssembly","src":"2513:63:12"}]},"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"2328:86:12","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:12","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"slot","nameLocation":"2451:4:12","nodeType":"VariableDeclaration","scope":1542,"src":"2443:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:12"},"returnParameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"r","nameLocation":"2500:1:12","nodeType":"VariableDeclaration","scope":1542,"src":"2480:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1497_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1537,"nodeType":"UserDefinedTypeName","pathNode":{"id":1536,"name":"Bytes32Slot","nameLocations":["2480:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1497,"src":"2480:11:12"},"referencedDeclaration":1497,"src":"2480:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1497_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:12"},"scope":1609,"src":"2419:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1552,"nodeType":"Block","src":"2763:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:12","statements":[{"nodeType":"YulAssignment","src":"2812:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1549,"isOffset":false,"isSlot":true,"src":"2812:6:12","suffix":"slot","valueSize":1},{"declaration":1545,"isOffset":false,"isSlot":false,"src":"2822:4:12","valueSize":1}],"flags":["memory-safe"],"id":1551,"nodeType":"InlineAssembly","src":"2773:63:12"}]},"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"2588:86:12","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1553,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:12","nodeType":"FunctionDefinition","parameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"slot","nameLocation":"2711:4:12","nodeType":"VariableDeclaration","scope":1553,"src":"2703:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:12"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"r","nameLocation":"2760:1:12","nodeType":"VariableDeclaration","scope":1553,"src":"2740:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1500_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1548,"nodeType":"UserDefinedTypeName","pathNode":{"id":1547,"name":"Uint256Slot","nameLocations":["2740:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1500,"src":"2740:11:12"},"referencedDeclaration":1500,"src":"2740:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1500_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:12"},"scope":1609,"src":"2679:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1563,"nodeType":"Block","src":"3020:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:12","statements":[{"nodeType":"YulAssignment","src":"3069:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1560,"isOffset":false,"isSlot":true,"src":"3069:6:12","suffix":"slot","valueSize":1},{"declaration":1556,"isOffset":false,"isSlot":false,"src":"3079:4:12","valueSize":1}],"flags":["memory-safe"],"id":1562,"nodeType":"InlineAssembly","src":"3030:63:12"}]},"documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"2848:85:12","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1564,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:12","nodeType":"FunctionDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"slot","nameLocation":"2969:4:12","nodeType":"VariableDeclaration","scope":1564,"src":"2961:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:12"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"r","nameLocation":"3017:1:12","nodeType":"VariableDeclaration","scope":1564,"src":"2998:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1503_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1559,"nodeType":"UserDefinedTypeName","pathNode":{"id":1558,"name":"Int256Slot","nameLocations":["2998:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1503,"src":"2998:10:12"},"referencedDeclaration":1503,"src":"2998:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1503_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:12"},"scope":1609,"src":"2938:161:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1574,"nodeType":"Block","src":"3277:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:12","statements":[{"nodeType":"YulAssignment","src":"3326:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1571,"isOffset":false,"isSlot":true,"src":"3326:6:12","suffix":"slot","valueSize":1},{"declaration":1567,"isOffset":false,"isSlot":false,"src":"3336:4:12","valueSize":1}],"flags":["memory-safe"],"id":1573,"nodeType":"InlineAssembly","src":"3287:63:12"}]},"documentation":{"id":1565,"nodeType":"StructuredDocumentation","src":"3105:85:12","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:12","nodeType":"FunctionDefinition","parameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"slot","nameLocation":"3226:4:12","nodeType":"VariableDeclaration","scope":1575,"src":"3218:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:12"},"returnParameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"r","nameLocation":"3274:1:12","nodeType":"VariableDeclaration","scope":1575,"src":"3255:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1506_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1570,"nodeType":"UserDefinedTypeName","pathNode":{"id":1569,"name":"StringSlot","nameLocations":["3255:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1506,"src":"3255:10:12"},"referencedDeclaration":1506,"src":"3255:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1506_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:12"},"scope":1609,"src":"3195:161:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1585,"nodeType":"Block","src":"3558:85:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:12","statements":[{"nodeType":"YulAssignment","src":"3607:20:12","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1582,"isOffset":false,"isSlot":true,"src":"3607:6:12","suffix":"slot","valueSize":1},{"declaration":1578,"isOffset":false,"isSlot":true,"src":"3617:10:12","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1584,"nodeType":"InlineAssembly","src":"3568:69:12"}]},"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"3362:101:12","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1586,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:12","nodeType":"FunctionDefinition","parameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"store","nameLocation":"3506:5:12","nodeType":"VariableDeclaration","scope":1586,"src":"3491:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1577,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:12"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"r","nameLocation":"3555:1:12","nodeType":"VariableDeclaration","scope":1586,"src":"3536:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1506_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1581,"nodeType":"UserDefinedTypeName","pathNode":{"id":1580,"name":"StringSlot","nameLocations":["3536:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1506,"src":"3536:10:12"},"referencedDeclaration":1506,"src":"3536:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1506_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:12"},"scope":1609,"src":"3468:175:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1596,"nodeType":"Block","src":"3818:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:12","statements":[{"nodeType":"YulAssignment","src":"3867:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1593,"isOffset":false,"isSlot":true,"src":"3867:6:12","suffix":"slot","valueSize":1},{"declaration":1589,"isOffset":false,"isSlot":false,"src":"3877:4:12","valueSize":1}],"flags":["memory-safe"],"id":1595,"nodeType":"InlineAssembly","src":"3828:63:12"}]},"documentation":{"id":1587,"nodeType":"StructuredDocumentation","src":"3649:84:12","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:12","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"slot","nameLocation":"3768:4:12","nodeType":"VariableDeclaration","scope":1597,"src":"3760:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:12"},"returnParameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"r","nameLocation":"3815:1:12","nodeType":"VariableDeclaration","scope":1597,"src":"3797:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1509_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1592,"nodeType":"UserDefinedTypeName","pathNode":{"id":1591,"name":"BytesSlot","nameLocations":["3797:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"3797:9:12"},"referencedDeclaration":1509,"src":"3797:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1509_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:12"},"scope":1609,"src":"3738:159:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1607,"nodeType":"Block","src":"4094:85:12","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:12","statements":[{"nodeType":"YulAssignment","src":"4143:20:12","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1604,"isOffset":false,"isSlot":true,"src":"4143:6:12","suffix":"slot","valueSize":1},{"declaration":1600,"isOffset":false,"isSlot":true,"src":"4153:10:12","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1606,"nodeType":"InlineAssembly","src":"4104:69:12"}]},"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"3903:99:12","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1608,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:12","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"store","nameLocation":"4043:5:12","nodeType":"VariableDeclaration","scope":1608,"src":"4029:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1599,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:12"},"returnParameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"r","nameLocation":"4091:1:12","nodeType":"VariableDeclaration","scope":1608,"src":"4073:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1509_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1603,"nodeType":"UserDefinedTypeName","pathNode":{"id":1602,"name":"BytesSlot","nameLocations":["4073:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"4073:9:12"},"referencedDeclaration":1509,"src":"4073:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1509_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:12"},"scope":1609,"src":"4007:172:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1610,"src":"1407:2774:12","usedErrors":[],"usedEvents":[]}],"src":"193:3989:12"},"id":12},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6406],"SafeCast":[8171],"SignedMath":[8315],"Strings":[3011]},"id":3012,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1611,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1613,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3012,"sourceUnit":6407,"src":"127:37:13","symbolAliases":[{"foreign":{"id":1612,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"135:4:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1615,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3012,"sourceUnit":8172,"src":"165:45:13","symbolAliases":[{"foreign":{"id":1614,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"173:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1617,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3012,"sourceUnit":8316,"src":"211:49:13","symbolAliases":[{"foreign":{"id":1616,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8315,"src":"219:10:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"262:34:13","text":" @dev String operations."},"fullyImplemented":true,"id":3011,"linearizedBaseContracts":[3011],"name":"Strings","nameLocation":"305:7:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1620,"libraryName":{"id":1619,"name":"SafeCast","nameLocations":["325:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":8171,"src":"325:8:13"},"nodeType":"UsingForDirective","src":"319:21:13"},{"constant":true,"id":1623,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:13","nodeType":"VariableDeclaration","scope":3011,"src":"346:56:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1621,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1626,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:13","nodeType":"VariableDeclaration","scope":3011,"src":"408:42:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1624,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1662,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:13","nodeType":"VariableDeclaration","scope":3011,"src":"456:302:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1627,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:13","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:13","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:13","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:13","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:13","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:13","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:13","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:13","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:13","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1645,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:13","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:13","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:13","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:13","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:13","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:13","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:13","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:13","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:13","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:13","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:13","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:13","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:13","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:13","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1663,"nodeType":"StructuredDocumentation","src":"778:81:13","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1669,"name":"StringsInsufficientHexLength","nameLocation":"870:28:13","nodeType":"ErrorDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"value","nameLocation":"907:5:13","nodeType":"VariableDeclaration","scope":1669,"src":"899:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1667,"mutability":"mutable","name":"length","nameLocation":"922:6:13","nodeType":"VariableDeclaration","scope":1669,"src":"914:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:13"},"src":"864:66:13"},{"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"936:108:13","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1672,"name":"StringsInvalidChar","nameLocation":"1055:18:13","nodeType":"ErrorDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[],"src":"1073:2:13"},"src":"1049:27:13"},{"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"1082:84:13","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1675,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:13","nodeType":"ErrorDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"1204:2:13"},"src":"1171:36:13"},{"body":{"id":1722,"nodeType":"Block","src":"1379:563:13","statements":[{"id":1721,"nodeType":"UncheckedBlock","src":"1389:547:13","statements":[{"assignments":[1684],"declarations":[{"constant":false,"id":1684,"mutability":"mutable","name":"length","nameLocation":"1421:6:13","nodeType":"VariableDeclaration","scope":1721,"src":"1413:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1691,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"1441:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1685,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"1430:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6406_$","typeString":"type(library Math)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:13","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"1430:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:13"},{"assignments":[1693],"declarations":[{"constant":false,"id":1693,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:13","nodeType":"VariableDeclaration","scope":1721,"src":"1465:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1692,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1698,"initialValue":{"arguments":[{"id":1696,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"1499:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1694,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:13"},{"assignments":[1700],"declarations":[{"constant":false,"id":1700,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:13","nodeType":"VariableDeclaration","scope":1721,"src":"1520:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1701,"nodeType":"VariableDeclarationStatement","src":"1520:11:13"},{"AST":{"nodeType":"YulBlock","src":"1570:69:13","statements":[{"nodeType":"YulAssignment","src":"1588:37:13","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1603:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1611:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:13"},"nodeType":"YulFunctionCall","src":"1599:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"1618:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:13"},"nodeType":"YulFunctionCall","src":"1595:30:13"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1693,"isOffset":false,"isSlot":false,"src":"1603:6:13","valueSize":1},{"declaration":1684,"isOffset":false,"isSlot":false,"src":"1618:6:13","valueSize":1},{"declaration":1700,"isOffset":false,"isSlot":false,"src":"1588:3:13","valueSize":1}],"flags":["memory-safe"],"id":1702,"nodeType":"InlineAssembly","src":"1545:94:13"},{"body":{"id":1717,"nodeType":"Block","src":"1665:234:13","statements":[{"expression":{"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:13","subExpression":{"id":1704,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"1683:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1706,"nodeType":"ExpressionStatement","src":"1683:5:13"},{"AST":{"nodeType":"YulBlock","src":"1731:86:13","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1761:3:13"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1775:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:13","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1771:3:13"},"nodeType":"YulFunctionCall","src":"1771:14:13"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1787:10:13"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1766:4:13"},"nodeType":"YulFunctionCall","src":"1766:32:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1753:7:13"},"nodeType":"YulFunctionCall","src":"1753:46:13"},"nodeType":"YulExpressionStatement","src":"1753:46:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":1623,"isOffset":false,"isSlot":false,"src":"1787:10:13","valueSize":1},{"declaration":1700,"isOffset":false,"isSlot":false,"src":"1761:3:13","valueSize":1},{"declaration":1678,"isOffset":false,"isSlot":false,"src":"1775:5:13","valueSize":1}],"flags":["memory-safe"],"id":1707,"nodeType":"InlineAssembly","src":"1706:111:13"},{"expression":{"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"1834:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1711,"nodeType":"ExpressionStatement","src":"1834:11:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"1867:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1716,"nodeType":"IfStatement","src":"1863:21:13","trueBody":{"id":1715,"nodeType":"Break","src":"1879:5:13"}}]},"condition":{"hexValue":"74727565","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1718,"nodeType":"WhileStatement","src":"1652:247:13"},{"expression":{"id":1719,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"1919:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1682,"id":1720,"nodeType":"Return","src":"1912:13:13"}]}]},"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"1213:90:13","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1723,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:13","nodeType":"FunctionDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"value","nameLocation":"1334:5:13","nodeType":"VariableDeclaration","scope":1723,"src":"1326:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1677,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:13"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1723,"src":"1364:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1680,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:13"},"scope":3011,"src":"1308:634:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1748,"nodeType":"Block","src":"2118:92:13","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"2149:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:13","trueExpression":{"hexValue":"2d","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"2195:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1741,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8315,"src":"2180:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8315_$","typeString":"type(library SignedMath)"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:13","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8314,"src":"2180:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1740,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"2171:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1731,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:13","typeDescriptions":{}}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:13","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:13","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1730,"id":1747,"nodeType":"Return","src":"2128:75:13"}]},"documentation":{"id":1724,"nodeType":"StructuredDocumentation","src":"1948:89:13","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1749,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:13","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"value","nameLocation":"2073:5:13","nodeType":"VariableDeclaration","scope":1749,"src":"2066:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1725,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:13"},"returnParameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1749,"src":"2103:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1728,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:13"},"scope":3011,"src":"2042:168:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1768,"nodeType":"Block","src":"2389:100:13","statements":[{"id":1767,"nodeType":"UncheckedBlock","src":"2399:84:13","statements":[{"expression":{"arguments":[{"id":1758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"2442:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"2461:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1759,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"2449:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6406_$","typeString":"type(library Math)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:13","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6349,"src":"2449:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1757,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1769,1852,1872],"referencedDeclaration":1852,"src":"2430:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1756,"id":1766,"nodeType":"Return","src":"2423:49:13"}]}]},"documentation":{"id":1750,"nodeType":"StructuredDocumentation","src":"2216:94:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1769,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:13","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"value","nameLocation":"2344:5:13","nodeType":"VariableDeclaration","scope":1769,"src":"2336:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1751,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:13"},"returnParameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1769,"src":"2374:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1754,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:13"},"scope":3011,"src":"2315:174:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1851,"nodeType":"Block","src":"2702:435:13","statements":[{"assignments":[1780],"declarations":[{"constant":false,"id":1780,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:13","nodeType":"VariableDeclaration","scope":1851,"src":"2712:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1782,"initialValue":{"id":1781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"2733:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:13"},{"assignments":[1784],"declarations":[{"constant":false,"id":1784,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:13","nodeType":"VariableDeclaration","scope":1851,"src":"2748:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1783,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1793,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1788,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"2784:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1785,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:13"},{"expression":{"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1794,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"2805:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1796,"indexExpression":{"hexValue":"30","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1799,"nodeType":"ExpressionStatement","src":"2805:15:13"},{"expression":{"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1800,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"2830:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1802,"indexExpression":{"hexValue":"31","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1805,"nodeType":"ExpressionStatement","src":"2830:15:13"},{"body":{"id":1834,"nodeType":"Block","src":"2900:95:13","statements":[{"expression":{"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1820,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"2914:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1822,"indexExpression":{"id":1821,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"2921:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1823,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"2926:10:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1827,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1824,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"2937:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1829,"nodeType":"ExpressionStatement","src":"2914:40:13"},{"expression":{"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1830,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"2968:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1833,"nodeType":"ExpressionStatement","src":"2968:16:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1814,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"2888:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1835,"initializationExpression":{"assignments":[1807],"declarations":[{"constant":false,"id":1807,"mutability":"mutable","name":"i","nameLocation":"2868:1:13","nodeType":"VariableDeclaration","scope":1835,"src":"2860:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1813,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1809,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"2876:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:13"},"loopExpression":{"expression":{"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:13","subExpression":{"id":1817,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"2897:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1819,"nodeType":"ExpressionStatement","src":"2895:3:13"},"nodeType":"ForStatement","src":"2855:140:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1836,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"3008:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1845,"nodeType":"IfStatement","src":"3004:96:13","trueBody":{"id":1844,"nodeType":"Block","src":"3025:75:13","statements":[{"errorCall":{"arguments":[{"id":1840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"3075:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1841,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"3082:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1839,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"3046:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1843,"nodeType":"RevertStatement","src":"3039:50:13"}]}},{"expression":{"arguments":[{"id":1848,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"3123:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1846,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:13","typeDescriptions":{}}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1778,"id":1850,"nodeType":"Return","src":"3109:21:13"}]},"documentation":{"id":1770,"nodeType":"StructuredDocumentation","src":"2495:112:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1852,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:13","nodeType":"FunctionDefinition","parameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1772,"mutability":"mutable","name":"value","nameLocation":"2641:5:13","nodeType":"VariableDeclaration","scope":1852,"src":"2633:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1774,"mutability":"mutable","name":"length","nameLocation":"2656:6:13","nodeType":"VariableDeclaration","scope":1852,"src":"2648:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1773,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:13"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1852,"src":"2687:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1776,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:13"},"scope":3011,"src":"2612:525:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1871,"nodeType":"Block","src":"3369:75:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1865,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"3414:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1863,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:13","typeDescriptions":{}}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:13","typeDescriptions":{}}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1868,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"3422:14:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1860,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1769,1852,1872],"referencedDeclaration":1852,"src":"3386:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1859,"id":1870,"nodeType":"Return","src":"3379:58:13"}]},"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"3143:148:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:13","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"addr","nameLocation":"3325:4:13","nodeType":"VariableDeclaration","scope":1872,"src":"3317:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:13"},"returnParameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"3354:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1857,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:13"},"scope":3011,"src":"3296:148:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1936,"nodeType":"Block","src":"3701:642:13","statements":[{"assignments":[1881],"declarations":[{"constant":false,"id":1881,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:13","nodeType":"VariableDeclaration","scope":1936,"src":"3711:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1880,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1888,"initialValue":{"arguments":[{"arguments":[{"id":1885,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"3751:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1884,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1769,1852,1872],"referencedDeclaration":1872,"src":"3739:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1882,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:13","typeDescriptions":{}}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:13"},{"assignments":[1890],"declarations":[{"constant":false,"id":1890,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:13","nodeType":"VariableDeclaration","scope":1936,"src":"3842:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1891,"nodeType":"VariableDeclarationStatement","src":"3842:17:13"},{"AST":{"nodeType":"YulBlock","src":"3894:78:13","statements":[{"nodeType":"YulAssignment","src":"3908:54:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:2:13","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3943:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3951:4:13","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:13"},"nodeType":"YulFunctionCall","src":"3939:17:13"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:13","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:13"},"nodeType":"YulFunctionCall","src":"3929:32:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3921:3:13"},"nodeType":"YulFunctionCall","src":"3921:41:13"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3908:9:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1881,"isOffset":false,"isSlot":false,"src":"3943:6:13","valueSize":1},{"declaration":1890,"isOffset":false,"isSlot":false,"src":"3908:9:13","valueSize":1}],"flags":["memory-safe"],"id":1892,"nodeType":"InlineAssembly","src":"3869:103:13"},{"body":{"id":1929,"nodeType":"Block","src":"4015:291:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1903,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"4121:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:13","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1910,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"4150:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1912,"indexExpression":{"id":1911,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"4157:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1908,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:13","typeDescriptions":{}}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1924,"nodeType":"IfStatement","src":"4117:150:13","trueBody":{"id":1923,"nodeType":"Block","src":"4167:100:13","statements":[{"expression":{"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1917,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"4235:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1919,"indexExpression":{"id":1918,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"4242:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1922,"nodeType":"ExpressionStatement","src":"4235:17:13"}]}},{"expression":{"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1925,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"4280:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1928,"nodeType":"ExpressionStatement","src":"4280:15:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1897,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"4003:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1930,"initializationExpression":{"assignments":[1894],"declarations":[{"constant":false,"id":1894,"mutability":"mutable","name":"i","nameLocation":"3995:1:13","nodeType":"VariableDeclaration","scope":1930,"src":"3987:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1896,"initialValue":{"hexValue":"3431","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:13","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:13"},"loopExpression":{"expression":{"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:13","subExpression":{"id":1900,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"4012:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1902,"nodeType":"ExpressionStatement","src":"4010:3:13"},"nodeType":"ForStatement","src":"3982:324:13"},{"expression":{"arguments":[{"id":1933,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"4329:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1931,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:13","typeDescriptions":{}}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1879,"id":1935,"nodeType":"Return","src":"4315:21:13"}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"3450:165:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1937,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:13","nodeType":"FunctionDefinition","parameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"addr","nameLocation":"3657:4:13","nodeType":"VariableDeclaration","scope":1937,"src":"3649:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:13"},"returnParameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1937,"src":"3686:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1877,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:13"},"scope":3011,"src":"3620:723:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1973,"nodeType":"Block","src":"4498:104:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1949,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"4521:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1947,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:13","typeDescriptions":{}}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:13","memberName":"length","nodeType":"MemberAccess","src":"4515:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1954,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"4540:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1952,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:13","typeDescriptions":{}}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:13","memberName":"length","nodeType":"MemberAccess","src":"4534:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1961,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"4569:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1959,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:13","typeDescriptions":{}}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1958,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1967,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"4592:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1965,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:13","typeDescriptions":{}}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1964,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1946,"id":1972,"nodeType":"Return","src":"4508:87:13"}]},"documentation":{"id":1938,"nodeType":"StructuredDocumentation","src":"4349:66:13","text":" @dev Returns true if the two strings are equal."},"id":1974,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:13","nodeType":"FunctionDefinition","parameters":{"id":1943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"a","nameLocation":"4449:1:13","nodeType":"VariableDeclaration","scope":1974,"src":"4435:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1939,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1942,"mutability":"mutable","name":"b","nameLocation":"4466:1:13","nodeType":"VariableDeclaration","scope":1974,"src":"4452:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1941,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:13"},"returnParameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1974,"src":"4492:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1944,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:13"},"scope":3011,"src":"4420:182:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1992,"nodeType":"Block","src":"4899:64:13","statements":[{"expression":{"arguments":[{"id":1983,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"4926:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1987,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"4942:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1985,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:13","typeDescriptions":{}}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:13","memberName":"length","nodeType":"MemberAccess","src":"4936:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1982,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1993,2024],"referencedDeclaration":2024,"src":"4916:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1981,"id":1991,"nodeType":"Return","src":"4909:47:13"}]},"documentation":{"id":1975,"nodeType":"StructuredDocumentation","src":"4608:214:13","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1993,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:13","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"input","nameLocation":"4860:5:13","nodeType":"VariableDeclaration","scope":1993,"src":"4846:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1976,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:13"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1993,"src":"4890:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1979,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:13"},"scope":3011,"src":"4827:136:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2023,"nodeType":"Block","src":"5368:153:13","statements":[{"assignments":[2006,2008],"declarations":[{"constant":false,"id":2006,"mutability":"mutable","name":"success","nameLocation":"5384:7:13","nodeType":"VariableDeclaration","scope":2023,"src":"5379:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2005,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2008,"mutability":"mutable","name":"value","nameLocation":"5401:5:13","nodeType":"VariableDeclaration","scope":2023,"src":"5393:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2007,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2014,"initialValue":{"arguments":[{"id":2010,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"5423:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2011,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"5430:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2012,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"5437:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2009,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2045,2082],"referencedDeclaration":2082,"src":"5410:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:13"},{"condition":{"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:13","subExpression":{"id":2015,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"5456:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2020,"nodeType":"IfStatement","src":"5451:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2017,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"5472:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2019,"nodeType":"RevertStatement","src":"5465:27:13"}},{"expression":{"id":2021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"5509:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2004,"id":2022,"nodeType":"Return","src":"5502:12:13"}]},"documentation":{"id":1994,"nodeType":"StructuredDocumentation","src":"4969:294:13","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2024,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:13","nodeType":"FunctionDefinition","parameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"input","nameLocation":"5301:5:13","nodeType":"VariableDeclaration","scope":2024,"src":"5287:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1995,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1998,"mutability":"mutable","name":"begin","nameLocation":"5316:5:13","nodeType":"VariableDeclaration","scope":2024,"src":"5308:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1997,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2000,"mutability":"mutable","name":"end","nameLocation":"5331:3:13","nodeType":"VariableDeclaration","scope":2024,"src":"5323:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1999,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:13"},"returnParameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2024,"src":"5359:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2002,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:13"},"scope":3011,"src":"5268:253:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2044,"nodeType":"Block","src":"5842:83:13","statements":[{"expression":{"arguments":[{"id":2035,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"5888:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2039,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"5904:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2037,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:13","typeDescriptions":{}}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:13","memberName":"length","nodeType":"MemberAccess","src":"5898:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2034,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"5859:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2033,"id":2043,"nodeType":"Return","src":"5852:66:13"}]},"documentation":{"id":2025,"nodeType":"StructuredDocumentation","src":"5527:215:13","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2045,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:13","nodeType":"FunctionDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"input","nameLocation":"5783:5:13","nodeType":"VariableDeclaration","scope":2045,"src":"5769:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2026,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:13"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"success","nameLocation":"5818:7:13","nodeType":"VariableDeclaration","scope":2045,"src":"5813:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2029,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"value","nameLocation":"5835:5:13","nodeType":"VariableDeclaration","scope":2045,"src":"5827:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:13"},"scope":3011,"src":"5747:178:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2081,"nodeType":"Block","src":"6327:144:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2059,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"6341:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2062,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"6353:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2060,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:13","typeDescriptions":{}}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:13","memberName":"length","nodeType":"MemberAccess","src":"6347:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2066,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"6370:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2067,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"6378:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2074,"nodeType":"IfStatement","src":"6337:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2058,"id":2073,"nodeType":"Return","src":"6383:17:13"}},{"expression":{"arguments":[{"id":2076,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"6446:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2077,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"6453:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2078,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"6460:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2075,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"6417:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2058,"id":2080,"nodeType":"Return","src":"6410:54:13"}]},"documentation":{"id":2046,"nodeType":"StructuredDocumentation","src":"5931:238:13","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2082,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:13","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"input","nameLocation":"6219:5:13","nodeType":"VariableDeclaration","scope":2082,"src":"6205:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2047,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2050,"mutability":"mutable","name":"begin","nameLocation":"6242:5:13","nodeType":"VariableDeclaration","scope":2082,"src":"6234:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2052,"mutability":"mutable","name":"end","nameLocation":"6265:3:13","nodeType":"VariableDeclaration","scope":2082,"src":"6257:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2051,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:13"},"returnParameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"success","nameLocation":"6303:7:13","nodeType":"VariableDeclaration","scope":2082,"src":"6298:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2054,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2057,"mutability":"mutable","name":"value","nameLocation":"6320:5:13","nodeType":"VariableDeclaration","scope":2082,"src":"6312:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:13"},"scope":3011,"src":"6174:297:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2151,"nodeType":"Block","src":"6874:347:13","statements":[{"assignments":[2097],"declarations":[{"constant":false,"id":2097,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:13","nodeType":"VariableDeclaration","scope":2151,"src":"6884:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2096,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2102,"initialValue":{"arguments":[{"id":2100,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"6912:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2098,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:13","typeDescriptions":{}}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:13"},{"assignments":[2104],"declarations":[{"constant":false,"id":2104,"mutability":"mutable","name":"result","nameLocation":"6937:6:13","nodeType":"VariableDeclaration","scope":2151,"src":"6929:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2103,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2106,"initialValue":{"hexValue":"30","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:13"},{"body":{"id":2145,"nodeType":"Block","src":"6995:189:13","statements":[{"assignments":[2118],"declarations":[{"constant":false,"id":2118,"mutability":"mutable","name":"chr","nameLocation":"7015:3:13","nodeType":"VariableDeclaration","scope":2145,"src":"7009:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2117,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2128,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2123,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"7064:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2124,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"7072:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2122,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"7041:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2120,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:13","typeDescriptions":{}}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2119,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"7021:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2129,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"7094:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:13","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2136,"nodeType":"IfStatement","src":"7090:30:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2095,"id":2135,"nodeType":"Return","src":"7103:17:13"}},{"expression":{"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2137,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"7134:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2140,"nodeType":"ExpressionStatement","src":"7134:12:13"},{"expression":{"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"7160:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2142,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"7170:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2144,"nodeType":"ExpressionStatement","src":"7160:13:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2111,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"6981:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2112,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"6985:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2146,"initializationExpression":{"assignments":[2108],"declarations":[{"constant":false,"id":2108,"mutability":"mutable","name":"i","nameLocation":"6970:1:13","nodeType":"VariableDeclaration","scope":2146,"src":"6962:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2107,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2110,"initialValue":{"id":2109,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"6974:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:13"},"loopExpression":{"expression":{"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:13","subExpression":{"id":2114,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"6992:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2116,"nodeType":"ExpressionStatement","src":"6990:3:13"},"nodeType":"ForStatement","src":"6957:227:13"},{"expression":{"components":[{"hexValue":"74727565","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2148,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"7207:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2095,"id":2150,"nodeType":"Return","src":"7193:21:13"}]},"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"6477:224:13","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:13","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"input","nameLocation":"6767:5:13","nodeType":"VariableDeclaration","scope":2152,"src":"6753:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2084,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2087,"mutability":"mutable","name":"begin","nameLocation":"6790:5:13","nodeType":"VariableDeclaration","scope":2152,"src":"6782:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2089,"mutability":"mutable","name":"end","nameLocation":"6813:3:13","nodeType":"VariableDeclaration","scope":2152,"src":"6805:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2088,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:13"},"returnParameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"success","nameLocation":"6850:7:13","nodeType":"VariableDeclaration","scope":2152,"src":"6845:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2091,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2094,"mutability":"mutable","name":"value","nameLocation":"6867:5:13","nodeType":"VariableDeclaration","scope":2152,"src":"6859:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:13"},"scope":3011,"src":"6706:515:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2170,"nodeType":"Block","src":"7518:63:13","statements":[{"expression":{"arguments":[{"id":2161,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"7544:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2165,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"7560:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2163,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:13","typeDescriptions":{}}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:13","memberName":"length","nodeType":"MemberAccess","src":"7554:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2160,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2171,2202],"referencedDeclaration":2202,"src":"7535:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2159,"id":2169,"nodeType":"Return","src":"7528:46:13"}]},"documentation":{"id":2153,"nodeType":"StructuredDocumentation","src":"7227:216:13","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2171,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:13","nodeType":"FunctionDefinition","parameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"input","nameLocation":"7480:5:13","nodeType":"VariableDeclaration","scope":2171,"src":"7466:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2154,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:13"},"returnParameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2171,"src":"7510:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2157,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:13"},"scope":3011,"src":"7448:133:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2201,"nodeType":"Block","src":"7986:151:13","statements":[{"assignments":[2184,2186],"declarations":[{"constant":false,"id":2184,"mutability":"mutable","name":"success","nameLocation":"8002:7:13","nodeType":"VariableDeclaration","scope":2201,"src":"7997:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2183,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2186,"mutability":"mutable","name":"value","nameLocation":"8018:5:13","nodeType":"VariableDeclaration","scope":2201,"src":"8011:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2185,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2192,"initialValue":{"arguments":[{"id":2188,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"8039:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2189,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"8046:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2190,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"8053:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2187,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2223,2265],"referencedDeclaration":2265,"src":"8027:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:13"},{"condition":{"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:13","subExpression":{"id":2193,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"8072:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2198,"nodeType":"IfStatement","src":"8067:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2195,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"8088:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2197,"nodeType":"RevertStatement","src":"8081:27:13"}},{"expression":{"id":2199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"8125:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2182,"id":2200,"nodeType":"Return","src":"8118:12:13"}]},"documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"7587:296:13","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2202,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:13","nodeType":"FunctionDefinition","parameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"input","nameLocation":"7920:5:13","nodeType":"VariableDeclaration","scope":2202,"src":"7906:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2173,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2176,"mutability":"mutable","name":"begin","nameLocation":"7935:5:13","nodeType":"VariableDeclaration","scope":2202,"src":"7927:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"end","nameLocation":"7950:3:13","nodeType":"VariableDeclaration","scope":2202,"src":"7942:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2177,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:13"},"returnParameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2202,"src":"7978:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2180,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:13"},"scope":3011,"src":"7888:249:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2222,"nodeType":"Block","src":"8528:82:13","statements":[{"expression":{"arguments":[{"id":2213,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"8573:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2217,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"8589:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2215,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:13","typeDescriptions":{}}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:13","memberName":"length","nodeType":"MemberAccess","src":"8583:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2212,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"8545:27:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2211,"id":2221,"nodeType":"Return","src":"8538:65:13"}]},"documentation":{"id":2203,"nodeType":"StructuredDocumentation","src":"8143:287:13","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2223,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:13","nodeType":"FunctionDefinition","parameters":{"id":2206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2205,"mutability":"mutable","name":"input","nameLocation":"8470:5:13","nodeType":"VariableDeclaration","scope":2223,"src":"8456:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2204,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:13"},"returnParameters":{"id":2211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"success","nameLocation":"8505:7:13","nodeType":"VariableDeclaration","scope":2223,"src":"8500:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2207,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2210,"mutability":"mutable","name":"value","nameLocation":"8521:5:13","nodeType":"VariableDeclaration","scope":2223,"src":"8514:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2209,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:13"},"scope":3011,"src":"8435:175:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2228,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:13","nodeType":"VariableDeclaration","scope":3011,"src":"8616:50:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2264,"nodeType":"Block","src":"9132:143:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2242,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"9146:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2245,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"9158:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2243,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:13","typeDescriptions":{}}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:13","memberName":"length","nodeType":"MemberAccess","src":"9152:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2249,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"9175:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2250,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"9183:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2257,"nodeType":"IfStatement","src":"9142:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2241,"id":2256,"nodeType":"Return","src":"9188:17:13"}},{"expression":{"arguments":[{"id":2259,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"9250:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2260,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"9257:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2261,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"9264:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2258,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"9222:27:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2241,"id":2263,"nodeType":"Return","src":"9215:53:13"}]},"documentation":{"id":2229,"nodeType":"StructuredDocumentation","src":"8673:303:13","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2265,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:13","nodeType":"FunctionDefinition","parameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"input","nameLocation":"9025:5:13","nodeType":"VariableDeclaration","scope":2265,"src":"9011:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2230,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2233,"mutability":"mutable","name":"begin","nameLocation":"9048:5:13","nodeType":"VariableDeclaration","scope":2265,"src":"9040:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2232,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2235,"mutability":"mutable","name":"end","nameLocation":"9071:3:13","nodeType":"VariableDeclaration","scope":2265,"src":"9063:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2234,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:13"},"returnParameters":{"id":2241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"success","nameLocation":"9109:7:13","nodeType":"VariableDeclaration","scope":2265,"src":"9104:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2237,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2240,"mutability":"mutable","name":"value","nameLocation":"9125:5:13","nodeType":"VariableDeclaration","scope":2265,"src":"9118:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2239,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:13"},"scope":3011,"src":"8981:294:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2385,"nodeType":"Block","src":"9675:812:13","statements":[{"assignments":[2280],"declarations":[{"constant":false,"id":2280,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:13","nodeType":"VariableDeclaration","scope":2385,"src":"9685:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2279,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2285,"initialValue":{"arguments":[{"id":2283,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"9713:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2281,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:13","typeDescriptions":{}}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:13"},{"assignments":[2287],"declarations":[{"constant":false,"id":2287,"mutability":"mutable","name":"sign","nameLocation":"9783:4:13","nodeType":"VariableDeclaration","scope":2385,"src":"9776:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2286,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2303,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2288,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"9790:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2289,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"9799:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2298,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"9847:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2299,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"9855:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2297,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"9824:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2295,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:13","typeDescriptions":{}}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:13","trueExpression":{"arguments":[{"hexValue":"30","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2291,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:13","typeDescriptions":{}}},"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:13"},{"assignments":[2305],"declarations":[{"constant":false,"id":2305,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:13","nodeType":"VariableDeclaration","scope":2385,"src":"9943:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2304,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2312,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2306,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"9963:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2307,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:13","typeDescriptions":{}}},"id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:13"},{"assignments":[2314],"declarations":[{"constant":false,"id":2314,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:13","nodeType":"VariableDeclaration","scope":2385,"src":"9992:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2313,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2321,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2315,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"10012:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2316,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:13","typeDescriptions":{}}},"id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:13"},{"assignments":[2323],"declarations":[{"constant":false,"id":2323,"mutability":"mutable","name":"offset","nameLocation":"10049:6:13","nodeType":"VariableDeclaration","scope":2385,"src":"10041:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2322,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2330,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2324,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"10059:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2325,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"10075:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2327,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"10058:37:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:13"},{"assignments":[2332,2334],"declarations":[{"constant":false,"id":2332,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:13","nodeType":"VariableDeclaration","scope":2385,"src":"10109:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2331,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2334,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:13","nodeType":"VariableDeclaration","scope":2385,"src":"10126:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2333,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2342,"initialValue":{"arguments":[{"id":2336,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"10159:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2337,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"10166:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2338,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"10174:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2340,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"10182:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2335,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2045,2082],"referencedDeclaration":2082,"src":"10146:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2343,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"10201:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2344,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"10215:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2345,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"10226:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2363,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"10343:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2364,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"10357:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2366,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"10373:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2367,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"10385:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2278,"id":2382,"nodeType":"Return","src":"10463:17:13"},"id":2383,"nodeType":"IfStatement","src":"10339:141:13","trueBody":{"id":2378,"nodeType":"Block","src":"10401:56:13","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2372,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2371,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:13","memberName":"min","nodeType":"MemberAccess","src":"10429:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2278,"id":2377,"nodeType":"Return","src":"10415:31:13"}]}},"id":2384,"nodeType":"IfStatement","src":"10197:283:13","trueBody":{"id":2362,"nodeType":"Block","src":"10242:91:13","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2349,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"10270:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2357,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"10312:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2355,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:13","typeDescriptions":{}}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:13","trueExpression":{"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:13","subExpression":{"arguments":[{"id":2352,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"10293:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2350,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:13","typeDescriptions":{}}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2278,"id":2361,"nodeType":"Return","src":"10256:66:13"}]}}]},"documentation":{"id":2266,"nodeType":"StructuredDocumentation","src":"9281:223:13","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2386,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:13","nodeType":"FunctionDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"mutability":"mutable","name":"input","nameLocation":"9569:5:13","nodeType":"VariableDeclaration","scope":2386,"src":"9555:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2267,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2270,"mutability":"mutable","name":"begin","nameLocation":"9592:5:13","nodeType":"VariableDeclaration","scope":2386,"src":"9584:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2272,"mutability":"mutable","name":"end","nameLocation":"9615:3:13","nodeType":"VariableDeclaration","scope":2386,"src":"9607:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:13"},"returnParameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"success","nameLocation":"9652:7:13","nodeType":"VariableDeclaration","scope":2386,"src":"9647:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2274,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"value","nameLocation":"9668:5:13","nodeType":"VariableDeclaration","scope":2386,"src":"9661:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2276,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:13"},"scope":3011,"src":"9509:978:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2404,"nodeType":"Block","src":"10832:67:13","statements":[{"expression":{"arguments":[{"id":2395,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"10862:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2399,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"10878:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2397,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:13","typeDescriptions":{}}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:13","memberName":"length","nodeType":"MemberAccess","src":"10872:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2394,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2405,2436],"referencedDeclaration":2436,"src":"10849:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2393,"id":2403,"nodeType":"Return","src":"10842:50:13"}]},"documentation":{"id":2387,"nodeType":"StructuredDocumentation","src":"10493:259:13","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2405,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:13","nodeType":"FunctionDefinition","parameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2389,"mutability":"mutable","name":"input","nameLocation":"10793:5:13","nodeType":"VariableDeclaration","scope":2405,"src":"10779:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2388,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:13"},"returnParameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2405,"src":"10823:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2391,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:13"},"scope":3011,"src":"10757:142:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2435,"nodeType":"Block","src":"11320:156:13","statements":[{"assignments":[2418,2420],"declarations":[{"constant":false,"id":2418,"mutability":"mutable","name":"success","nameLocation":"11336:7:13","nodeType":"VariableDeclaration","scope":2435,"src":"11331:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2417,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2420,"mutability":"mutable","name":"value","nameLocation":"11353:5:13","nodeType":"VariableDeclaration","scope":2435,"src":"11345:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2419,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2426,"initialValue":{"arguments":[{"id":2422,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"11378:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2423,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"11385:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2424,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"11392:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2421,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2457,2494],"referencedDeclaration":2494,"src":"11362:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:13"},{"condition":{"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:13","subExpression":{"id":2427,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"11411:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2432,"nodeType":"IfStatement","src":"11406:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2429,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"11427:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2431,"nodeType":"RevertStatement","src":"11420:27:13"}},{"expression":{"id":2433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"11464:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2416,"id":2434,"nodeType":"Return","src":"11457:12:13"}]},"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"10905:307:13","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2436,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:13","nodeType":"FunctionDefinition","parameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"input","nameLocation":"11253:5:13","nodeType":"VariableDeclaration","scope":2436,"src":"11239:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2407,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"begin","nameLocation":"11268:5:13","nodeType":"VariableDeclaration","scope":2436,"src":"11260:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2409,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2412,"mutability":"mutable","name":"end","nameLocation":"11283:3:13","nodeType":"VariableDeclaration","scope":2436,"src":"11275:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2411,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:13"},"returnParameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2436,"src":"11311:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:13"},"scope":3011,"src":"11217:259:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2456,"nodeType":"Block","src":"11803:86:13","statements":[{"expression":{"arguments":[{"id":2447,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"11852:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2451,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"11868:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2449,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:13","typeDescriptions":{}}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:13","memberName":"length","nodeType":"MemberAccess","src":"11862:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2446,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"11820:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2445,"id":2455,"nodeType":"Return","src":"11813:69:13"}]},"documentation":{"id":2437,"nodeType":"StructuredDocumentation","src":"11482:218:13","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2457,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:13","nodeType":"FunctionDefinition","parameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"input","nameLocation":"11744:5:13","nodeType":"VariableDeclaration","scope":2457,"src":"11730:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2438,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:13"},"returnParameters":{"id":2445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"success","nameLocation":"11779:7:13","nodeType":"VariableDeclaration","scope":2457,"src":"11774:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2441,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2444,"mutability":"mutable","name":"value","nameLocation":"11796:5:13","nodeType":"VariableDeclaration","scope":2457,"src":"11788:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2443,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:13"},"scope":3011,"src":"11705:184:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2493,"nodeType":"Block","src":"12297:147:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2471,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"12311:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2474,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"12323:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2472,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:13","typeDescriptions":{}}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:13","memberName":"length","nodeType":"MemberAccess","src":"12317:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2478,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"12340:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2479,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"12348:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2486,"nodeType":"IfStatement","src":"12307:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2470,"id":2485,"nodeType":"Return","src":"12353:17:13"}},{"expression":{"arguments":[{"id":2488,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"12419:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2489,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"12426:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2490,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"12433:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2487,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"12387:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2470,"id":2492,"nodeType":"Return","src":"12380:57:13"}]},"documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"11895:241:13","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2494,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:13","nodeType":"FunctionDefinition","parameters":{"id":2465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"input","nameLocation":"12189:5:13","nodeType":"VariableDeclaration","scope":2494,"src":"12175:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2459,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2462,"mutability":"mutable","name":"begin","nameLocation":"12212:5:13","nodeType":"VariableDeclaration","scope":2494,"src":"12204:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2464,"mutability":"mutable","name":"end","nameLocation":"12235:3:13","nodeType":"VariableDeclaration","scope":2494,"src":"12227:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2463,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:13"},"returnParameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"success","nameLocation":"12273:7:13","nodeType":"VariableDeclaration","scope":2494,"src":"12268:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2466,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"value","nameLocation":"12290:5:13","nodeType":"VariableDeclaration","scope":2494,"src":"12282:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:13"},"scope":3011,"src":"12141:303:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2596,"nodeType":"Block","src":"12853:881:13","statements":[{"assignments":[2509],"declarations":[{"constant":false,"id":2509,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:13","nodeType":"VariableDeclaration","scope":2596,"src":"12863:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2508,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2514,"initialValue":{"arguments":[{"id":2512,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"12891:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2510,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:13","typeDescriptions":{}}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:13"},{"assignments":[2516],"declarations":[{"constant":false,"id":2516,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:13","nodeType":"VariableDeclaration","scope":2596,"src":"12945:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2515,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2536,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2517,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"12963:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2518,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"12969:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2522,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2526,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"13013:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2527,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"13021:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2525,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"12990:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2523,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:13","typeDescriptions":{}}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2530,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:13","typeDescriptions":{}}},"id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:13"},{"assignments":[2538],"declarations":[{"constant":false,"id":2538,"mutability":"mutable","name":"offset","nameLocation":"13133:6:13","nodeType":"VariableDeclaration","scope":2596,"src":"13125:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2544,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2539,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"13142:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"13142:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:13"},{"assignments":[2546],"declarations":[{"constant":false,"id":2546,"mutability":"mutable","name":"result","nameLocation":"13183:6:13","nodeType":"VariableDeclaration","scope":2596,"src":"13175:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2548,"initialValue":{"hexValue":"30","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:13"},{"body":{"id":2590,"nodeType":"Block","src":"13250:447:13","statements":[{"assignments":[2562],"declarations":[{"constant":false,"id":2562,"mutability":"mutable","name":"chr","nameLocation":"13270:3:13","nodeType":"VariableDeclaration","scope":2590,"src":"13264:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2561,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2572,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2567,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"13319:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2568,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"13327:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2566,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"13296:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2564,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:13","typeDescriptions":{}}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2563,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"13276:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2573,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"13349:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2580,"nodeType":"IfStatement","src":"13345:31:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2507,"id":2579,"nodeType":"Return","src":"13359:17:13"}},{"expression":{"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"13390:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2584,"nodeType":"ExpressionStatement","src":"13390:12:13"},{"id":2589,"nodeType":"UncheckedBlock","src":"13416:271:13","statements":[{"expression":{"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2585,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"13659:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2586,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"13669:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2588,"nodeType":"ExpressionStatement","src":"13659:13:13"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2555,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"13236:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2556,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"13240:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2591,"initializationExpression":{"assignments":[2550],"declarations":[{"constant":false,"id":2550,"mutability":"mutable","name":"i","nameLocation":"13216:1:13","nodeType":"VariableDeclaration","scope":2591,"src":"13208:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2554,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2551,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"13220:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2552,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"13228:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:13"},"loopExpression":{"expression":{"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:13","subExpression":{"id":2558,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"13247:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2560,"nodeType":"ExpressionStatement","src":"13245:3:13"},"nodeType":"ForStatement","src":"13203:494:13"},{"expression":{"components":[{"hexValue":"74727565","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2593,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"13720:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2507,"id":2595,"nodeType":"Return","src":"13706:21:13"}]},"documentation":{"id":2495,"nodeType":"StructuredDocumentation","src":"12450:227:13","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:13","nodeType":"FunctionDefinition","parameters":{"id":2502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"input","nameLocation":"12746:5:13","nodeType":"VariableDeclaration","scope":2597,"src":"12732:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2496,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2499,"mutability":"mutable","name":"begin","nameLocation":"12769:5:13","nodeType":"VariableDeclaration","scope":2597,"src":"12761:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2498,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2501,"mutability":"mutable","name":"end","nameLocation":"12792:3:13","nodeType":"VariableDeclaration","scope":2597,"src":"12784:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:13"},"returnParameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"success","nameLocation":"12829:7:13","nodeType":"VariableDeclaration","scope":2597,"src":"12824:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2503,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2506,"mutability":"mutable","name":"value","nameLocation":"12846:5:13","nodeType":"VariableDeclaration","scope":2597,"src":"12838:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2505,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:13"},"scope":3011,"src":"12682:1052:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2615,"nodeType":"Block","src":"14032:67:13","statements":[{"expression":{"arguments":[{"id":2606,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"14062:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2610,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"14078:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2608,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:13","typeDescriptions":{}}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:13","memberName":"length","nodeType":"MemberAccess","src":"14072:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2605,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2616,2647],"referencedDeclaration":2647,"src":"14049:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2604,"id":2614,"nodeType":"Return","src":"14042:50:13"}]},"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"13740:212:13","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2616,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:13","nodeType":"FunctionDefinition","parameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"input","nameLocation":"13993:5:13","nodeType":"VariableDeclaration","scope":2616,"src":"13979:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2599,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:13"},"returnParameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2616,"src":"14023:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2602,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:13"},"scope":3011,"src":"13957:142:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2646,"nodeType":"Block","src":"14472:165:13","statements":[{"assignments":[2629,2631],"declarations":[{"constant":false,"id":2629,"mutability":"mutable","name":"success","nameLocation":"14488:7:13","nodeType":"VariableDeclaration","scope":2646,"src":"14483:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2628,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2631,"mutability":"mutable","name":"value","nameLocation":"14505:5:13","nodeType":"VariableDeclaration","scope":2646,"src":"14497:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2630,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2637,"initialValue":{"arguments":[{"id":2633,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"14530:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2634,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"14537:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2635,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"14544:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2632,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2668,2772],"referencedDeclaration":2772,"src":"14514:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:13"},{"condition":{"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:13","subExpression":{"id":2638,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"14563:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2643,"nodeType":"IfStatement","src":"14558:50:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2640,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"14579:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2642,"nodeType":"RevertStatement","src":"14572:36:13"}},{"expression":{"id":2644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"14625:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2627,"id":2645,"nodeType":"Return","src":"14618:12:13"}]},"documentation":{"id":2617,"nodeType":"StructuredDocumentation","src":"14105:259:13","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2647,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:13","nodeType":"FunctionDefinition","parameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"input","nameLocation":"14405:5:13","nodeType":"VariableDeclaration","scope":2647,"src":"14391:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2618,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2621,"mutability":"mutable","name":"begin","nameLocation":"14420:5:13","nodeType":"VariableDeclaration","scope":2647,"src":"14412:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2623,"mutability":"mutable","name":"end","nameLocation":"14435:3:13","nodeType":"VariableDeclaration","scope":2647,"src":"14427:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:13"},"returnParameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2647,"src":"14463:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2625,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:13"},"scope":3011,"src":"14369:268:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2667,"nodeType":"Block","src":"14944:70:13","statements":[{"expression":{"arguments":[{"id":2658,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"14977:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2662,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"14993:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2660,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:13","typeDescriptions":{}}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:13","memberName":"length","nodeType":"MemberAccess","src":"14987:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2657,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2668,2772],"referencedDeclaration":2772,"src":"14961:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2656,"id":2666,"nodeType":"Return","src":"14954:53:13"}]},"documentation":{"id":2648,"nodeType":"StructuredDocumentation","src":"14643:198:13","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2668,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:13","nodeType":"FunctionDefinition","parameters":{"id":2651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2650,"mutability":"mutable","name":"input","nameLocation":"14885:5:13","nodeType":"VariableDeclaration","scope":2668,"src":"14871:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2649,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:13"},"returnParameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"success","nameLocation":"14920:7:13","nodeType":"VariableDeclaration","scope":2668,"src":"14915:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2652,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2655,"mutability":"mutable","name":"value","nameLocation":"14937:5:13","nodeType":"VariableDeclaration","scope":2668,"src":"14929:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2654,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:13"},"scope":3011,"src":"14846:168:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2771,"nodeType":"Block","src":"15407:733:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2682,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"15421:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2685,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"15433:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2683,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:13","typeDescriptions":{}}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:13","memberName":"length","nodeType":"MemberAccess","src":"15427:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2689,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"15450:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2690,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"15458:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2700,"nodeType":"IfStatement","src":"15417:72:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2694,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:13","typeDescriptions":{}}},"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2698,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2681,"id":2699,"nodeType":"Return","src":"15463:26:13"}},{"assignments":[2702],"declarations":[{"constant":false,"id":2702,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:13","nodeType":"VariableDeclaration","scope":2771,"src":"15500:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2701,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2725,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2703,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"15518:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2704,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"15524:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2714,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"15574:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2712,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:13","typeDescriptions":{}}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2716,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"15582:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2711,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"15545:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2709,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:13","typeDescriptions":{}}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2719,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:13","typeDescriptions":{}}},"id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:13"},{"assignments":[2727],"declarations":[{"constant":false,"id":2727,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:13","nodeType":"VariableDeclaration","scope":2771,"src":"15686:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2726,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2735,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2729,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"15716:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"15716:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2736,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"15803:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2737,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"15809:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2739,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"15818:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2769,"nodeType":"Block","src":"16083:51:13","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2763,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:13","typeDescriptions":{}}},"id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2681,"id":2768,"nodeType":"Return","src":"16097:26:13"}]},"id":2770,"nodeType":"IfStatement","src":"15799:335:13","trueBody":{"id":2761,"nodeType":"Block","src":"15834:243:13","statements":[{"assignments":[2742,2744],"declarations":[{"constant":false,"id":2742,"mutability":"mutable","name":"s","nameLocation":"15955:1:13","nodeType":"VariableDeclaration","scope":2761,"src":"15950:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2741,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2744,"mutability":"mutable","name":"v","nameLocation":"15966:1:13","nodeType":"VariableDeclaration","scope":2761,"src":"15958:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2743,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2750,"initialValue":{"arguments":[{"id":2746,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"16003:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2747,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"16010:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2748,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"16017:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2745,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"15971:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:13"},{"expression":{"components":[{"id":2751,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"16043:1:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2756,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16062:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2754,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:13","typeDescriptions":{}}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2752,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:13","typeDescriptions":{}}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2759,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2681,"id":2760,"nodeType":"Return","src":"16035:31:13"}]}}]},"documentation":{"id":2669,"nodeType":"StructuredDocumentation","src":"15020:226:13","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2772,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:13","nodeType":"FunctionDefinition","parameters":{"id":2676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"input","nameLocation":"15299:5:13","nodeType":"VariableDeclaration","scope":2772,"src":"15285:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2670,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"begin","nameLocation":"15322:5:13","nodeType":"VariableDeclaration","scope":2772,"src":"15314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2672,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2675,"mutability":"mutable","name":"end","nameLocation":"15345:3:13","nodeType":"VariableDeclaration","scope":2772,"src":"15337:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2674,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:13"},"returnParameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"success","nameLocation":"15383:7:13","nodeType":"VariableDeclaration","scope":2772,"src":"15378:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2677,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"value","nameLocation":"15400:5:13","nodeType":"VariableDeclaration","scope":2772,"src":"15392:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2679,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:13"},"scope":3011,"src":"15251:889:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2831,"nodeType":"Block","src":"16209:461:13","statements":[{"assignments":[2780],"declarations":[{"constant":false,"id":2780,"mutability":"mutable","name":"value","nameLocation":"16225:5:13","nodeType":"VariableDeclaration","scope":2831,"src":"16219:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2779,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2785,"initialValue":{"arguments":[{"id":2783,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"16239:3:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2781,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:13","typeDescriptions":{}}},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:13"},{"id":2828,"nodeType":"UncheckedBlock","src":"16403:238:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"16431:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:13","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"16445:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:13","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"16491:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"16505:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:13","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"16552:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"16566:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:13","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2820,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2819,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:13","memberName":"max","nodeType":"MemberAccess","src":"16615:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2778,"id":2824,"nodeType":"Return","src":"16608:22:13"},"id":2825,"nodeType":"IfStatement","src":"16548:82:13","trueBody":{"expression":{"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"16578:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:13","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2818,"nodeType":"ExpressionStatement","src":"16578:11:13"}},"id":2826,"nodeType":"IfStatement","src":"16487:143:13","trueBody":{"expression":{"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"16518:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:13","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2807,"nodeType":"ExpressionStatement","src":"16518:11:13"}},"id":2827,"nodeType":"IfStatement","src":"16427:203:13","trueBody":{"expression":{"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"16457:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2796,"nodeType":"ExpressionStatement","src":"16457:11:13"}}]},{"expression":{"id":2829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"16658:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2778,"id":2830,"nodeType":"Return","src":"16651:12:13"}]},"id":2832,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:13","nodeType":"FunctionDefinition","parameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"chr","nameLocation":"16175:3:13","nodeType":"VariableDeclaration","scope":2832,"src":"16168:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2773,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:13"},"returnParameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2832,"src":"16202:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2776,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:13"},"scope":3011,"src":"16146:524:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2997,"nodeType":"Block","src":"17336:1331:13","statements":[{"assignments":[2841],"declarations":[{"constant":false,"id":2841,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:13","nodeType":"VariableDeclaration","scope":2997,"src":"17346:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2840,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2846,"initialValue":{"arguments":[{"id":2844,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"17374:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2842,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:13","typeDescriptions":{}}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:13"},{"assignments":[2848],"declarations":[{"constant":false,"id":2848,"mutability":"mutable","name":"output","nameLocation":"17403:6:13","nodeType":"VariableDeclaration","scope":2997,"src":"17390:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2847,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2856,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2852,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"17426:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:13","memberName":"length","nodeType":"MemberAccess","src":"17426:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2849,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:13"},{"assignments":[2858],"declarations":[{"constant":false,"id":2858,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:13","nodeType":"VariableDeclaration","scope":2997,"src":"17473:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2857,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2860,"initialValue":{"hexValue":"30","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:13"},{"body":{"id":2989,"nodeType":"Block","src":"17548:854:13","statements":[{"assignments":[2872],"declarations":[{"constant":false,"id":2872,"mutability":"mutable","name":"char","nameLocation":"17569:4:13","nodeType":"VariableDeclaration","scope":2989,"src":"17562:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2871,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2880,"initialValue":{"arguments":[{"arguments":[{"id":2876,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"17606:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2877,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"17614:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2875,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"17583:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2873,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:13","typeDescriptions":{}}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:13"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2881,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"17637:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":2885,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"17672:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2883,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:13","typeDescriptions":{}}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2987,"nodeType":"Block","src":"18330:62:13","statements":[{"expression":{"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2980,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"18348:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2983,"indexExpression":{"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:13","subExpression":{"id":2981,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"18355:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2984,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"18373:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2986,"nodeType":"ExpressionStatement","src":"18348:29:13"}]},"id":2988,"nodeType":"IfStatement","src":"17631:761:13","trueBody":{"id":2979,"nodeType":"Block","src":"17687:637:13","statements":[{"expression":{"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2894,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"17705:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2897,"indexExpression":{"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:13","subExpression":{"id":2895,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"17712:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2900,"nodeType":"ExpressionStatement","src":"17705:29:13"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2901,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"17756:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2911,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"17825:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:13","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"17894:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2931,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"17963:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:13","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2941,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"18032:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:13","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"18101:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:13","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2961,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"18171:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:13","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2972,"nodeType":"IfStatement","src":"18167:143:13","trueBody":{"id":2971,"nodeType":"Block","src":"18185:125:13","statements":[{"expression":{"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2964,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"18263:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2967,"indexExpression":{"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:13","subExpression":{"id":2965,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"18270:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2970,"nodeType":"ExpressionStatement","src":"18263:28:13"}]}},"id":2973,"nodeType":"IfStatement","src":"18097:213:13","trueBody":{"expression":{"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2954,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"18115:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2957,"indexExpression":{"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:13","subExpression":{"id":2955,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"18122:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2960,"nodeType":"ExpressionStatement","src":"18115:29:13"}},"id":2974,"nodeType":"IfStatement","src":"18028:282:13","trueBody":{"expression":{"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2944,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"18046:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2947,"indexExpression":{"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:13","subExpression":{"id":2945,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"18053:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2950,"nodeType":"ExpressionStatement","src":"18046:28:13"}},"id":2975,"nodeType":"IfStatement","src":"17959:351:13","trueBody":{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2934,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"17977:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2937,"indexExpression":{"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:13","subExpression":{"id":2935,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"17984:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2940,"nodeType":"ExpressionStatement","src":"17977:28:13"}},"id":2976,"nodeType":"IfStatement","src":"17890:420:13","trueBody":{"expression":{"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2924,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"17908:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2927,"indexExpression":{"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:13","subExpression":{"id":2925,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"17915:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2930,"nodeType":"ExpressionStatement","src":"17908:28:13"}},"id":2977,"nodeType":"IfStatement","src":"17821:489:13","trueBody":{"expression":{"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2914,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"17839:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2917,"indexExpression":{"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:13","subExpression":{"id":2915,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"17846:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2920,"nodeType":"ExpressionStatement","src":"17839:28:13"}},"id":2978,"nodeType":"IfStatement","src":"17752:558:13","trueBody":{"expression":{"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2904,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"17770:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2907,"indexExpression":{"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:13","subExpression":{"id":2905,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"17777:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2910,"nodeType":"ExpressionStatement","src":"17770:28:13"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2864,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"17524:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2865,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"17528:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:13","memberName":"length","nodeType":"MemberAccess","src":"17528:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2990,"initializationExpression":{"assignments":[2862],"declarations":[{"constant":false,"id":2862,"mutability":"mutable","name":"i","nameLocation":"17521:1:13","nodeType":"VariableDeclaration","scope":2990,"src":"17513:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2863,"nodeType":"VariableDeclarationStatement","src":"17513:9:13"},"loopExpression":{"expression":{"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:13","subExpression":{"id":2868,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"17545:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2870,"nodeType":"ExpressionStatement","src":"17543:3:13"},"nodeType":"ForStatement","src":"17508:894:13"},{"AST":{"nodeType":"YulBlock","src":"18500:129:13","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18521:6:13"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18529:12:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18514:6:13"},"nodeType":"YulFunctionCall","src":"18514:28:13"},"nodeType":"YulExpressionStatement","src":"18514:28:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18562:4:13","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18572:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18584:1:13","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18591:1:13","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18598:12:13"},{"kind":"number","nodeType":"YulLiteral","src":"18612:2:13","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:13"},"nodeType":"YulFunctionCall","src":"18594:21:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18587:3:13"},"nodeType":"YulFunctionCall","src":"18587:29:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18580:3:13"},"nodeType":"YulFunctionCall","src":"18580:37:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18568:3:13"},"nodeType":"YulFunctionCall","src":"18568:50:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18555:6:13"},"nodeType":"YulFunctionCall","src":"18555:64:13"},"nodeType":"YulExpressionStatement","src":"18555:64:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":2848,"isOffset":false,"isSlot":false,"src":"18521:6:13","valueSize":1},{"declaration":2848,"isOffset":false,"isSlot":false,"src":"18572:6:13","valueSize":1},{"declaration":2858,"isOffset":false,"isSlot":false,"src":"18529:12:13","valueSize":1},{"declaration":2858,"isOffset":false,"isSlot":false,"src":"18598:12:13","valueSize":1}],"flags":["memory-safe"],"id":2991,"nodeType":"InlineAssembly","src":"18475:154:13"},{"expression":{"arguments":[{"id":2994,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"18653:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2992,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:13","typeDescriptions":{}}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2839,"id":2996,"nodeType":"Return","src":"18639:21:13"}]},"documentation":{"id":2833,"nodeType":"StructuredDocumentation","src":"16676:576:13","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":2998,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:13","nodeType":"FunctionDefinition","parameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"input","nameLocation":"17291:5:13","nodeType":"VariableDeclaration","scope":2998,"src":"17277:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2834,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:13"},"returnParameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2998,"src":"17321:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2837,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:13"},"scope":3011,"src":"17257:1410:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3009,"nodeType":"Block","src":"19052:225:13","statements":[{"AST":{"nodeType":"YulBlock","src":"19201:70:13","statements":[{"nodeType":"YulAssignment","src":"19215:46:13","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19238:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"19246:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:13"},"nodeType":"YulFunctionCall","src":"19234:17:13"},{"name":"offset","nodeType":"YulIdentifier","src":"19253:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19230:3:13"},"nodeType":"YulFunctionCall","src":"19230:30:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19224:5:13"},"nodeType":"YulFunctionCall","src":"19224:37:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19215:5:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3001,"isOffset":false,"isSlot":false,"src":"19238:6:13","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"19253:6:13","valueSize":1},{"declaration":3006,"isOffset":false,"isSlot":false,"src":"19215:5:13","valueSize":1}],"flags":["memory-safe"],"id":3008,"nodeType":"InlineAssembly","src":"19176:95:13"}]},"documentation":{"id":2999,"nodeType":"StructuredDocumentation","src":"18673:268:13","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3010,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:13","nodeType":"FunctionDefinition","parameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:13","nodeType":"VariableDeclaration","scope":3010,"src":"18978:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3000,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"offset","nameLocation":"19007:6:13","nodeType":"VariableDeclaration","scope":3010,"src":"18999:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:13"},"returnParameters":{"id":3007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3006,"mutability":"mutable","name":"value","nameLocation":"19045:5:13","nodeType":"VariableDeclaration","scope":3010,"src":"19037:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:13"},"scope":3011,"src":"18946:331:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3012,"src":"297:18982:13","usedErrors":[1669,1672,1675],"usedEvents":[]}],"src":"101:19179:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3359]},"id":3360,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3013,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3014,"nodeType":"StructuredDocumentation","src":"138:205:14","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3359,"linearizedBaseContracts":[3359],"name":"ECDSA","nameLocation":"352:5:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3019,"members":[{"id":3015,"name":"NoError","nameLocation":"392:7:14","nodeType":"EnumValue","src":"392:7:14"},{"id":3016,"name":"InvalidSignature","nameLocation":"409:16:14","nodeType":"EnumValue","src":"409:16:14"},{"id":3017,"name":"InvalidSignatureLength","nameLocation":"435:22:14","nodeType":"EnumValue","src":"435:22:14"},{"id":3018,"name":"InvalidSignatureS","nameLocation":"467:17:14","nodeType":"EnumValue","src":"467:17:14"}],"name":"RecoverError","nameLocation":"369:12:14","nodeType":"EnumDefinition","src":"364:126:14"},{"documentation":{"id":3020,"nodeType":"StructuredDocumentation","src":"496:63:14","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3022,"name":"ECDSAInvalidSignature","nameLocation":"570:21:14","nodeType":"ErrorDefinition","parameters":{"id":3021,"nodeType":"ParameterList","parameters":[],"src":"591:2:14"},"src":"564:30:14"},{"documentation":{"id":3023,"nodeType":"StructuredDocumentation","src":"600:60:14","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3027,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:14","nodeType":"ErrorDefinition","parameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"length","nameLocation":"707:6:14","nodeType":"VariableDeclaration","scope":3027,"src":"699:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:14"},"src":"665:50:14"},{"documentation":{"id":3028,"nodeType":"StructuredDocumentation","src":"721:85:14","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3032,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:14","nodeType":"ErrorDefinition","parameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"s","nameLocation":"848:1:14","nodeType":"VariableDeclaration","scope":3032,"src":"840:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:14"},"src":"811:40:14"},{"body":{"id":3084,"nodeType":"Block","src":"2285:622:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3047,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"2299:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:14","memberName":"length","nodeType":"MemberAccess","src":"2299:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3082,"nodeType":"Block","src":"2793:108:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3069,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:14","typeDescriptions":{}}},"id":3072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3073,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"2827:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3019_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:14","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3017,"src":"2827:35:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3077,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"2872:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:14","memberName":"length","nodeType":"MemberAccess","src":"2872:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:14","typeDescriptions":{}}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3019_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3046,"id":3081,"nodeType":"Return","src":"2807:83:14"}]},"id":3083,"nodeType":"IfStatement","src":"2295:606:14","trueBody":{"id":3068,"nodeType":"Block","src":"2323:464:14","statements":[{"assignments":[3052],"declarations":[{"constant":false,"id":3052,"mutability":"mutable","name":"r","nameLocation":"2345:1:14","nodeType":"VariableDeclaration","scope":3068,"src":"2337:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3053,"nodeType":"VariableDeclarationStatement","src":"2337:9:14"},{"assignments":[3055],"declarations":[{"constant":false,"id":3055,"mutability":"mutable","name":"s","nameLocation":"2368:1:14","nodeType":"VariableDeclaration","scope":3068,"src":"2360:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3056,"nodeType":"VariableDeclarationStatement","src":"2360:9:14"},{"assignments":[3058],"declarations":[{"constant":false,"id":3058,"mutability":"mutable","name":"v","nameLocation":"2389:1:14","nodeType":"VariableDeclaration","scope":3068,"src":"2383:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3057,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3059,"nodeType":"VariableDeclarationStatement","src":"2383:7:14"},{"AST":{"nodeType":"YulBlock","src":"2560:171:14","statements":[{"nodeType":"YulAssignment","src":"2578:32:14","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:14"},"nodeType":"YulFunctionCall","src":"2589:20:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:14"},"nodeType":"YulFunctionCall","src":"2583:27:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:14"}]},{"nodeType":"YulAssignment","src":"2627:32:14","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:14"},"nodeType":"YulFunctionCall","src":"2638:20:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:14"},"nodeType":"YulFunctionCall","src":"2632:27:14"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:14"}]},{"nodeType":"YulAssignment","src":"2676:41:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:14","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:14","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:14"},"nodeType":"YulFunctionCall","src":"2695:20:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:14"},"nodeType":"YulFunctionCall","src":"2689:27:14"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:14"},"nodeType":"YulFunctionCall","src":"2681:36:14"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3052,"isOffset":false,"isSlot":false,"src":"2578:1:14","valueSize":1},{"declaration":3055,"isOffset":false,"isSlot":false,"src":"2627:1:14","valueSize":1},{"declaration":3037,"isOffset":false,"isSlot":false,"src":"2593:9:14","valueSize":1},{"declaration":3037,"isOffset":false,"isSlot":false,"src":"2642:9:14","valueSize":1},{"declaration":3037,"isOffset":false,"isSlot":false,"src":"2699:9:14","valueSize":1},{"declaration":3058,"isOffset":false,"isSlot":false,"src":"2676:1:14","valueSize":1}],"flags":["memory-safe"],"id":3060,"nodeType":"InlineAssembly","src":"2535:196:14"},{"expression":{"arguments":[{"id":3062,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"2762:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3063,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"2768:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3064,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"2771:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3065,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"2774:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3061,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3085,3165,3273],"referencedDeclaration":3273,"src":"2751:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3019_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3019_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3046,"id":3067,"nodeType":"Return","src":"2744:32:14"}]}}]},"documentation":{"id":3033,"nodeType":"StructuredDocumentation","src":"857:1267:14","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3085,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:14","nodeType":"FunctionDefinition","parameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3035,"mutability":"mutable","name":"hash","nameLocation":"2166:4:14","nodeType":"VariableDeclaration","scope":3085,"src":"2158:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3037,"mutability":"mutable","name":"signature","nameLocation":"2193:9:14","nodeType":"VariableDeclaration","scope":3085,"src":"2180:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3036,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:14"},"returnParameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:14","nodeType":"VariableDeclaration","scope":3085,"src":"2232:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3039,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3043,"mutability":"mutable","name":"err","nameLocation":"2264:3:14","nodeType":"VariableDeclaration","scope":3085,"src":"2251:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3042,"nodeType":"UserDefinedTypeName","pathNode":{"id":3041,"name":"RecoverError","nameLocations":["2251:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":3019,"src":"2251:12:14"},"referencedDeclaration":3019,"src":"2251:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3045,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:14","nodeType":"VariableDeclaration","scope":3085,"src":"2269:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:14"},"scope":3359,"src":"2129:778:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3114,"nodeType":"Block","src":"3801:168:14","statements":[{"assignments":[3096,3099,3101],"declarations":[{"constant":false,"id":3096,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:14","nodeType":"VariableDeclaration","scope":3114,"src":"3812:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3095,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3099,"mutability":"mutable","name":"error","nameLocation":"3844:5:14","nodeType":"VariableDeclaration","scope":3114,"src":"3831:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3098,"nodeType":"UserDefinedTypeName","pathNode":{"id":3097,"name":"RecoverError","nameLocations":["3831:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":3019,"src":"3831:12:14"},"referencedDeclaration":3019,"src":"3831:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3101,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:14","nodeType":"VariableDeclaration","scope":3114,"src":"3851:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3106,"initialValue":{"arguments":[{"id":3103,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"3882:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3104,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"3888:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3102,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3085,3165,3273],"referencedDeclaration":3085,"src":"3871:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3019_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3019_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:14"},{"expression":{"arguments":[{"id":3108,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"3920:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},{"id":3109,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"3927:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3107,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"3908:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3019_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3111,"nodeType":"ExpressionStatement","src":"3908:28:14"},{"expression":{"id":3112,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"3953:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3094,"id":3113,"nodeType":"Return","src":"3946:16:14"}]},"documentation":{"id":3086,"nodeType":"StructuredDocumentation","src":"2913:796:14","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3115,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:14","nodeType":"FunctionDefinition","parameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"hash","nameLocation":"3739:4:14","nodeType":"VariableDeclaration","scope":3115,"src":"3731:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3090,"mutability":"mutable","name":"signature","nameLocation":"3758:9:14","nodeType":"VariableDeclaration","scope":3115,"src":"3745:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3089,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:14"},"returnParameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3115,"src":"3792:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3092,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:14"},"scope":3359,"src":"3714:255:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3164,"nodeType":"Block","src":"4348:342:14","statements":[{"id":3163,"nodeType":"UncheckedBlock","src":"4358:326:14","statements":[{"assignments":[3133],"declarations":[{"constant":false,"id":3133,"mutability":"mutable","name":"s","nameLocation":"4390:1:14","nodeType":"VariableDeclaration","scope":3163,"src":"4382:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3140,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3134,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"4394:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:14","typeDescriptions":{}}},"id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:14"},{"assignments":[3142],"declarations":[{"constant":false,"id":3142,"mutability":"mutable","name":"v","nameLocation":"4591:1:14","nodeType":"VariableDeclaration","scope":3163,"src":"4585:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3141,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3155,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3147,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"4610:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3145,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:14","typeDescriptions":{}}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:14","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3143,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:14","typeDescriptions":{}}},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:14"},{"expression":{"arguments":[{"id":3157,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4659:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3158,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"4665:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3159,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"4668:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3160,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"4671:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3156,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3085,3165,3273],"referencedDeclaration":3273,"src":"4648:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3019_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3019_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3131,"id":3162,"nodeType":"Return","src":"4641:32:14"}]}]},"documentation":{"id":3116,"nodeType":"StructuredDocumentation","src":"3975:205:14","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3165,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:14","nodeType":"FunctionDefinition","parameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"hash","nameLocation":"4222:4:14","nodeType":"VariableDeclaration","scope":3165,"src":"4214:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3120,"mutability":"mutable","name":"r","nameLocation":"4244:1:14","nodeType":"VariableDeclaration","scope":3165,"src":"4236:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3122,"mutability":"mutable","name":"vs","nameLocation":"4263:2:14","nodeType":"VariableDeclaration","scope":3165,"src":"4255:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:14"},"returnParameters":{"id":3131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:14","nodeType":"VariableDeclaration","scope":3165,"src":"4295:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3124,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3128,"mutability":"mutable","name":"err","nameLocation":"4327:3:14","nodeType":"VariableDeclaration","scope":3165,"src":"4314:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3127,"nodeType":"UserDefinedTypeName","pathNode":{"id":3126,"name":"RecoverError","nameLocations":["4314:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":3019,"src":"4314:12:14"},"referencedDeclaration":3019,"src":"4314:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3130,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:14","nodeType":"VariableDeclaration","scope":3165,"src":"4332:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:14"},"scope":3359,"src":"4185:505:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3197,"nodeType":"Block","src":"4903:164:14","statements":[{"assignments":[3178,3181,3183],"declarations":[{"constant":false,"id":3178,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:14","nodeType":"VariableDeclaration","scope":3197,"src":"4914:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3177,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3181,"mutability":"mutable","name":"error","nameLocation":"4946:5:14","nodeType":"VariableDeclaration","scope":3197,"src":"4933:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3180,"nodeType":"UserDefinedTypeName","pathNode":{"id":3179,"name":"RecoverError","nameLocations":["4933:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":3019,"src":"4933:12:14"},"referencedDeclaration":3019,"src":"4933:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3183,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:14","nodeType":"VariableDeclaration","scope":3197,"src":"4953:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3189,"initialValue":{"arguments":[{"id":3185,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"4984:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3186,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"4990:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3187,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"4993:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3184,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3085,3165,3273],"referencedDeclaration":3165,"src":"4973:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3019_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3019_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:14"},{"expression":{"arguments":[{"id":3191,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"5018:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},{"id":3192,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"5025:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3190,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"5006:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3019_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3194,"nodeType":"ExpressionStatement","src":"5006:28:14"},{"expression":{"id":3195,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"5051:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3176,"id":3196,"nodeType":"Return","src":"5044:16:14"}]},"documentation":{"id":3166,"nodeType":"StructuredDocumentation","src":"4696:116:14","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3198,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:14","nodeType":"FunctionDefinition","parameters":{"id":3173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"hash","nameLocation":"4842:4:14","nodeType":"VariableDeclaration","scope":3198,"src":"4834:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3170,"mutability":"mutable","name":"r","nameLocation":"4856:1:14","nodeType":"VariableDeclaration","scope":3198,"src":"4848:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3172,"mutability":"mutable","name":"vs","nameLocation":"4867:2:14","nodeType":"VariableDeclaration","scope":3198,"src":"4859:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:14"},"returnParameters":{"id":3176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3198,"src":"4894:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3174,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:14"},"scope":3359,"src":"4817:250:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3272,"nodeType":"Block","src":"5382:1372:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3219,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"6278:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3217,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:14","typeDescriptions":{}}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3233,"nodeType":"IfStatement","src":"6266:164:14","trueBody":{"id":3232,"nodeType":"Block","src":"6351:79:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3223,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:14","typeDescriptions":{}}},"id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3227,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"6385:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3019_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:14","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3018,"src":"6385:30:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},{"id":3229,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"6417:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3019_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3216,"id":3231,"nodeType":"Return","src":"6365:54:14"}]}},{"assignments":[3235],"declarations":[{"constant":false,"id":3235,"mutability":"mutable","name":"signer","nameLocation":"6532:6:14","nodeType":"VariableDeclaration","scope":3272,"src":"6524:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3234,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3242,"initialValue":{"arguments":[{"id":3237,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"6551:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3238,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"6557:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3239,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"6560:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3240,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"6563:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3236,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:14","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3243,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"6579:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3244,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:14","typeDescriptions":{}}},"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3262,"nodeType":"IfStatement","src":"6575:113:14","trueBody":{"id":3261,"nodeType":"Block","src":"6601:87:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3249,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:14","typeDescriptions":{}}},"id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3253,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"6635:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3019_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:14","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3016,"src":"6635:29:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:14","typeDescriptions":{}}},"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3019_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3216,"id":3260,"nodeType":"Return","src":"6615:62:14"}]}},{"expression":{"components":[{"id":3263,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"6706:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3264,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"6714:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3019_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:14","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3015,"src":"6714:20:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:14","typeDescriptions":{}}},"id":3269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3019_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3216,"id":3271,"nodeType":"Return","src":"6698:49:14"}]},"documentation":{"id":3199,"nodeType":"StructuredDocumentation","src":"5073:125:14","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3273,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:14","nodeType":"FunctionDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3201,"mutability":"mutable","name":"hash","nameLocation":"5240:4:14","nodeType":"VariableDeclaration","scope":3273,"src":"5232:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3203,"mutability":"mutable","name":"v","nameLocation":"5260:1:14","nodeType":"VariableDeclaration","scope":3273,"src":"5254:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3202,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3205,"mutability":"mutable","name":"r","nameLocation":"5279:1:14","nodeType":"VariableDeclaration","scope":3273,"src":"5271:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3207,"mutability":"mutable","name":"s","nameLocation":"5298:1:14","nodeType":"VariableDeclaration","scope":3273,"src":"5290:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:14"},"returnParameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:14","nodeType":"VariableDeclaration","scope":3273,"src":"5329:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3209,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3213,"mutability":"mutable","name":"err","nameLocation":"5361:3:14","nodeType":"VariableDeclaration","scope":3273,"src":"5348:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3212,"nodeType":"UserDefinedTypeName","pathNode":{"id":3211,"name":"RecoverError","nameLocations":["5348:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":3019,"src":"5348:12:14"},"referencedDeclaration":3019,"src":"5348:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3215,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:14","nodeType":"VariableDeclaration","scope":3273,"src":"5366:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:14"},"scope":3359,"src":"5203:1551:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3308,"nodeType":"Block","src":"6981:166:14","statements":[{"assignments":[3288,3291,3293],"declarations":[{"constant":false,"id":3288,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:14","nodeType":"VariableDeclaration","scope":3308,"src":"6992:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3287,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3291,"mutability":"mutable","name":"error","nameLocation":"7024:5:14","nodeType":"VariableDeclaration","scope":3308,"src":"7011:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3290,"nodeType":"UserDefinedTypeName","pathNode":{"id":3289,"name":"RecoverError","nameLocations":["7011:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":3019,"src":"7011:12:14"},"referencedDeclaration":3019,"src":"7011:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:14","nodeType":"VariableDeclaration","scope":3308,"src":"7031:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3300,"initialValue":{"arguments":[{"id":3295,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"7062:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3296,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"7068:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3297,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"7071:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3298,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"7074:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3294,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3085,3165,3273],"referencedDeclaration":3273,"src":"7051:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3019_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3019_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:14"},{"expression":{"arguments":[{"id":3302,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"7098:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},{"id":3303,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"7105:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3301,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"7086:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3019_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3305,"nodeType":"ExpressionStatement","src":"7086:28:14"},{"expression":{"id":3306,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"7131:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3286,"id":3307,"nodeType":"Return","src":"7124:16:14"}]},"documentation":{"id":3274,"nodeType":"StructuredDocumentation","src":"6760:122:14","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3309,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:14","nodeType":"FunctionDefinition","parameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"hash","nameLocation":"6912:4:14","nodeType":"VariableDeclaration","scope":3309,"src":"6904:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3278,"mutability":"mutable","name":"v","nameLocation":"6924:1:14","nodeType":"VariableDeclaration","scope":3309,"src":"6918:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3277,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3280,"mutability":"mutable","name":"r","nameLocation":"6935:1:14","nodeType":"VariableDeclaration","scope":3309,"src":"6927:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3282,"mutability":"mutable","name":"s","nameLocation":"6946:1:14","nodeType":"VariableDeclaration","scope":3309,"src":"6938:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:14"},"returnParameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3309,"src":"6972:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3284,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:14"},"scope":3359,"src":"6887:260:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3357,"nodeType":"Block","src":"7352:460:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3318,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"7366:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3319,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"7375:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3019_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:14","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3015,"src":"7375:20:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3324,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"7462:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3325,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"7471:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3019_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:14","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3016,"src":"7471:29:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3332,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"7567:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3333,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"7576:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3019_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:14","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3017,"src":"7576:35:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3344,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"7701:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3345,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"7710:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3019_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:14","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3018,"src":"7710:30:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3353,"nodeType":"IfStatement","src":"7697:109:14","trueBody":{"id":3352,"nodeType":"Block","src":"7742:64:14","statements":[{"errorCall":{"arguments":[{"id":3349,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"7786:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3348,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"7763:22:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3351,"nodeType":"RevertStatement","src":"7756:39:14"}]}},"id":3354,"nodeType":"IfStatement","src":"7563:243:14","trueBody":{"id":3343,"nodeType":"Block","src":"7613:78:14","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3339,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"7670:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3337,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:14","typeDescriptions":{}}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3336,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"7634:27:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3342,"nodeType":"RevertStatement","src":"7627:53:14"}]}},"id":3355,"nodeType":"IfStatement","src":"7458:348:14","trueBody":{"id":3331,"nodeType":"Block","src":"7502:55:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3328,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"7523:21:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3330,"nodeType":"RevertStatement","src":"7516:30:14"}]}},"id":3356,"nodeType":"IfStatement","src":"7362:444:14","trueBody":{"id":3323,"nodeType":"Block","src":"7397:55:14","statements":[{"functionReturnParameters":3317,"id":3322,"nodeType":"Return","src":"7411:7:14"}]}}]},"documentation":{"id":3310,"nodeType":"StructuredDocumentation","src":"7153:122:14","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3358,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:14","nodeType":"FunctionDefinition","parameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"error","nameLocation":"7314:5:14","nodeType":"VariableDeclaration","scope":3358,"src":"7301:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3312,"nodeType":"UserDefinedTypeName","pathNode":{"id":3311,"name":"RecoverError","nameLocations":["7301:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":3019,"src":"7301:12:14"},"referencedDeclaration":3019,"src":"7301:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3019","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:14","nodeType":"VariableDeclaration","scope":3358,"src":"7321:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:14"},"returnParameters":{"id":3317,"nodeType":"ParameterList","parameters":[],"src":"7352:0:14"},"scope":3359,"src":"7280:532:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3360,"src":"344:7470:14","usedErrors":[3022,3027,3032],"usedEvents":[]}],"src":"112:7703:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3586],"IERC5267":[172],"MessageHashUtils":[4785],"ShortString":[1274],"ShortStrings":[1485]},"id":3587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3361,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3363,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3587,"sourceUnit":4786,"src":"139:56:15","symbolAliases":[{"foreign":{"id":3362,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"147:16:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3366,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3587,"sourceUnit":1486,"src":"196:62:15","symbolAliases":[{"foreign":{"id":3364,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"204:12:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3365,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"218:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3368,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3587,"sourceUnit":173,"src":"259:55:15","symbolAliases":[{"foreign":{"id":3367,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"267:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3370,"name":"IERC5267","nameLocations":["1988:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"1988:8:15"},"id":3371,"nodeType":"InheritanceSpecifier","src":"1988:8:15"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3369,"nodeType":"StructuredDocumentation","src":"316:1643:15","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3586,"linearizedBaseContracts":[3586,172],"name":"EIP712","nameLocation":"1978:6:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3373,"libraryName":{"id":3372,"name":"ShortStrings","nameLocations":["2009:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1485,"src":"2009:12:15"},"nodeType":"UsingForDirective","src":"2003:25:15"},{"constant":true,"id":3378,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:15","nodeType":"VariableDeclaration","scope":3586,"src":"2034:140:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3375,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3380,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:15","nodeType":"VariableDeclaration","scope":3586,"src":"2373:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3382,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:15","nodeType":"VariableDeclaration","scope":3586,"src":"2427:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3384,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:15","nodeType":"VariableDeclaration","scope":3586,"src":"2473:37:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3383,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3386,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:15","nodeType":"VariableDeclaration","scope":3586,"src":"2517:37:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3388,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:15","nodeType":"VariableDeclaration","scope":3586,"src":"2560:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3391,"mutability":"immutable","name":"_name","nameLocation":"2637:5:15","nodeType":"VariableDeclaration","scope":3586,"src":"2607:35:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":3390,"nodeType":"UserDefinedTypeName","pathNode":{"id":3389,"name":"ShortString","nameLocations":["2607:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2607:11:15"},"referencedDeclaration":1274,"src":"2607:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3394,"mutability":"immutable","name":"_version","nameLocation":"2678:8:15","nodeType":"VariableDeclaration","scope":3586,"src":"2648:38:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":3393,"nodeType":"UserDefinedTypeName","pathNode":{"id":3392,"name":"ShortString","nameLocations":["2648:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2648:11:15"},"referencedDeclaration":1274,"src":"2648:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3396,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:15","nodeType":"VariableDeclaration","scope":3586,"src":"2742:28:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3395,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3398,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:15","nodeType":"VariableDeclaration","scope":3586,"src":"2826:31:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3397,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3455,"nodeType":"Block","src":"3483:376:15","statements":[{"expression":{"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3406,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"3493:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3409,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"3532:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3407,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"3501:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:15","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1426,"src":"3501:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1274_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"src":"3493:53:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"id":3412,"nodeType":"ExpressionStatement","src":"3493:53:15"},{"expression":{"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3413,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"3556:8:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3416,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"3601:16:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3414,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"3567:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:15","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1426,"src":"3567:33:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1274_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"src":"3556:62:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"id":3419,"nodeType":"ExpressionStatement","src":"3556:62:15"},{"expression":{"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3420,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"3628:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3424,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"3658:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3422,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:15","typeDescriptions":{}}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3421,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3428,"nodeType":"ExpressionStatement","src":"3628:36:15"},{"expression":{"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3429,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"3674:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3433,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"3707:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3431,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:15","typeDescriptions":{}}},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3430,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3437,"nodeType":"ExpressionStatement","src":"3674:42:15"},{"expression":{"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3438,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"3727:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3439,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3442,"nodeType":"ExpressionStatement","src":"3727:30:15"},{"expression":{"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3443,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"3767:22:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3444,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"3792:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3447,"nodeType":"ExpressionStatement","src":"3767:48:15"},{"expression":{"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3448,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"3825:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3451,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3586","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3586","typeString":"contract EIP712"}],"id":3450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3449,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:15","typeDescriptions":{}}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3454,"nodeType":"ExpressionStatement","src":"3825:27:15"}]},"documentation":{"id":3399,"nodeType":"StructuredDocumentation","src":"2864:559:15","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3456,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"name","nameLocation":"3454:4:15","nodeType":"VariableDeclaration","scope":3456,"src":"3440:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3400,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3403,"mutability":"mutable","name":"version","nameLocation":"3474:7:15","nodeType":"VariableDeclaration","scope":3456,"src":"3460:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3402,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:15"},"returnParameters":{"id":3405,"nodeType":"ParameterList","parameters":[],"src":"3483:0:15"},"scope":3586,"src":"3428:431:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3481,"nodeType":"Block","src":"4007:200:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3464,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3586","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3586","typeString":"contract EIP712"}],"id":3463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3462,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:15","typeDescriptions":{}}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3466,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"4038:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3468,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3470,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"4070:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3479,"nodeType":"Block","src":"4146:55:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3476,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"4167:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3461,"id":3478,"nodeType":"Return","src":"4160:30:15"}]},"id":3480,"nodeType":"IfStatement","src":"4017:184:15","trueBody":{"id":3475,"nodeType":"Block","src":"4086:54:15","statements":[{"expression":{"id":3473,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"4107:22:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3461,"id":3474,"nodeType":"Return","src":"4100:29:15"}]}}]},"documentation":{"id":3457,"nodeType":"StructuredDocumentation","src":"3865:75:15","text":" @dev Returns the domain separator for the current chain."},"id":3482,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:15","nodeType":"FunctionDefinition","parameters":{"id":3458,"nodeType":"ParameterList","parameters":[],"src":"3972:2:15"},"returnParameters":{"id":3461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3482,"src":"3998:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:15"},"scope":3586,"src":"3945:262:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3502,"nodeType":"Block","src":"4277:115:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3490,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"4315:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3491,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"4326:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3492,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"4339:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3493,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3497,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3586","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3586","typeString":"contract EIP712"}],"id":3496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3495,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:15","typeDescriptions":{}}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3488,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:15","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3487,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3486,"id":3501,"nodeType":"Return","src":"4287:98:15"}]},"id":3503,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:15","nodeType":"FunctionDefinition","parameters":{"id":3483,"nodeType":"ParameterList","parameters":[],"src":"4243:2:15"},"returnParameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3503,"src":"4268:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:15"},"scope":3586,"src":"4213:179:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3518,"nodeType":"Block","src":"5103:90:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3513,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"5153:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3515,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"5175:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3511,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"5120:16:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4785_$","typeString":"type(library MessageHashUtils)"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:15","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4784,"src":"5120:32:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3510,"id":3517,"nodeType":"Return","src":"5113:73:15"}]},"documentation":{"id":3504,"nodeType":"StructuredDocumentation","src":"4398:614:15","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3519,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:15","nodeType":"FunctionDefinition","parameters":{"id":3507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:15","nodeType":"VariableDeclaration","scope":3519,"src":"5043:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:15"},"returnParameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3519,"src":"5094:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:15"},"scope":3586,"src":"5017:176:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[171],"body":{"id":3560,"nodeType":"Block","src":"5556:229:15","statements":[{"expression":{"components":[{"hexValue":"0f","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5587:7:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3539,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"5617:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3541,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"5644:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3543,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5674:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"5674:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3547,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5709:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3586","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3586","typeString":"contract EIP712"}],"id":3546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5701:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3545,"name":"address","nodeType":"ElementaryTypeName","src":"5701:7:15","typeDescriptions":{}}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5736:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5728:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5728:7:15","typeDescriptions":{}}},"id":3552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5728:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5766:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5752:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3553,"name":"uint256","nodeType":"ElementaryTypeName","src":"5756:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3554,"nodeType":"ArrayTypeName","src":"5756:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5573:205:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3537,"id":3559,"nodeType":"Return","src":"5566:212:15"}]},"documentation":{"id":3520,"nodeType":"StructuredDocumentation","src":"5199:24:15","text":"@inheritdoc IERC5267"},"functionSelector":"84b0196e","id":3561,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5237:12:15","nodeType":"FunctionDefinition","parameters":{"id":3521,"nodeType":"ParameterList","parameters":[],"src":"5249:2:15"},"returnParameters":{"id":3537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3523,"mutability":"mutable","name":"fields","nameLocation":"5333:6:15","nodeType":"VariableDeclaration","scope":3561,"src":"5326:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3522,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5326:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3525,"mutability":"mutable","name":"name","nameLocation":"5367:4:15","nodeType":"VariableDeclaration","scope":3561,"src":"5353:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3524,"name":"string","nodeType":"ElementaryTypeName","src":"5353:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3527,"mutability":"mutable","name":"version","nameLocation":"5399:7:15","nodeType":"VariableDeclaration","scope":3561,"src":"5385:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3526,"name":"string","nodeType":"ElementaryTypeName","src":"5385:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3529,"mutability":"mutable","name":"chainId","nameLocation":"5428:7:15","nodeType":"VariableDeclaration","scope":3561,"src":"5420:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3528,"name":"uint256","nodeType":"ElementaryTypeName","src":"5420:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3531,"mutability":"mutable","name":"verifyingContract","nameLocation":"5457:17:15","nodeType":"VariableDeclaration","scope":3561,"src":"5449:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3530,"name":"address","nodeType":"ElementaryTypeName","src":"5449:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3533,"mutability":"mutable","name":"salt","nameLocation":"5496:4:15","nodeType":"VariableDeclaration","scope":3561,"src":"5488:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5488:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3536,"mutability":"mutable","name":"extensions","nameLocation":"5531:10:15","nodeType":"VariableDeclaration","scope":3561,"src":"5514:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3534,"name":"uint256","nodeType":"ElementaryTypeName","src":"5514:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3535,"nodeType":"ArrayTypeName","src":"5514:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5312:239:15"},"scope":3586,"src":"5228:557:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3572,"nodeType":"Block","src":"6166:65:15","statements":[{"expression":{"arguments":[{"id":3569,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"6210:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3567,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"6183:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6189:20:15","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"6183:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1274_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6183:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3566,"id":3571,"nodeType":"Return","src":"6176:48:15"}]},"documentation":{"id":3562,"nodeType":"StructuredDocumentation","src":"5791:256:15","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3573,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6114:11:15","nodeType":"FunctionDefinition","parameters":{"id":3563,"nodeType":"ParameterList","parameters":[],"src":"6125:2:15"},"returnParameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3573,"src":"6151:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3564,"name":"string","nodeType":"ElementaryTypeName","src":"6151:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6150:15:15"},"scope":3586,"src":"6105:126:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3584,"nodeType":"Block","src":"6621:71:15","statements":[{"expression":{"arguments":[{"id":3581,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"6668:16:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3579,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"6638:8:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6647:20:15","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"6638:29:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1274_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6638:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3578,"id":3583,"nodeType":"Return","src":"6631:54:15"}]},"documentation":{"id":3574,"nodeType":"StructuredDocumentation","src":"6237:262:15","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3585,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6566:14:15","nodeType":"FunctionDefinition","parameters":{"id":3575,"nodeType":"ParameterList","parameters":[],"src":"6580:2:15"},"returnParameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3585,"src":"6606:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3576,"name":"string","nodeType":"ElementaryTypeName","src":"6606:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6605:15:15"},"scope":3586,"src":"6557:135:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3587,"src":"1960:4734:15","usedErrors":[1282,1284],"usedEvents":[152]}],"src":"113:6582:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","exportedSymbols":{"Hashes":[3626]},"id":3627,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3588,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Hashes","contractDependencies":[],"contractKind":"library","documentation":{"id":3589,"nodeType":"StructuredDocumentation","src":"139:81:16","text":" @dev Library of standard hash functions.\n _Available since v5.1._"},"fullyImplemented":true,"id":3626,"linearizedBaseContracts":[3626],"name":"Hashes","nameLocation":"229:6:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3612,"nodeType":"Block","src":"588:83:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3599,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"605:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3600,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"609:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"605:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3607,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"659:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3608,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"662:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3606,"name":"efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"640:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"640:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"605:59:16","trueExpression":{"arguments":[{"id":3603,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"632:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3604,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"635:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3602,"name":"efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"613:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"613:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3598,"id":3611,"nodeType":"Return","src":"598:66:16"}]},"documentation":{"id":3590,"nodeType":"StructuredDocumentation","src":"242:257:16","text":" @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]."},"id":3613,"implemented":true,"kind":"function","modifiers":[],"name":"commutativeKeccak256","nameLocation":"513:20:16","nodeType":"FunctionDefinition","parameters":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3592,"mutability":"mutable","name":"a","nameLocation":"542:1:16","nodeType":"VariableDeclaration","scope":3613,"src":"534:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"534:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3594,"mutability":"mutable","name":"b","nameLocation":"553:1:16","nodeType":"VariableDeclaration","scope":3613,"src":"545:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"545:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"533:22:16"},"returnParameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3613,"src":"579:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"579:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"578:9:16"},"scope":3626,"src":"504:167:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3624,"nodeType":"Block","src":"879:151:16","statements":[{"AST":{"nodeType":"YulBlock","src":"914:110:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"935:4:16","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"941:1:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"928:6:16"},"nodeType":"YulFunctionCall","src":"928:15:16"},"nodeType":"YulExpressionStatement","src":"928:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"963:4:16","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"969:1:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"956:6:16"},"nodeType":"YulFunctionCall","src":"956:15:16"},"nodeType":"YulExpressionStatement","src":"956:15:16"},{"nodeType":"YulAssignment","src":"984:30:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1003:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1009:4:16","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"993:9:16"},"nodeType":"YulFunctionCall","src":"993:21:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"984:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3616,"isOffset":false,"isSlot":false,"src":"941:1:16","valueSize":1},{"declaration":3618,"isOffset":false,"isSlot":false,"src":"969:1:16","valueSize":1},{"declaration":3621,"isOffset":false,"isSlot":false,"src":"984:5:16","valueSize":1}],"flags":["memory-safe"],"id":3623,"nodeType":"InlineAssembly","src":"889:135:16"}]},"documentation":{"id":3614,"nodeType":"StructuredDocumentation","src":"677:109:16","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":3625,"implemented":true,"kind":"function","modifiers":[],"name":"efficientKeccak256","nameLocation":"800:18:16","nodeType":"FunctionDefinition","parameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"a","nameLocation":"827:1:16","nodeType":"VariableDeclaration","scope":3625,"src":"819:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"819:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3618,"mutability":"mutable","name":"b","nameLocation":"838:1:16","nodeType":"VariableDeclaration","scope":3625,"src":"830:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"830:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"818:22:16"},"returnParameters":{"id":3622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"value","nameLocation":"872:5:16","nodeType":"VariableDeclaration","scope":3625,"src":"864:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"864:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"863:15:16"},"scope":3626,"src":"791:239:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3627,"src":"221:811:16","usedErrors":[],"usedEvents":[]}],"src":"113:920:16"},"id":16},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"Hashes":[3626],"MerkleProof":[4699]},"id":4700,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3628,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"206:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","file":"./Hashes.sol","id":3630,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4700,"sourceUnit":3627,"src":"232:36:17","symbolAliases":[{"foreign":{"id":3629,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"240:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":3631,"nodeType":"StructuredDocumentation","src":"270:1082:17","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box.\n IMPORTANT: Consider memory side-effects when using custom hashing functions\n that access memory in an unsafe way.\n NOTE: This library supports proof verification for merkle trees built using\n custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n leaf inclusion in trees built using non-commutative hashing functions requires\n additional logic that is not supported by this library."},"fullyImplemented":true,"id":4699,"linearizedBaseContracts":[4699],"name":"MerkleProof","nameLocation":"1361:11:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3632,"nodeType":"StructuredDocumentation","src":"1379:60:17","text":"@dev The multiproof provided is not valid."},"errorSelector":"35140492","id":3634,"name":"MerkleProofInvalidMultiproof","nameLocation":"1450:28:17","nodeType":"ErrorDefinition","parameters":{"id":3633,"nodeType":"ParameterList","parameters":[],"src":"1478:2:17"},"src":"1444:37:17"},{"body":{"id":3654,"nodeType":"Block","src":"1999:57:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3648,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"2029:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":3649,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"2036:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3647,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[3696,3778],"referencedDeclaration":3696,"src":"2016:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2016:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3651,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"2045:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2016:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3646,"id":3653,"nodeType":"Return","src":"2009:40:17"}]},"documentation":{"id":3635,"nodeType":"StructuredDocumentation","src":"1487:410:17","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":3655,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1911:6:17","nodeType":"FunctionDefinition","parameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"proof","nameLocation":"1935:5:17","nodeType":"VariableDeclaration","scope":3655,"src":"1918:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1918:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3637,"nodeType":"ArrayTypeName","src":"1918:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"root","nameLocation":"1950:4:17","nodeType":"VariableDeclaration","scope":3655,"src":"1942:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1942:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3642,"mutability":"mutable","name":"leaf","nameLocation":"1964:4:17","nodeType":"VariableDeclaration","scope":3655,"src":"1956:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3641,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1917:52:17"},"returnParameters":{"id":3646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3655,"src":"1993:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3644,"name":"bool","nodeType":"ElementaryTypeName","src":"1993:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1992:6:17"},"scope":4699,"src":"1902:154:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3695,"nodeType":"Block","src":"2549:216:17","statements":[{"assignments":[3667],"declarations":[{"constant":false,"id":3667,"mutability":"mutable","name":"computedHash","nameLocation":"2567:12:17","nodeType":"VariableDeclaration","scope":3695,"src":"2559:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2559:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3669,"initialValue":{"id":3668,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"2582:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2559:27:17"},{"body":{"id":3691,"nodeType":"Block","src":"2639:91:17","statements":[{"expression":{"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3681,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"2653:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3684,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"2696:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3685,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"2710:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3687,"indexExpression":{"id":3686,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"2716:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2710:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3682,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"2668:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$3626_$","typeString":"type(library Hashes)"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2675:20:17","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":3613,"src":"2668:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2653:66:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3690,"nodeType":"ExpressionStatement","src":"2653:66:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3674,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"2616:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3675,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"2620:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2626:6:17","memberName":"length","nodeType":"MemberAccess","src":"2620:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2616:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3692,"initializationExpression":{"assignments":[3671],"declarations":[{"constant":false,"id":3671,"mutability":"mutable","name":"i","nameLocation":"2609:1:17","nodeType":"VariableDeclaration","scope":3692,"src":"2601:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"2601:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3673,"initialValue":{"hexValue":"30","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2613:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2601:13:17"},"loopExpression":{"expression":{"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2634:3:17","subExpression":{"id":3678,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"2634:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3680,"nodeType":"ExpressionStatement","src":"2634:3:17"},"nodeType":"ForStatement","src":"2596:134:17"},{"expression":{"id":3693,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"2746:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3665,"id":3694,"nodeType":"Return","src":"2739:19:17"}]},"documentation":{"id":3656,"nodeType":"StructuredDocumentation","src":"2062:390:17","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":3696,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2466:12:17","nodeType":"FunctionDefinition","parameters":{"id":3662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3659,"mutability":"mutable","name":"proof","nameLocation":"2496:5:17","nodeType":"VariableDeclaration","scope":3696,"src":"2479:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2479:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3658,"nodeType":"ArrayTypeName","src":"2479:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3661,"mutability":"mutable","name":"leaf","nameLocation":"2511:4:17","nodeType":"VariableDeclaration","scope":3696,"src":"2503:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3660,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2503:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2478:38:17"},"returnParameters":{"id":3665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3696,"src":"2540:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2540:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2539:9:17"},"scope":4699,"src":"2457:308:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3727,"nodeType":"Block","src":"3376:65:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3720,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"3406:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":3721,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"3413:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3722,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"3419:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":3719,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[3696,3778],"referencedDeclaration":3778,"src":"3393:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3724,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"3430:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3393:41:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3718,"id":3726,"nodeType":"Return","src":"3386:48:17"}]},"documentation":{"id":3697,"nodeType":"StructuredDocumentation","src":"2771:407:17","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":3728,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"3192:6:17","nodeType":"FunctionDefinition","parameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"proof","nameLocation":"3225:5:17","nodeType":"VariableDeclaration","scope":3728,"src":"3208:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3208:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3699,"nodeType":"ArrayTypeName","src":"3208:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3702,"mutability":"mutable","name":"root","nameLocation":"3248:4:17","nodeType":"VariableDeclaration","scope":3728,"src":"3240:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3240:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3704,"mutability":"mutable","name":"leaf","nameLocation":"3270:4:17","nodeType":"VariableDeclaration","scope":3728,"src":"3262:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3262:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3714,"mutability":"mutable","name":"hasher","nameLocation":"3334:6:17","nodeType":"VariableDeclaration","scope":3728,"src":"3284:56:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3713,"nodeType":"FunctionTypeName","parameterTypes":{"id":3709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3713,"src":"3293:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3293:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3713,"src":"3302:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3302:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3292:18:17"},"returnParameterTypes":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3713,"src":"3325:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3325:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3324:9:17"},"src":"3284:56:17","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3198:148:17"},"returnParameters":{"id":3718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3728,"src":"3370:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3716,"name":"bool","nodeType":"ElementaryTypeName","src":"3370:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3369:6:17"},"scope":4699,"src":"3183:258:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3777,"nodeType":"Block","src":"4019:195:17","statements":[{"assignments":[3750],"declarations":[{"constant":false,"id":3750,"mutability":"mutable","name":"computedHash","nameLocation":"4037:12:17","nodeType":"VariableDeclaration","scope":3777,"src":"4029:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4029:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3752,"initialValue":{"id":3751,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"4052:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4029:27:17"},{"body":{"id":3773,"nodeType":"Block","src":"4109:70:17","statements":[{"expression":{"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3764,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"4123:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3766,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"4145:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3767,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"4159:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3769,"indexExpression":{"id":3768,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"4165:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4159:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3765,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"4138:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4123:45:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3772,"nodeType":"ExpressionStatement","src":"4123:45:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3757,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"4086:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3758,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"4090:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:6:17","memberName":"length","nodeType":"MemberAccess","src":"4090:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4086:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3774,"initializationExpression":{"assignments":[3754],"declarations":[{"constant":false,"id":3754,"mutability":"mutable","name":"i","nameLocation":"4079:1:17","nodeType":"VariableDeclaration","scope":3774,"src":"4071:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"4071:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3756,"initialValue":{"hexValue":"30","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4083:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4071:13:17"},"loopExpression":{"expression":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4104:3:17","subExpression":{"id":3761,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"4104:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3763,"nodeType":"ExpressionStatement","src":"4104:3:17"},"nodeType":"ForStatement","src":"4066:113:17"},{"expression":{"id":3775,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"4195:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3748,"id":3776,"nodeType":"Return","src":"4188:19:17"}]},"documentation":{"id":3729,"nodeType":"StructuredDocumentation","src":"3447:387:17","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":3778,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"3848:12:17","nodeType":"FunctionDefinition","parameters":{"id":3745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3732,"mutability":"mutable","name":"proof","nameLocation":"3887:5:17","nodeType":"VariableDeclaration","scope":3778,"src":"3870:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3870:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3731,"nodeType":"ArrayTypeName","src":"3870:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3734,"mutability":"mutable","name":"leaf","nameLocation":"3910:4:17","nodeType":"VariableDeclaration","scope":3778,"src":"3902:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3902:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3744,"mutability":"mutable","name":"hasher","nameLocation":"3974:6:17","nodeType":"VariableDeclaration","scope":3778,"src":"3924:56:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3743,"nodeType":"FunctionTypeName","parameterTypes":{"id":3739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3743,"src":"3933:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3933:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3743,"src":"3942:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3942:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3932:18:17"},"returnParameterTypes":{"id":3742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3743,"src":"3965:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3965:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3964:9:17"},"src":"3924:56:17","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3860:126:17"},"returnParameters":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3778,"src":"4010:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4010:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4009:9:17"},"scope":4699,"src":"3839:375:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3798,"nodeType":"Block","src":"4744:65:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3792,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"4782:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":3793,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"4789:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3791,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[3840,3922],"referencedDeclaration":3840,"src":"4761:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4761:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3795,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"4798:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4761:41:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3790,"id":3797,"nodeType":"Return","src":"4754:48:17"}]},"documentation":{"id":3779,"nodeType":"StructuredDocumentation","src":"4220:412:17","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":3799,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"4646:14:17","nodeType":"FunctionDefinition","parameters":{"id":3787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3782,"mutability":"mutable","name":"proof","nameLocation":"4680:5:17","nodeType":"VariableDeclaration","scope":3799,"src":"4661:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4661:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3781,"nodeType":"ArrayTypeName","src":"4661:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3784,"mutability":"mutable","name":"root","nameLocation":"4695:4:17","nodeType":"VariableDeclaration","scope":3799,"src":"4687:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4687:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3786,"mutability":"mutable","name":"leaf","nameLocation":"4709:4:17","nodeType":"VariableDeclaration","scope":3799,"src":"4701:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4701:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4660:54:17"},"returnParameters":{"id":3790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3799,"src":"4738:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3788,"name":"bool","nodeType":"ElementaryTypeName","src":"4738:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4737:6:17"},"scope":4699,"src":"4637:172:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3839,"nodeType":"Block","src":"5314:216:17","statements":[{"assignments":[3811],"declarations":[{"constant":false,"id":3811,"mutability":"mutable","name":"computedHash","nameLocation":"5332:12:17","nodeType":"VariableDeclaration","scope":3839,"src":"5324:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5324:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3813,"initialValue":{"id":3812,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"5347:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5324:27:17"},{"body":{"id":3835,"nodeType":"Block","src":"5404:91:17","statements":[{"expression":{"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3825,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"5418:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3828,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"5461:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3829,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"5475:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3831,"indexExpression":{"id":3830,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"5481:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5475:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3826,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"5433:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$3626_$","typeString":"type(library Hashes)"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5440:20:17","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":3613,"src":"5433:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5433:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5418:66:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3834,"nodeType":"ExpressionStatement","src":"5418:66:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3818,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"5381:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3819,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"5385:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5391:6:17","memberName":"length","nodeType":"MemberAccess","src":"5385:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5381:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3836,"initializationExpression":{"assignments":[3815],"declarations":[{"constant":false,"id":3815,"mutability":"mutable","name":"i","nameLocation":"5374:1:17","nodeType":"VariableDeclaration","scope":3836,"src":"5366:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3814,"name":"uint256","nodeType":"ElementaryTypeName","src":"5366:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3817,"initialValue":{"hexValue":"30","id":3816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5378:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5366:13:17"},"loopExpression":{"expression":{"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5399:3:17","subExpression":{"id":3822,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"5399:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3824,"nodeType":"ExpressionStatement","src":"5399:3:17"},"nodeType":"ForStatement","src":"5361:134:17"},{"expression":{"id":3837,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"5511:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3809,"id":3838,"nodeType":"Return","src":"5504:19:17"}]},"documentation":{"id":3800,"nodeType":"StructuredDocumentation","src":"4815:392:17","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":3840,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"5221:20:17","nodeType":"FunctionDefinition","parameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3803,"mutability":"mutable","name":"proof","nameLocation":"5261:5:17","nodeType":"VariableDeclaration","scope":3840,"src":"5242:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5242:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3802,"nodeType":"ArrayTypeName","src":"5242:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3805,"mutability":"mutable","name":"leaf","nameLocation":"5276:4:17","nodeType":"VariableDeclaration","scope":3840,"src":"5268:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5268:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5241:40:17"},"returnParameters":{"id":3809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3840,"src":"5305:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5305:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5304:9:17"},"scope":4699,"src":"5212:318:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3871,"nodeType":"Block","src":"6153:73:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3864,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"6191:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":3865,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"6198:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3866,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"6204:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":3863,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[3840,3922],"referencedDeclaration":3922,"src":"6170:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6170:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3868,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"6215:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6170:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3862,"id":3870,"nodeType":"Return","src":"6163:56:17"}]},"documentation":{"id":3841,"nodeType":"StructuredDocumentation","src":"5536:409:17","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":3872,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"5959:14:17","nodeType":"FunctionDefinition","parameters":{"id":3859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3844,"mutability":"mutable","name":"proof","nameLocation":"6002:5:17","nodeType":"VariableDeclaration","scope":3872,"src":"5983:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5983:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3843,"nodeType":"ArrayTypeName","src":"5983:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3846,"mutability":"mutable","name":"root","nameLocation":"6025:4:17","nodeType":"VariableDeclaration","scope":3872,"src":"6017:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6017:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3848,"mutability":"mutable","name":"leaf","nameLocation":"6047:4:17","nodeType":"VariableDeclaration","scope":3872,"src":"6039:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6039:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3858,"mutability":"mutable","name":"hasher","nameLocation":"6111:6:17","nodeType":"VariableDeclaration","scope":3872,"src":"6061:56:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3857,"nodeType":"FunctionTypeName","parameterTypes":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3857,"src":"6070:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6070:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3857,"src":"6079:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6079:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6069:18:17"},"returnParameterTypes":{"id":3856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3857,"src":"6102:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3854,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6102:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6101:9:17"},"src":"6061:56:17","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"5973:150:17"},"returnParameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3872,"src":"6147:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3860,"name":"bool","nodeType":"ElementaryTypeName","src":"6147:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6146:6:17"},"scope":4699,"src":"5950:276:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3921,"nodeType":"Block","src":"6816:195:17","statements":[{"assignments":[3894],"declarations":[{"constant":false,"id":3894,"mutability":"mutable","name":"computedHash","nameLocation":"6834:12:17","nodeType":"VariableDeclaration","scope":3921,"src":"6826:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6826:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3896,"initialValue":{"id":3895,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"6849:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6826:27:17"},{"body":{"id":3917,"nodeType":"Block","src":"6906:70:17","statements":[{"expression":{"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3908,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"6920:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3910,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"6942:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3911,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"6956:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3913,"indexExpression":{"id":3912,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"6962:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6956:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3909,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"6935:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6935:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6920:45:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3916,"nodeType":"ExpressionStatement","src":"6920:45:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3901,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"6883:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3902,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"6887:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6893:6:17","memberName":"length","nodeType":"MemberAccess","src":"6887:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6883:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3918,"initializationExpression":{"assignments":[3898],"declarations":[{"constant":false,"id":3898,"mutability":"mutable","name":"i","nameLocation":"6876:1:17","nodeType":"VariableDeclaration","scope":3918,"src":"6868:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3897,"name":"uint256","nodeType":"ElementaryTypeName","src":"6868:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3900,"initialValue":{"hexValue":"30","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6868:13:17"},"loopExpression":{"expression":{"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6901:3:17","subExpression":{"id":3905,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"6901:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3907,"nodeType":"ExpressionStatement","src":"6901:3:17"},"nodeType":"ForStatement","src":"6863:113:17"},{"expression":{"id":3919,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"6992:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3892,"id":3920,"nodeType":"Return","src":"6985:19:17"}]},"documentation":{"id":3873,"nodeType":"StructuredDocumentation","src":"6232:389:17","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":3922,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"6635:20:17","nodeType":"FunctionDefinition","parameters":{"id":3889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"proof","nameLocation":"6684:5:17","nodeType":"VariableDeclaration","scope":3922,"src":"6665:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6665:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3875,"nodeType":"ArrayTypeName","src":"6665:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3878,"mutability":"mutable","name":"leaf","nameLocation":"6707:4:17","nodeType":"VariableDeclaration","scope":3922,"src":"6699:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6699:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"hasher","nameLocation":"6771:6:17","nodeType":"VariableDeclaration","scope":3922,"src":"6721:56:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3887,"nodeType":"FunctionTypeName","parameterTypes":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3887,"src":"6730:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6730:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3887,"src":"6739:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6739:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6729:18:17"},"returnParameterTypes":{"id":3886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3887,"src":"6762:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6762:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6761:9:17"},"src":"6721:56:17","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"6655:128:17"},"returnParameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3922,"src":"6807:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6807:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6806:9:17"},"scope":4699,"src":"6626:385:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3947,"nodeType":"Block","src":"7797:76:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3940,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"7832:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":3941,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"7839:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":3942,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"7851:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3939,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[4106,4310],"referencedDeclaration":4106,"src":"7814:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7814:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3944,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"7862:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7814:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3938,"id":3946,"nodeType":"Return","src":"7807:59:17"}]},"documentation":{"id":3923,"nodeType":"StructuredDocumentation","src":"7017:593:17","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":3948,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"7624:16:17","nodeType":"FunctionDefinition","parameters":{"id":3935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3926,"mutability":"mutable","name":"proof","nameLocation":"7667:5:17","nodeType":"VariableDeclaration","scope":3948,"src":"7650:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7650:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3925,"nodeType":"ArrayTypeName","src":"7650:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3929,"mutability":"mutable","name":"proofFlags","nameLocation":"7696:10:17","nodeType":"VariableDeclaration","scope":3948,"src":"7682:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3927,"name":"bool","nodeType":"ElementaryTypeName","src":"7682:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3928,"nodeType":"ArrayTypeName","src":"7682:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3931,"mutability":"mutable","name":"root","nameLocation":"7724:4:17","nodeType":"VariableDeclaration","scope":3948,"src":"7716:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7716:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3934,"mutability":"mutable","name":"leaves","nameLocation":"7755:6:17","nodeType":"VariableDeclaration","scope":3948,"src":"7738:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7738:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3933,"nodeType":"ArrayTypeName","src":"7738:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7640:127:17"},"returnParameters":{"id":3938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3948,"src":"7791:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3936,"name":"bool","nodeType":"ElementaryTypeName","src":"7791:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7790:6:17"},"scope":4699,"src":"7615:258:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4105,"nodeType":"Block","src":"9159:2104:17","statements":[{"assignments":[3964],"declarations":[{"constant":false,"id":3964,"mutability":"mutable","name":"leavesLen","nameLocation":"9551:9:17","nodeType":"VariableDeclaration","scope":4105,"src":"9543:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3963,"name":"uint256","nodeType":"ElementaryTypeName","src":"9543:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3967,"initialValue":{"expression":{"id":3965,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"9563:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9570:6:17","memberName":"length","nodeType":"MemberAccess","src":"9563:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9543:33:17"},{"assignments":[3969],"declarations":[{"constant":false,"id":3969,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"9594:13:17","nodeType":"VariableDeclaration","scope":4105,"src":"9586:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"9586:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3972,"initialValue":{"expression":{"id":3970,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"9610:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9621:6:17","memberName":"length","nodeType":"MemberAccess","src":"9610:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9586:41:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3973,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"9675:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3974,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"9687:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9693:6:17","memberName":"length","nodeType":"MemberAccess","src":"9687:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3977,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"9703:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9703:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:45:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3985,"nodeType":"IfStatement","src":"9671:113:17","trueBody":{"id":3984,"nodeType":"Block","src":"9722:62:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3981,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"9743:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9743:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3983,"nodeType":"RevertStatement","src":"9736:37:17"}]}},{"assignments":[3990],"declarations":[{"constant":false,"id":3990,"mutability":"mutable","name":"hashes","nameLocation":"10045:6:17","nodeType":"VariableDeclaration","scope":4105,"src":"10028:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10028:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3989,"nodeType":"ArrayTypeName","src":"10028:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3996,"initialValue":{"arguments":[{"id":3994,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"10068:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10054:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":3991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10058:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3992,"nodeType":"ArrayTypeName","src":"10058:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10054:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10028:54:17"},{"assignments":[3998],"declarations":[{"constant":false,"id":3998,"mutability":"mutable","name":"leafPos","nameLocation":"10100:7:17","nodeType":"VariableDeclaration","scope":4105,"src":"10092:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3997,"name":"uint256","nodeType":"ElementaryTypeName","src":"10092:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4000,"initialValue":{"hexValue":"30","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10110:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10092:19:17"},{"assignments":[4002],"declarations":[{"constant":false,"id":4002,"mutability":"mutable","name":"hashPos","nameLocation":"10129:7:17","nodeType":"VariableDeclaration","scope":4105,"src":"10121:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"10121:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4004,"initialValue":{"hexValue":"30","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10139:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10121:19:17"},{"assignments":[4006],"declarations":[{"constant":false,"id":4006,"mutability":"mutable","name":"proofPos","nameLocation":"10158:8:17","nodeType":"VariableDeclaration","scope":4105,"src":"10150:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"10150:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4008,"initialValue":{"hexValue":"30","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10169:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10150:20:17"},{"body":{"id":4068,"nodeType":"Block","src":"10590:310:17","statements":[{"assignments":[4020],"declarations":[{"constant":false,"id":4020,"mutability":"mutable","name":"a","nameLocation":"10612:1:17","nodeType":"VariableDeclaration","scope":4068,"src":"10604:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10604:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4033,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4021,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"10616:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4022,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"10626:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10616:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4028,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"10658:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4031,"indexExpression":{"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10665:9:17","subExpression":{"id":4029,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"10665:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10658:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10616:59:17","trueExpression":{"baseExpression":{"id":4024,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"10638:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4027,"indexExpression":{"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10645:9:17","subExpression":{"id":4025,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"10645:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10638:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10604:71:17"},{"assignments":[4035],"declarations":[{"constant":false,"id":4035,"mutability":"mutable","name":"b","nameLocation":"10697:1:17","nodeType":"VariableDeclaration","scope":4068,"src":"10689:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10689:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4057,"initialValue":{"condition":{"baseExpression":{"id":4036,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"10701:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4038,"indexExpression":{"id":4037,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"10712:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10701:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4052,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"10813:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4055,"indexExpression":{"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10819:10:17","subExpression":{"id":4053,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"10819:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10813:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10701:129:17","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4039,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"10734:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4040,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"10744:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10734:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4046,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"10776:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4049,"indexExpression":{"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10783:9:17","subExpression":{"id":4047,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"10783:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10776:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10734:59:17","trueExpression":{"baseExpression":{"id":4042,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"10756:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4045,"indexExpression":{"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10763:9:17","subExpression":{"id":4043,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"10763:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10756:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10733:61:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10689:141:17"},{"expression":{"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4058,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"10844:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4060,"indexExpression":{"id":4059,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"10851:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10844:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4063,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"10884:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4064,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"10887:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4061,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"10856:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$3626_$","typeString":"type(library Hashes)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10863:20:17","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":3613,"src":"10856:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10844:45:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4067,"nodeType":"ExpressionStatement","src":"10844:45:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"10566:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4014,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"10570:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10566:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4069,"initializationExpression":{"assignments":[4010],"declarations":[{"constant":false,"id":4010,"mutability":"mutable","name":"i","nameLocation":"10559:1:17","nodeType":"VariableDeclaration","scope":4069,"src":"10551:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4009,"name":"uint256","nodeType":"ElementaryTypeName","src":"10551:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4012,"initialValue":{"hexValue":"30","id":4011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10563:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10551:13:17"},"loopExpression":{"expression":{"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10585:3:17","subExpression":{"id":4016,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"10585:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4018,"nodeType":"ExpressionStatement","src":"10585:3:17"},"nodeType":"ForStatement","src":"10546:354:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4070,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"10914:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10930:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10914:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4090,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"11155:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11167:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11155:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4102,"nodeType":"Block","src":"11217:40:17","statements":[{"expression":{"baseExpression":{"id":4098,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"11238:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4100,"indexExpression":{"hexValue":"30","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11244:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11238:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3962,"id":4101,"nodeType":"Return","src":"11231:15:17"}]},"id":4103,"nodeType":"IfStatement","src":"11151:106:17","trueBody":{"id":4097,"nodeType":"Block","src":"11170:41:17","statements":[{"expression":{"baseExpression":{"id":4093,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"11191:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4095,"indexExpression":{"hexValue":"30","id":4094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11198:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11191:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3962,"id":4096,"nodeType":"Return","src":"11184:16:17"}]}},"id":4104,"nodeType":"IfStatement","src":"10910:347:17","trueBody":{"id":4089,"nodeType":"Block","src":"10933:212:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4073,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"10951:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4074,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"10963:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10969:6:17","memberName":"length","nodeType":"MemberAccess","src":"10963:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10951:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4081,"nodeType":"IfStatement","src":"10947:100:17","trueBody":{"id":4080,"nodeType":"Block","src":"10977:70:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4077,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"11002:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11002:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4079,"nodeType":"RevertStatement","src":"10995:37:17"}]}},{"id":4088,"nodeType":"UncheckedBlock","src":"11060:75:17","statements":[{"expression":{"baseExpression":{"id":4082,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"11095:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4086,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4083,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"11102:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11118:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11102:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11095:25:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3962,"id":4087,"nodeType":"Return","src":"11088:32:17"}]}]}}]},"documentation":{"id":3949,"nodeType":"StructuredDocumentation","src":"7879:1100:17","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4106,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"8993:17:17","nodeType":"FunctionDefinition","parameters":{"id":3959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3952,"mutability":"mutable","name":"proof","nameLocation":"9037:5:17","nodeType":"VariableDeclaration","scope":4106,"src":"9020:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9020:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3951,"nodeType":"ArrayTypeName","src":"9020:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3955,"mutability":"mutable","name":"proofFlags","nameLocation":"9066:10:17","nodeType":"VariableDeclaration","scope":4106,"src":"9052:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3953,"name":"bool","nodeType":"ElementaryTypeName","src":"9052:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3954,"nodeType":"ArrayTypeName","src":"9052:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3958,"mutability":"mutable","name":"leaves","nameLocation":"9103:6:17","nodeType":"VariableDeclaration","scope":4106,"src":"9086:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9086:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3957,"nodeType":"ArrayTypeName","src":"9086:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9010:105:17"},"returnParameters":{"id":3962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3961,"mutability":"mutable","name":"merkleRoot","nameLocation":"9147:10:17","nodeType":"VariableDeclaration","scope":4106,"src":"9139:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9139:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9138:20:17"},"scope":4699,"src":"8984:2279:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4142,"nodeType":"Block","src":"12112:84:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4134,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"12147:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4135,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"12154:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":4136,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"12166:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4137,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"12174:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":4133,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[4106,4310],"referencedDeclaration":4310,"src":"12129:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12129:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4139,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"12185:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12129:60:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4132,"id":4141,"nodeType":"Return","src":"12122:67:17"}]},"documentation":{"id":4107,"nodeType":"StructuredDocumentation","src":"11269:590:17","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":4143,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"11873:16:17","nodeType":"FunctionDefinition","parameters":{"id":4129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"proof","nameLocation":"11916:5:17","nodeType":"VariableDeclaration","scope":4143,"src":"11899:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11899:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4109,"nodeType":"ArrayTypeName","src":"11899:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4113,"mutability":"mutable","name":"proofFlags","nameLocation":"11945:10:17","nodeType":"VariableDeclaration","scope":4143,"src":"11931:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4111,"name":"bool","nodeType":"ElementaryTypeName","src":"11931:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4112,"nodeType":"ArrayTypeName","src":"11931:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4115,"mutability":"mutable","name":"root","nameLocation":"11973:4:17","nodeType":"VariableDeclaration","scope":4143,"src":"11965:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11965:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4118,"mutability":"mutable","name":"leaves","nameLocation":"12004:6:17","nodeType":"VariableDeclaration","scope":4143,"src":"11987:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11987:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4117,"nodeType":"ArrayTypeName","src":"11987:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4128,"mutability":"mutable","name":"hasher","nameLocation":"12070:6:17","nodeType":"VariableDeclaration","scope":4143,"src":"12020:56:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4127,"nodeType":"FunctionTypeName","parameterTypes":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4127,"src":"12029:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12029:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4127,"src":"12038:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12038:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12028:18:17"},"returnParameterTypes":{"id":4126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4127,"src":"12061:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12061:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12060:9:17"},"src":"12020:56:17","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"11889:193:17"},"returnParameters":{"id":4132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4143,"src":"12106:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4130,"name":"bool","nodeType":"ElementaryTypeName","src":"12106:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12105:6:17"},"scope":4699,"src":"11864:332:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4309,"nodeType":"Block","src":"13545:2083:17","statements":[{"assignments":[4169],"declarations":[{"constant":false,"id":4169,"mutability":"mutable","name":"leavesLen","nameLocation":"13937:9:17","nodeType":"VariableDeclaration","scope":4309,"src":"13929:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4168,"name":"uint256","nodeType":"ElementaryTypeName","src":"13929:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4172,"initialValue":{"expression":{"id":4170,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"13949:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13956:6:17","memberName":"length","nodeType":"MemberAccess","src":"13949:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13929:33:17"},{"assignments":[4174],"declarations":[{"constant":false,"id":4174,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"13980:13:17","nodeType":"VariableDeclaration","scope":4309,"src":"13972:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"13972:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4177,"initialValue":{"expression":{"id":4175,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"13996:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14007:6:17","memberName":"length","nodeType":"MemberAccess","src":"13996:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13972:41:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4178,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"14061:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4179,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"14073:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14079:6:17","memberName":"length","nodeType":"MemberAccess","src":"14073:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4182,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"14089:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14105:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14089:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:45:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4190,"nodeType":"IfStatement","src":"14057:113:17","trueBody":{"id":4189,"nodeType":"Block","src":"14108:62:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4186,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"14129:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4188,"nodeType":"RevertStatement","src":"14122:37:17"}]}},{"assignments":[4195],"declarations":[{"constant":false,"id":4195,"mutability":"mutable","name":"hashes","nameLocation":"14431:6:17","nodeType":"VariableDeclaration","scope":4309,"src":"14414:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14414:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4194,"nodeType":"ArrayTypeName","src":"14414:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4201,"initialValue":{"arguments":[{"id":4199,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"14454:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14440:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14444:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4197,"nodeType":"ArrayTypeName","src":"14444:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14440:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14414:54:17"},{"assignments":[4203],"declarations":[{"constant":false,"id":4203,"mutability":"mutable","name":"leafPos","nameLocation":"14486:7:17","nodeType":"VariableDeclaration","scope":4309,"src":"14478:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4202,"name":"uint256","nodeType":"ElementaryTypeName","src":"14478:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4205,"initialValue":{"hexValue":"30","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14496:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14478:19:17"},{"assignments":[4207],"declarations":[{"constant":false,"id":4207,"mutability":"mutable","name":"hashPos","nameLocation":"14515:7:17","nodeType":"VariableDeclaration","scope":4309,"src":"14507:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4206,"name":"uint256","nodeType":"ElementaryTypeName","src":"14507:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4209,"initialValue":{"hexValue":"30","id":4208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14525:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14507:19:17"},{"assignments":[4211],"declarations":[{"constant":false,"id":4211,"mutability":"mutable","name":"proofPos","nameLocation":"14544:8:17","nodeType":"VariableDeclaration","scope":4309,"src":"14536:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4213,"initialValue":{"hexValue":"30","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14555:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14536:20:17"},{"body":{"id":4272,"nodeType":"Block","src":"14976:289:17","statements":[{"assignments":[4225],"declarations":[{"constant":false,"id":4225,"mutability":"mutable","name":"a","nameLocation":"14998:1:17","nodeType":"VariableDeclaration","scope":4272,"src":"14990:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14990:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4238,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4226,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"15002:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4227,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"15012:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15002:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4233,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"15044:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4236,"indexExpression":{"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15051:9:17","subExpression":{"id":4234,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"15051:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15044:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15002:59:17","trueExpression":{"baseExpression":{"id":4229,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"15024:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4232,"indexExpression":{"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15031:9:17","subExpression":{"id":4230,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"15031:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15024:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14990:71:17"},{"assignments":[4240],"declarations":[{"constant":false,"id":4240,"mutability":"mutable","name":"b","nameLocation":"15083:1:17","nodeType":"VariableDeclaration","scope":4272,"src":"15075:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15075:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4262,"initialValue":{"condition":{"baseExpression":{"id":4241,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"15087:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4243,"indexExpression":{"id":4242,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"15098:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15087:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4257,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"15199:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4260,"indexExpression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15205:10:17","subExpression":{"id":4258,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"15205:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15199:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15087:129:17","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4244,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"15120:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4245,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"15130:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15120:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4251,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"15162:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4254,"indexExpression":{"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15169:9:17","subExpression":{"id":4252,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"15169:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15162:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15120:59:17","trueExpression":{"baseExpression":{"id":4247,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"15142:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4250,"indexExpression":{"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15149:9:17","subExpression":{"id":4248,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"15149:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15142:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15119:61:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15075:141:17"},{"expression":{"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4263,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"15230:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4265,"indexExpression":{"id":4264,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"15237:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15230:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4267,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"15249:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4268,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"15252:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4266,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"15242:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15242:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15230:24:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4271,"nodeType":"ExpressionStatement","src":"15230:24:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4218,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"14952:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4219,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"14956:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14952:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4273,"initializationExpression":{"assignments":[4215],"declarations":[{"constant":false,"id":4215,"mutability":"mutable","name":"i","nameLocation":"14945:1:17","nodeType":"VariableDeclaration","scope":4273,"src":"14937:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"14937:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4217,"initialValue":{"hexValue":"30","id":4216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14949:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14937:13:17"},"loopExpression":{"expression":{"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14971:3:17","subExpression":{"id":4221,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"14971:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4223,"nodeType":"ExpressionStatement","src":"14971:3:17"},"nodeType":"ForStatement","src":"14932:333:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4274,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"15279:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15295:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15279:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4294,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"15520:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15520:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4306,"nodeType":"Block","src":"15582:40:17","statements":[{"expression":{"baseExpression":{"id":4302,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"15603:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4304,"indexExpression":{"hexValue":"30","id":4303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15603:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4167,"id":4305,"nodeType":"Return","src":"15596:15:17"}]},"id":4307,"nodeType":"IfStatement","src":"15516:106:17","trueBody":{"id":4301,"nodeType":"Block","src":"15535:41:17","statements":[{"expression":{"baseExpression":{"id":4297,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"15556:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4299,"indexExpression":{"hexValue":"30","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15563:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15556:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4167,"id":4300,"nodeType":"Return","src":"15549:16:17"}]}},"id":4308,"nodeType":"IfStatement","src":"15275:347:17","trueBody":{"id":4293,"nodeType":"Block","src":"15298:212:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4277,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"15316:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4278,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"15328:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15334:6:17","memberName":"length","nodeType":"MemberAccess","src":"15328:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15316:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4285,"nodeType":"IfStatement","src":"15312:100:17","trueBody":{"id":4284,"nodeType":"Block","src":"15342:70:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4281,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"15367:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15367:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4283,"nodeType":"RevertStatement","src":"15360:37:17"}]}},{"id":4292,"nodeType":"UncheckedBlock","src":"15425:75:17","statements":[{"expression":{"baseExpression":{"id":4286,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"15460:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4290,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4287,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"15467:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15483:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15467:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15460:25:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4167,"id":4291,"nodeType":"Return","src":"15453:32:17"}]}]}}]},"documentation":{"id":4144,"nodeType":"StructuredDocumentation","src":"12202:1097:17","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4310,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"13313:17:17","nodeType":"FunctionDefinition","parameters":{"id":4164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4147,"mutability":"mutable","name":"proof","nameLocation":"13357:5:17","nodeType":"VariableDeclaration","scope":4310,"src":"13340:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13340:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4146,"nodeType":"ArrayTypeName","src":"13340:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4150,"mutability":"mutable","name":"proofFlags","nameLocation":"13386:10:17","nodeType":"VariableDeclaration","scope":4310,"src":"13372:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4148,"name":"bool","nodeType":"ElementaryTypeName","src":"13372:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4149,"nodeType":"ArrayTypeName","src":"13372:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4153,"mutability":"mutable","name":"leaves","nameLocation":"13423:6:17","nodeType":"VariableDeclaration","scope":4310,"src":"13406:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13406:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4152,"nodeType":"ArrayTypeName","src":"13406:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4163,"mutability":"mutable","name":"hasher","nameLocation":"13489:6:17","nodeType":"VariableDeclaration","scope":4310,"src":"13439:56:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4162,"nodeType":"FunctionTypeName","parameterTypes":{"id":4158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4162,"src":"13448:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13448:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4162,"src":"13457:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13457:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13447:18:17"},"returnParameterTypes":{"id":4161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4162,"src":"13480:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13480:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13479:9:17"},"src":"13439:56:17","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"13330:171:17"},"returnParameters":{"id":4167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"merkleRoot","nameLocation":"13533:10:17","nodeType":"VariableDeclaration","scope":4310,"src":"13525:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13525:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13524:20:17"},"scope":4699,"src":"13304:2324:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4335,"nodeType":"Block","src":"16436:84:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4328,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"16479:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":4329,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"16486:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":4330,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"16498:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":4327,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[4494,4698],"referencedDeclaration":4494,"src":"16453:25:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16453:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4332,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"16509:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16453:60:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4326,"id":4334,"nodeType":"Return","src":"16446:67:17"}]},"documentation":{"id":4311,"nodeType":"StructuredDocumentation","src":"15634:603:17","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":4336,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"16251:24:17","nodeType":"FunctionDefinition","parameters":{"id":4323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"proof","nameLocation":"16304:5:17","nodeType":"VariableDeclaration","scope":4336,"src":"16285:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16285:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4313,"nodeType":"ArrayTypeName","src":"16285:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4317,"mutability":"mutable","name":"proofFlags","nameLocation":"16335:10:17","nodeType":"VariableDeclaration","scope":4336,"src":"16319:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4315,"name":"bool","nodeType":"ElementaryTypeName","src":"16319:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4316,"nodeType":"ArrayTypeName","src":"16319:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4319,"mutability":"mutable","name":"root","nameLocation":"16363:4:17","nodeType":"VariableDeclaration","scope":4336,"src":"16355:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16355:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4322,"mutability":"mutable","name":"leaves","nameLocation":"16394:6:17","nodeType":"VariableDeclaration","scope":4336,"src":"16377:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16377:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4321,"nodeType":"ArrayTypeName","src":"16377:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"16275:131:17"},"returnParameters":{"id":4326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4336,"src":"16430:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4324,"name":"bool","nodeType":"ElementaryTypeName","src":"16430:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16429:6:17"},"scope":4699,"src":"16242:278:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4493,"nodeType":"Block","src":"17820:2104:17","statements":[{"assignments":[4352],"declarations":[{"constant":false,"id":4352,"mutability":"mutable","name":"leavesLen","nameLocation":"18212:9:17","nodeType":"VariableDeclaration","scope":4493,"src":"18204:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4351,"name":"uint256","nodeType":"ElementaryTypeName","src":"18204:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4355,"initialValue":{"expression":{"id":4353,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"18224:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18231:6:17","memberName":"length","nodeType":"MemberAccess","src":"18224:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18204:33:17"},{"assignments":[4357],"declarations":[{"constant":false,"id":4357,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"18255:13:17","nodeType":"VariableDeclaration","scope":4493,"src":"18247:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4356,"name":"uint256","nodeType":"ElementaryTypeName","src":"18247:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4360,"initialValue":{"expression":{"id":4358,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"18271:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18282:6:17","memberName":"length","nodeType":"MemberAccess","src":"18271:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18247:41:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4361,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"18336:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4362,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"18348:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18354:6:17","memberName":"length","nodeType":"MemberAccess","src":"18348:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4365,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"18364:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18380:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18364:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:45:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4373,"nodeType":"IfStatement","src":"18332:113:17","trueBody":{"id":4372,"nodeType":"Block","src":"18383:62:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4369,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"18404:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18404:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4371,"nodeType":"RevertStatement","src":"18397:37:17"}]}},{"assignments":[4378],"declarations":[{"constant":false,"id":4378,"mutability":"mutable","name":"hashes","nameLocation":"18706:6:17","nodeType":"VariableDeclaration","scope":4493,"src":"18689:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18689:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4377,"nodeType":"ArrayTypeName","src":"18689:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4384,"initialValue":{"arguments":[{"id":4382,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"18729:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18715:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18719:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4380,"nodeType":"ArrayTypeName","src":"18719:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18715:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18689:54:17"},{"assignments":[4386],"declarations":[{"constant":false,"id":4386,"mutability":"mutable","name":"leafPos","nameLocation":"18761:7:17","nodeType":"VariableDeclaration","scope":4493,"src":"18753:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"18753:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4388,"initialValue":{"hexValue":"30","id":4387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18771:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18753:19:17"},{"assignments":[4390],"declarations":[{"constant":false,"id":4390,"mutability":"mutable","name":"hashPos","nameLocation":"18790:7:17","nodeType":"VariableDeclaration","scope":4493,"src":"18782:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4389,"name":"uint256","nodeType":"ElementaryTypeName","src":"18782:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4392,"initialValue":{"hexValue":"30","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18800:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18782:19:17"},{"assignments":[4394],"declarations":[{"constant":false,"id":4394,"mutability":"mutable","name":"proofPos","nameLocation":"18819:8:17","nodeType":"VariableDeclaration","scope":4493,"src":"18811:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"18811:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4396,"initialValue":{"hexValue":"30","id":4395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18830:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18811:20:17"},{"body":{"id":4456,"nodeType":"Block","src":"19251:310:17","statements":[{"assignments":[4408],"declarations":[{"constant":false,"id":4408,"mutability":"mutable","name":"a","nameLocation":"19273:1:17","nodeType":"VariableDeclaration","scope":4456,"src":"19265:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19265:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4421,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4409,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"19277:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4410,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"19287:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19277:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4416,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"19319:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4419,"indexExpression":{"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19326:9:17","subExpression":{"id":4417,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"19326:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19319:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19277:59:17","trueExpression":{"baseExpression":{"id":4412,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"19299:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4415,"indexExpression":{"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19306:9:17","subExpression":{"id":4413,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"19306:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19299:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19265:71:17"},{"assignments":[4423],"declarations":[{"constant":false,"id":4423,"mutability":"mutable","name":"b","nameLocation":"19358:1:17","nodeType":"VariableDeclaration","scope":4456,"src":"19350:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4422,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19350:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4445,"initialValue":{"condition":{"baseExpression":{"id":4424,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"19362:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4426,"indexExpression":{"id":4425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"19373:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19362:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4440,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"19474:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4443,"indexExpression":{"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19480:10:17","subExpression":{"id":4441,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"19480:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19474:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19362:129:17","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4427,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"19395:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4428,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"19405:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19395:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4434,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"19437:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4437,"indexExpression":{"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19444:9:17","subExpression":{"id":4435,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"19444:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19437:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19395:59:17","trueExpression":{"baseExpression":{"id":4430,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"19417:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4433,"indexExpression":{"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19424:9:17","subExpression":{"id":4431,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"19424:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19417:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19394:61:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19350:141:17"},{"expression":{"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4446,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"19505:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4448,"indexExpression":{"id":4447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"19512:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19505:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4451,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"19545:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4452,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"19548:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4449,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"19517:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$3626_$","typeString":"type(library Hashes)"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19524:20:17","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":3613,"src":"19517:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19517:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19505:45:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4455,"nodeType":"ExpressionStatement","src":"19505:45:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4401,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"19227:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4402,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"19231:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19227:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4457,"initializationExpression":{"assignments":[4398],"declarations":[{"constant":false,"id":4398,"mutability":"mutable","name":"i","nameLocation":"19220:1:17","nodeType":"VariableDeclaration","scope":4457,"src":"19212:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4397,"name":"uint256","nodeType":"ElementaryTypeName","src":"19212:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4400,"initialValue":{"hexValue":"30","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19224:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19212:13:17"},"loopExpression":{"expression":{"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19246:3:17","subExpression":{"id":4404,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"19246:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4406,"nodeType":"ExpressionStatement","src":"19246:3:17"},"nodeType":"ForStatement","src":"19207:354:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4458,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"19575:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19591:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19575:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4478,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"19816:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19828:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19816:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4490,"nodeType":"Block","src":"19878:40:17","statements":[{"expression":{"baseExpression":{"id":4486,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"19899:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4488,"indexExpression":{"hexValue":"30","id":4487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19905:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19899:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4350,"id":4489,"nodeType":"Return","src":"19892:15:17"}]},"id":4491,"nodeType":"IfStatement","src":"19812:106:17","trueBody":{"id":4485,"nodeType":"Block","src":"19831:41:17","statements":[{"expression":{"baseExpression":{"id":4481,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"19852:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4483,"indexExpression":{"hexValue":"30","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19859:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19852:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4350,"id":4484,"nodeType":"Return","src":"19845:16:17"}]}},"id":4492,"nodeType":"IfStatement","src":"19571:347:17","trueBody":{"id":4477,"nodeType":"Block","src":"19594:212:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4461,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"19612:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4462,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"19624:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19630:6:17","memberName":"length","nodeType":"MemberAccess","src":"19624:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19612:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4469,"nodeType":"IfStatement","src":"19608:100:17","trueBody":{"id":4468,"nodeType":"Block","src":"19638:70:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4465,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"19663:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19663:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4467,"nodeType":"RevertStatement","src":"19656:37:17"}]}},{"id":4476,"nodeType":"UncheckedBlock","src":"19721:75:17","statements":[{"expression":{"baseExpression":{"id":4470,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"19756:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4474,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4471,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"19763:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19779:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19763:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19756:25:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4350,"id":4475,"nodeType":"Return","src":"19749:32:17"}]}]}}]},"documentation":{"id":4337,"nodeType":"StructuredDocumentation","src":"16526:1102:17","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4494,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"17642:25:17","nodeType":"FunctionDefinition","parameters":{"id":4347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4340,"mutability":"mutable","name":"proof","nameLocation":"17696:5:17","nodeType":"VariableDeclaration","scope":4494,"src":"17677:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17677:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4339,"nodeType":"ArrayTypeName","src":"17677:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4343,"mutability":"mutable","name":"proofFlags","nameLocation":"17727:10:17","nodeType":"VariableDeclaration","scope":4494,"src":"17711:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4341,"name":"bool","nodeType":"ElementaryTypeName","src":"17711:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4342,"nodeType":"ArrayTypeName","src":"17711:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4346,"mutability":"mutable","name":"leaves","nameLocation":"17764:6:17","nodeType":"VariableDeclaration","scope":4494,"src":"17747:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17747:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4345,"nodeType":"ArrayTypeName","src":"17747:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17667:109:17"},"returnParameters":{"id":4350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4349,"mutability":"mutable","name":"merkleRoot","nameLocation":"17808:10:17","nodeType":"VariableDeclaration","scope":4494,"src":"17800:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17800:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17799:20:17"},"scope":4699,"src":"17633:2291:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4530,"nodeType":"Block","src":"20795:92:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4522,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"20838:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":4523,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"20845:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":4524,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"20857:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4525,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"20865:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":4521,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[4494,4698],"referencedDeclaration":4698,"src":"20812:25:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20812:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4527,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"20876:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"20812:68:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4520,"id":4529,"nodeType":"Return","src":"20805:75:17"}]},"documentation":{"id":4495,"nodeType":"StructuredDocumentation","src":"19930:600:17","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":4531,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"20544:24:17","nodeType":"FunctionDefinition","parameters":{"id":4517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"proof","nameLocation":"20597:5:17","nodeType":"VariableDeclaration","scope":4531,"src":"20578:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20578:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4497,"nodeType":"ArrayTypeName","src":"20578:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4501,"mutability":"mutable","name":"proofFlags","nameLocation":"20628:10:17","nodeType":"VariableDeclaration","scope":4531,"src":"20612:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4499,"name":"bool","nodeType":"ElementaryTypeName","src":"20612:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4500,"nodeType":"ArrayTypeName","src":"20612:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4503,"mutability":"mutable","name":"root","nameLocation":"20656:4:17","nodeType":"VariableDeclaration","scope":4531,"src":"20648:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20648:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4506,"mutability":"mutable","name":"leaves","nameLocation":"20687:6:17","nodeType":"VariableDeclaration","scope":4531,"src":"20670:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20670:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4505,"nodeType":"ArrayTypeName","src":"20670:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4516,"mutability":"mutable","name":"hasher","nameLocation":"20753:6:17","nodeType":"VariableDeclaration","scope":4531,"src":"20703:56:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4515,"nodeType":"FunctionTypeName","parameterTypes":{"id":4511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4515,"src":"20712:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20712:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4515,"src":"20721:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4509,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20721:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20711:18:17"},"returnParameterTypes":{"id":4514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4515,"src":"20744:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20744:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20743:9:17"},"src":"20703:56:17","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"20568:197:17"},"returnParameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4531,"src":"20789:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4518,"name":"bool","nodeType":"ElementaryTypeName","src":"20789:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20788:6:17"},"scope":4699,"src":"20535:352:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4697,"nodeType":"Block","src":"22250:2083:17","statements":[{"assignments":[4557],"declarations":[{"constant":false,"id":4557,"mutability":"mutable","name":"leavesLen","nameLocation":"22642:9:17","nodeType":"VariableDeclaration","scope":4697,"src":"22634:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4556,"name":"uint256","nodeType":"ElementaryTypeName","src":"22634:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4560,"initialValue":{"expression":{"id":4558,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4541,"src":"22654:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22661:6:17","memberName":"length","nodeType":"MemberAccess","src":"22654:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22634:33:17"},{"assignments":[4562],"declarations":[{"constant":false,"id":4562,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"22685:13:17","nodeType":"VariableDeclaration","scope":4697,"src":"22677:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4561,"name":"uint256","nodeType":"ElementaryTypeName","src":"22677:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4565,"initialValue":{"expression":{"id":4563,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"22701:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22712:6:17","memberName":"length","nodeType":"MemberAccess","src":"22701:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22677:41:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4566,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"22766:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4567,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"22778:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22784:6:17","memberName":"length","nodeType":"MemberAccess","src":"22778:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4570,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"22794:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22810:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22794:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:45:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4578,"nodeType":"IfStatement","src":"22762:113:17","trueBody":{"id":4577,"nodeType":"Block","src":"22813:62:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4574,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"22834:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22834:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4576,"nodeType":"RevertStatement","src":"22827:37:17"}]}},{"assignments":[4583],"declarations":[{"constant":false,"id":4583,"mutability":"mutable","name":"hashes","nameLocation":"23136:6:17","nodeType":"VariableDeclaration","scope":4697,"src":"23119:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23119:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4582,"nodeType":"ArrayTypeName","src":"23119:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4589,"initialValue":{"arguments":[{"id":4587,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"23159:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23145:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23149:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4585,"nodeType":"ArrayTypeName","src":"23149:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23145:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23119:54:17"},{"assignments":[4591],"declarations":[{"constant":false,"id":4591,"mutability":"mutable","name":"leafPos","nameLocation":"23191:7:17","nodeType":"VariableDeclaration","scope":4697,"src":"23183:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4590,"name":"uint256","nodeType":"ElementaryTypeName","src":"23183:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4593,"initialValue":{"hexValue":"30","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23201:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23183:19:17"},{"assignments":[4595],"declarations":[{"constant":false,"id":4595,"mutability":"mutable","name":"hashPos","nameLocation":"23220:7:17","nodeType":"VariableDeclaration","scope":4697,"src":"23212:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4594,"name":"uint256","nodeType":"ElementaryTypeName","src":"23212:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4597,"initialValue":{"hexValue":"30","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23230:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23212:19:17"},{"assignments":[4599],"declarations":[{"constant":false,"id":4599,"mutability":"mutable","name":"proofPos","nameLocation":"23249:8:17","nodeType":"VariableDeclaration","scope":4697,"src":"23241:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"23241:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4601,"initialValue":{"hexValue":"30","id":4600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23260:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23241:20:17"},{"body":{"id":4660,"nodeType":"Block","src":"23681:289:17","statements":[{"assignments":[4613],"declarations":[{"constant":false,"id":4613,"mutability":"mutable","name":"a","nameLocation":"23703:1:17","nodeType":"VariableDeclaration","scope":4660,"src":"23695:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23695:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4626,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4614,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"23707:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4615,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"23717:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23707:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4621,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"23749:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4624,"indexExpression":{"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23756:9:17","subExpression":{"id":4622,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"23756:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23749:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23707:59:17","trueExpression":{"baseExpression":{"id":4617,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4541,"src":"23729:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4620,"indexExpression":{"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23736:9:17","subExpression":{"id":4618,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"23736:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23729:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23695:71:17"},{"assignments":[4628],"declarations":[{"constant":false,"id":4628,"mutability":"mutable","name":"b","nameLocation":"23788:1:17","nodeType":"VariableDeclaration","scope":4660,"src":"23780:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23780:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4650,"initialValue":{"condition":{"baseExpression":{"id":4629,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"23792:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4631,"indexExpression":{"id":4630,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"23803:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23792:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4645,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"23904:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4648,"indexExpression":{"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23910:10:17","subExpression":{"id":4646,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"23910:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23904:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23792:129:17","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4632,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"23825:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4633,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"23835:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23825:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4639,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"23867:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4642,"indexExpression":{"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23874:9:17","subExpression":{"id":4640,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"23874:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23867:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23825:59:17","trueExpression":{"baseExpression":{"id":4635,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4541,"src":"23847:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4638,"indexExpression":{"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23854:9:17","subExpression":{"id":4636,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"23854:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23847:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23824:61:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23780:141:17"},{"expression":{"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4651,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"23935:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4653,"indexExpression":{"id":4652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"23942:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23935:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4655,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"23954:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4656,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"23957:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4654,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"23947:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23947:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"23935:24:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4659,"nodeType":"ExpressionStatement","src":"23935:24:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4606,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"23657:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4607,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"23661:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23657:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4661,"initializationExpression":{"assignments":[4603],"declarations":[{"constant":false,"id":4603,"mutability":"mutable","name":"i","nameLocation":"23650:1:17","nodeType":"VariableDeclaration","scope":4661,"src":"23642:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"23642:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4605,"initialValue":{"hexValue":"30","id":4604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23654:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23642:13:17"},"loopExpression":{"expression":{"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23676:3:17","subExpression":{"id":4609,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"23676:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4611,"nodeType":"ExpressionStatement","src":"23676:3:17"},"nodeType":"ForStatement","src":"23637:333:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4662,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"23984:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24000:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23984:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4682,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"24225:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24237:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24225:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4694,"nodeType":"Block","src":"24287:40:17","statements":[{"expression":{"baseExpression":{"id":4690,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"24308:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4692,"indexExpression":{"hexValue":"30","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24314:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24308:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4555,"id":4693,"nodeType":"Return","src":"24301:15:17"}]},"id":4695,"nodeType":"IfStatement","src":"24221:106:17","trueBody":{"id":4689,"nodeType":"Block","src":"24240:41:17","statements":[{"expression":{"baseExpression":{"id":4685,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4541,"src":"24261:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4687,"indexExpression":{"hexValue":"30","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24268:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24261:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4555,"id":4688,"nodeType":"Return","src":"24254:16:17"}]}},"id":4696,"nodeType":"IfStatement","src":"23980:347:17","trueBody":{"id":4681,"nodeType":"Block","src":"24003:212:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4665,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"24021:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4666,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"24033:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24039:6:17","memberName":"length","nodeType":"MemberAccess","src":"24033:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24021:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4673,"nodeType":"IfStatement","src":"24017:100:17","trueBody":{"id":4672,"nodeType":"Block","src":"24047:70:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4669,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"24072:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24072:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4671,"nodeType":"RevertStatement","src":"24065:37:17"}]}},{"id":4680,"nodeType":"UncheckedBlock","src":"24130:75:17","statements":[{"expression":{"baseExpression":{"id":4674,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"24165:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4678,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4675,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24172:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24188:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24172:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24165:25:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4555,"id":4679,"nodeType":"Return","src":"24158:32:17"}]}]}}]},"documentation":{"id":4532,"nodeType":"StructuredDocumentation","src":"20893:1099:17","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4698,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"22006:25:17","nodeType":"FunctionDefinition","parameters":{"id":4552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4535,"mutability":"mutable","name":"proof","nameLocation":"22060:5:17","nodeType":"VariableDeclaration","scope":4698,"src":"22041:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22041:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4534,"nodeType":"ArrayTypeName","src":"22041:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4538,"mutability":"mutable","name":"proofFlags","nameLocation":"22091:10:17","nodeType":"VariableDeclaration","scope":4698,"src":"22075:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4536,"name":"bool","nodeType":"ElementaryTypeName","src":"22075:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4537,"nodeType":"ArrayTypeName","src":"22075:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4541,"mutability":"mutable","name":"leaves","nameLocation":"22128:6:17","nodeType":"VariableDeclaration","scope":4698,"src":"22111:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22111:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4540,"nodeType":"ArrayTypeName","src":"22111:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4551,"mutability":"mutable","name":"hasher","nameLocation":"22194:6:17","nodeType":"VariableDeclaration","scope":4698,"src":"22144:56:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4550,"nodeType":"FunctionTypeName","parameterTypes":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4550,"src":"22153:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22153:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4550,"src":"22162:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22162:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22152:18:17"},"returnParameterTypes":{"id":4549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4550,"src":"22185:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22185:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22184:9:17"},"src":"22144:56:17","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"22031:175:17"},"returnParameters":{"id":4555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4554,"mutability":"mutable","name":"merkleRoot","nameLocation":"22238:10:17","nodeType":"VariableDeclaration","scope":4698,"src":"22230:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22230:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22229:20:17"},"scope":4699,"src":"21997:2336:17","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4700,"src":"1353:22982:17","usedErrors":[3634],"usedEvents":[]}],"src":"206:24130:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4785],"Strings":[3011]},"id":4786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4701,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4703,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4786,"sourceUnit":3012,"src":"149:39:18","symbolAliases":[{"foreign":{"id":4702,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"157:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4704,"nodeType":"StructuredDocumentation","src":"190:330:18","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4785,"linearizedBaseContracts":[4785],"name":"MessageHashUtils","nameLocation":"529:16:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":4713,"nodeType":"Block","src":"1339:341:18","statements":[{"AST":{"nodeType":"YulBlock","src":"1374:300:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1395:4:18","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1401:34:18","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:18"},"nodeType":"YulFunctionCall","src":"1388:48:18"},"nodeType":"YulExpressionStatement","src":"1388:48:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:4:18","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1503:11:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:18"},"nodeType":"YulFunctionCall","src":"1490:25:18"},"nodeType":"YulExpressionStatement","src":"1490:25:18"},{"nodeType":"YulAssignment","src":"1569:31:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:18","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1579:9:18"},"nodeType":"YulFunctionCall","src":"1579:21:18"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1569:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4710,"isOffset":false,"isSlot":false,"src":"1569:6:18","valueSize":1},{"declaration":4707,"isOffset":false,"isSlot":false,"src":"1503:11:18","valueSize":1}],"flags":["memory-safe"],"id":4712,"nodeType":"InlineAssembly","src":"1349:325:18"}]},"documentation":{"id":4705,"nodeType":"StructuredDocumentation","src":"552:690:18","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4714,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:18","nodeType":"FunctionDefinition","parameters":{"id":4708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4707,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:18","nodeType":"VariableDeclaration","scope":4714,"src":"1279:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:18"},"returnParameters":{"id":4711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4710,"mutability":"mutable","name":"digest","nameLocation":"1331:6:18","nodeType":"VariableDeclaration","scope":4714,"src":"1323:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:18"},"scope":4785,"src":"1247:433:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4739,"nodeType":"Block","src":"2257:143:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4731,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"2366:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:18","memberName":"length","nodeType":"MemberAccess","src":"2366:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4729,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"2349:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3011_$","typeString":"type(library Strings)"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1723,"src":"2349:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4727,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:18","typeDescriptions":{}}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4735,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"2384:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4723,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:18","typeDescriptions":{}}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:18","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:18","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4722,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4721,"id":4738,"nodeType":"Return","src":"2267:126:18"}]},"documentation":{"id":4715,"nodeType":"StructuredDocumentation","src":"1686:480:18","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4740,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:18","nodeType":"FunctionDefinition","parameters":{"id":4718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4717,"mutability":"mutable","name":"message","nameLocation":"2216:7:18","nodeType":"VariableDeclaration","scope":4740,"src":"2203:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4716,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:18"},"returnParameters":{"id":4721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4740,"src":"2248:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:18"},"scope":4785,"src":"2171:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4759,"nodeType":"Block","src":"2854:80:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4754,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"2910:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4755,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"2921:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4751,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4750,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4749,"id":4758,"nodeType":"Return","src":"2864:63:18"}]},"documentation":{"id":4741,"nodeType":"StructuredDocumentation","src":"2406:332:18","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4760,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:18","nodeType":"FunctionDefinition","parameters":{"id":4746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4743,"mutability":"mutable","name":"validator","nameLocation":"2792:9:18","nodeType":"VariableDeclaration","scope":4760,"src":"2784:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4742,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4745,"mutability":"mutable","name":"data","nameLocation":"2816:4:18","nodeType":"VariableDeclaration","scope":4760,"src":"2803:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4744,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:18"},"returnParameters":{"id":4749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4760,"src":"2845:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4747,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:18"},"scope":4785,"src":"2743:191:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4771,"nodeType":"Block","src":"3216:216:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3251:175:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:4:18","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nodeType":"YulLiteral","src":"3278:10:18","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:18"},"nodeType":"YulFunctionCall","src":"3265:24:18"},"nodeType":"YulExpressionStatement","src":"3265:24:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:4:18","type":"","value":"0x02"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:18","type":"","value":"96"},{"name":"validator","nodeType":"YulIdentifier","src":"3323:9:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3315:3:18"},"nodeType":"YulFunctionCall","src":"3315:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:18"},"nodeType":"YulFunctionCall","src":"3302:32:18"},"nodeType":"YulExpressionStatement","src":"3302:32:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3354:4:18","type":"","value":"0x16"},{"name":"messageHash","nodeType":"YulIdentifier","src":"3360:11:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3347:6:18"},"nodeType":"YulFunctionCall","src":"3347:25:18"},"nodeType":"YulExpressionStatement","src":"3347:25:18"},{"nodeType":"YulAssignment","src":"3385:31:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:18","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3395:9:18"},"nodeType":"YulFunctionCall","src":"3395:21:18"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3385:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4768,"isOffset":false,"isSlot":false,"src":"3385:6:18","valueSize":1},{"declaration":4765,"isOffset":false,"isSlot":false,"src":"3360:11:18","valueSize":1},{"declaration":4763,"isOffset":false,"isSlot":false,"src":"3323:9:18","valueSize":1}],"flags":["memory-safe"],"id":4770,"nodeType":"InlineAssembly","src":"3226:200:18"}]},"documentation":{"id":4761,"nodeType":"StructuredDocumentation","src":"2940:129:18","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":4772,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:18","nodeType":"FunctionDefinition","parameters":{"id":4766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4763,"mutability":"mutable","name":"validator","nameLocation":"3132:9:18","nodeType":"VariableDeclaration","scope":4772,"src":"3124:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4762,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4765,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:18","nodeType":"VariableDeclaration","scope":4772,"src":"3151:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:18"},"returnParameters":{"id":4769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4768,"mutability":"mutable","name":"digest","nameLocation":"3208:6:18","nodeType":"VariableDeclaration","scope":4772,"src":"3200:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:18"},"scope":4785,"src":"3074:358:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4783,"nodeType":"Block","src":"3983:265:18","statements":[{"AST":{"nodeType":"YulBlock","src":"4018:224:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4049:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4043:5:18"},"nodeType":"YulFunctionCall","src":"4043:11:18"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4036:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4074:3:18"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"4079:10:18","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:18"},"nodeType":"YulFunctionCall","src":"4067:23:18"},"nodeType":"YulExpressionStatement","src":"4067:23:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4114:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"4119:4:18","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:18"},"nodeType":"YulFunctionCall","src":"4110:14:18"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4126:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:18"},"nodeType":"YulFunctionCall","src":"4103:39:18"},"nodeType":"YulExpressionStatement","src":"4103:39:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4166:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"4171:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:18"},"nodeType":"YulFunctionCall","src":"4162:14:18"},{"name":"structHash","nodeType":"YulIdentifier","src":"4178:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:18"},"nodeType":"YulFunctionCall","src":"4155:34:18"},"nodeType":"YulExpressionStatement","src":"4155:34:18"},{"nodeType":"YulAssignment","src":"4202:30:18","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4222:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"4227:4:18","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4212:9:18"},"nodeType":"YulFunctionCall","src":"4212:20:18"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"4202:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4780,"isOffset":false,"isSlot":false,"src":"4202:6:18","valueSize":1},{"declaration":4775,"isOffset":false,"isSlot":false,"src":"4126:15:18","valueSize":1},{"declaration":4777,"isOffset":false,"isSlot":false,"src":"4178:10:18","valueSize":1}],"flags":["memory-safe"],"id":4782,"nodeType":"InlineAssembly","src":"3993:249:18"}]},"documentation":{"id":4773,"nodeType":"StructuredDocumentation","src":"3438:431:18","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4784,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:18","nodeType":"FunctionDefinition","parameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4775,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:18","nodeType":"VariableDeclaration","scope":4784,"src":"3899:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4774,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4777,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:18","nodeType":"VariableDeclaration","scope":4784,"src":"3924:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:18"},"returnParameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4780,"mutability":"mutable","name":"digest","nameLocation":"3975:6:18","nodeType":"VariableDeclaration","scope":4784,"src":"3967:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:18"},"scope":4785,"src":"3874:374:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4786,"src":"521:3729:18","usedErrors":[],"usedEvents":[]}],"src":"123:4128:18"},"id":18},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6406],"Panic":[1268],"SafeCast":[8171]},"id":6407,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4787,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4789,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6407,"sourceUnit":1269,"src":"129:35:19","symbolAliases":[{"foreign":{"id":4788,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"137:5:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4791,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6407,"sourceUnit":8172,"src":"165:40:19","symbolAliases":[{"foreign":{"id":4790,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"173:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4792,"nodeType":"StructuredDocumentation","src":"207:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6406,"linearizedBaseContracts":[6406],"name":"Math","nameLocation":"289:4:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4797,"members":[{"id":4793,"name":"Floor","nameLocation":"324:5:19","nodeType":"EnumValue","src":"324:5:19"},{"id":4794,"name":"Ceil","nameLocation":"367:4:19","nodeType":"EnumValue","src":"367:4:19"},{"id":4795,"name":"Trunc","nameLocation":"409:5:19","nodeType":"EnumValue","src":"409:5:19"},{"id":4796,"name":"Expand","nameLocation":"439:6:19","nodeType":"EnumValue","src":"439:6:19"}],"name":"Rounding","nameLocation":"305:8:19","nodeType":"EnumDefinition","src":"300:169:19"},{"body":{"id":4810,"nodeType":"Block","src":"731:112:19","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:19","statements":[{"nodeType":"YulAssignment","src":"780:16:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:19"},"nodeType":"YulFunctionCall","src":"787:9:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:19"}]},{"nodeType":"YulAssignment","src":"809:18:19","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:19"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:19"},"nodeType":"YulFunctionCall","src":"817:10:19"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4800,"isOffset":false,"isSlot":false,"src":"791:1:19","valueSize":1},{"declaration":4800,"isOffset":false,"isSlot":false,"src":"825:1:19","valueSize":1},{"declaration":4802,"isOffset":false,"isSlot":false,"src":"794:1:19","valueSize":1},{"declaration":4805,"isOffset":false,"isSlot":false,"src":"809:4:19","valueSize":1},{"declaration":4807,"isOffset":false,"isSlot":false,"src":"780:3:19","valueSize":1},{"declaration":4807,"isOffset":false,"isSlot":false,"src":"820:3:19","valueSize":1}],"flags":["memory-safe"],"id":4809,"nodeType":"InlineAssembly","src":"741:96:19"}]},"documentation":{"id":4798,"nodeType":"StructuredDocumentation","src":"475:163:19","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4811,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:19","nodeType":"FunctionDefinition","parameters":{"id":4803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"a","nameLocation":"667:1:19","nodeType":"VariableDeclaration","scope":4811,"src":"659:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4799,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4802,"mutability":"mutable","name":"b","nameLocation":"678:1:19","nodeType":"VariableDeclaration","scope":4811,"src":"670:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4801,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:19"},"returnParameters":{"id":4808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"high","nameLocation":"712:4:19","nodeType":"VariableDeclaration","scope":4811,"src":"704:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4804,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4807,"mutability":"mutable","name":"low","nameLocation":"726:3:19","nodeType":"VariableDeclaration","scope":4811,"src":"718:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4806,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:19"},"scope":6406,"src":"643:200:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4824,"nodeType":"Block","src":"1115:462:19","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:19"},"nodeType":"YulFunctionCall","src":"1474:6:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:19"},"nodeType":"YulFunctionCall","src":"1461:20:19"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:19","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:19"},"nodeType":"YulFunctionCall","src":"1501:9:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:19"}]},{"nodeType":"YulAssignment","src":"1523:38:19","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:19"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:19"},"nodeType":"YulFunctionCall","src":"1535:12:19"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:19"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:19"},"nodeType":"YulFunctionCall","src":"1549:11:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:19"},"nodeType":"YulFunctionCall","src":"1531:30:19"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4814,"isOffset":false,"isSlot":false,"src":"1468:1:19","valueSize":1},{"declaration":4814,"isOffset":false,"isSlot":false,"src":"1505:1:19","valueSize":1},{"declaration":4816,"isOffset":false,"isSlot":false,"src":"1471:1:19","valueSize":1},{"declaration":4816,"isOffset":false,"isSlot":false,"src":"1508:1:19","valueSize":1},{"declaration":4819,"isOffset":false,"isSlot":false,"src":"1523:4:19","valueSize":1},{"declaration":4821,"isOffset":false,"isSlot":false,"src":"1494:3:19","valueSize":1},{"declaration":4821,"isOffset":false,"isSlot":false,"src":"1543:3:19","valueSize":1},{"declaration":4821,"isOffset":false,"isSlot":false,"src":"1556:3:19","valueSize":1}],"flags":["memory-safe"],"id":4823,"nodeType":"InlineAssembly","src":"1412:159:19"}]},"documentation":{"id":4812,"nodeType":"StructuredDocumentation","src":"849:173:19","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4825,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:19","nodeType":"FunctionDefinition","parameters":{"id":4817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4814,"mutability":"mutable","name":"a","nameLocation":"1051:1:19","nodeType":"VariableDeclaration","scope":4825,"src":"1043:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4813,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4816,"mutability":"mutable","name":"b","nameLocation":"1062:1:19","nodeType":"VariableDeclaration","scope":4825,"src":"1054:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:19"},"returnParameters":{"id":4822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4819,"mutability":"mutable","name":"high","nameLocation":"1096:4:19","nodeType":"VariableDeclaration","scope":4825,"src":"1088:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4818,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4821,"mutability":"mutable","name":"low","nameLocation":"1110:3:19","nodeType":"VariableDeclaration","scope":4825,"src":"1102:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4820,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:19"},"scope":6406,"src":"1027:550:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4859,"nodeType":"Block","src":"1784:149:19","statements":[{"id":4858,"nodeType":"UncheckedBlock","src":"1794:133:19","statements":[{"assignments":[4838],"declarations":[{"constant":false,"id":4838,"mutability":"mutable","name":"c","nameLocation":"1826:1:19","nodeType":"VariableDeclaration","scope":4858,"src":"1818:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4842,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4839,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"1830:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4840,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"1834:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:19"},{"expression":{"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4843,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"1849:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4844,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"1859:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4845,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"1864:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4848,"nodeType":"ExpressionStatement","src":"1849:16:19"},{"expression":{"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4849,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"1879:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4850,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"1888:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4853,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"1908:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4851,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"1892:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"1892:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4857,"nodeType":"ExpressionStatement","src":"1879:37:19"}]}]},"documentation":{"id":4826,"nodeType":"StructuredDocumentation","src":"1583:105:19","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4860,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:19","nodeType":"FunctionDefinition","parameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4828,"mutability":"mutable","name":"a","nameLocation":"1717:1:19","nodeType":"VariableDeclaration","scope":4860,"src":"1709:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4830,"mutability":"mutable","name":"b","nameLocation":"1728:1:19","nodeType":"VariableDeclaration","scope":4860,"src":"1720:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:19"},"returnParameters":{"id":4836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"success","nameLocation":"1759:7:19","nodeType":"VariableDeclaration","scope":4860,"src":"1754:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4832,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4835,"mutability":"mutable","name":"result","nameLocation":"1776:6:19","nodeType":"VariableDeclaration","scope":4860,"src":"1768:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4834,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:19"},"scope":6406,"src":"1693:240:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4894,"nodeType":"Block","src":"2143:149:19","statements":[{"id":4893,"nodeType":"UncheckedBlock","src":"2153:133:19","statements":[{"assignments":[4873],"declarations":[{"constant":false,"id":4873,"mutability":"mutable","name":"c","nameLocation":"2185:1:19","nodeType":"VariableDeclaration","scope":4893,"src":"2177:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4872,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4877,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4874,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"2189:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4875,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"2193:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:19"},{"expression":{"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4878,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"2208:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4879,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"2218:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4880,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"2223:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4883,"nodeType":"ExpressionStatement","src":"2208:16:19"},{"expression":{"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4884,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"2238:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4885,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"2247:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4888,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"2267:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4886,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"2251:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"2251:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4892,"nodeType":"ExpressionStatement","src":"2238:37:19"}]}]},"documentation":{"id":4861,"nodeType":"StructuredDocumentation","src":"1939:108:19","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4895,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:19","nodeType":"FunctionDefinition","parameters":{"id":4866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4863,"mutability":"mutable","name":"a","nameLocation":"2076:1:19","nodeType":"VariableDeclaration","scope":4895,"src":"2068:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4865,"mutability":"mutable","name":"b","nameLocation":"2087:1:19","nodeType":"VariableDeclaration","scope":4895,"src":"2079:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4864,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:19"},"returnParameters":{"id":4871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4868,"mutability":"mutable","name":"success","nameLocation":"2118:7:19","nodeType":"VariableDeclaration","scope":4895,"src":"2113:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4867,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4870,"mutability":"mutable","name":"result","nameLocation":"2135:6:19","nodeType":"VariableDeclaration","scope":4895,"src":"2127:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4869,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:19"},"scope":6406,"src":"2052:240:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4924,"nodeType":"Block","src":"2505:391:19","statements":[{"id":4923,"nodeType":"UncheckedBlock","src":"2515:375:19","statements":[{"assignments":[4908],"declarations":[{"constant":false,"id":4908,"mutability":"mutable","name":"c","nameLocation":"2547:1:19","nodeType":"VariableDeclaration","scope":4923,"src":"2539:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4907,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4912,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4909,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"2551:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4910,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"2555:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:19"},{"AST":{"nodeType":"YulBlock","src":"2595:188:19","statements":[{"nodeType":"YulAssignment","src":"2727:42:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:19"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:19"},"nodeType":"YulFunctionCall","src":"2744:9:19"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:19"},"nodeType":"YulFunctionCall","src":"2741:16:19"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:19"},"nodeType":"YulFunctionCall","src":"2759:9:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:19"},"nodeType":"YulFunctionCall","src":"2738:31:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4898,"isOffset":false,"isSlot":false,"src":"2751:1:19","valueSize":1},{"declaration":4898,"isOffset":false,"isSlot":false,"src":"2766:1:19","valueSize":1},{"declaration":4900,"isOffset":false,"isSlot":false,"src":"2755:1:19","valueSize":1},{"declaration":4908,"isOffset":false,"isSlot":false,"src":"2748:1:19","valueSize":1},{"declaration":4903,"isOffset":false,"isSlot":false,"src":"2727:7:19","valueSize":1}],"flags":["memory-safe"],"id":4913,"nodeType":"InlineAssembly","src":"2570:213:19"},{"expression":{"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4914,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"2842:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4915,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4908,"src":"2851:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4918,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"2871:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4916,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"2855:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"2855:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4922,"nodeType":"ExpressionStatement","src":"2842:37:19"}]}]},"documentation":{"id":4896,"nodeType":"StructuredDocumentation","src":"2298:111:19","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4925,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:19","nodeType":"FunctionDefinition","parameters":{"id":4901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4898,"mutability":"mutable","name":"a","nameLocation":"2438:1:19","nodeType":"VariableDeclaration","scope":4925,"src":"2430:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4897,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4900,"mutability":"mutable","name":"b","nameLocation":"2449:1:19","nodeType":"VariableDeclaration","scope":4925,"src":"2441:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4899,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:19"},"returnParameters":{"id":4906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4903,"mutability":"mutable","name":"success","nameLocation":"2480:7:19","nodeType":"VariableDeclaration","scope":4925,"src":"2475:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4902,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4905,"mutability":"mutable","name":"result","nameLocation":"2497:6:19","nodeType":"VariableDeclaration","scope":4925,"src":"2489:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4904,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:19"},"scope":6406,"src":"2414:482:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4945,"nodeType":"Block","src":"3111:231:19","statements":[{"id":4944,"nodeType":"UncheckedBlock","src":"3121:215:19","statements":[{"expression":{"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4937,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"3145:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4938,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"3155:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4942,"nodeType":"ExpressionStatement","src":"3145:15:19"},{"AST":{"nodeType":"YulBlock","src":"3199:127:19","statements":[{"nodeType":"YulAssignment","src":"3293:19:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:19"},"nodeType":"YulFunctionCall","src":"3303:9:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4928,"isOffset":false,"isSlot":false,"src":"3307:1:19","valueSize":1},{"declaration":4930,"isOffset":false,"isSlot":false,"src":"3310:1:19","valueSize":1},{"declaration":4935,"isOffset":false,"isSlot":false,"src":"3293:6:19","valueSize":1}],"flags":["memory-safe"],"id":4943,"nodeType":"InlineAssembly","src":"3174:152:19"}]}]},"documentation":{"id":4926,"nodeType":"StructuredDocumentation","src":"2902:113:19","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4946,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:19","nodeType":"FunctionDefinition","parameters":{"id":4931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4928,"mutability":"mutable","name":"a","nameLocation":"3044:1:19","nodeType":"VariableDeclaration","scope":4946,"src":"3036:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4927,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4930,"mutability":"mutable","name":"b","nameLocation":"3055:1:19","nodeType":"VariableDeclaration","scope":4946,"src":"3047:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4929,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:19"},"returnParameters":{"id":4936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4933,"mutability":"mutable","name":"success","nameLocation":"3086:7:19","nodeType":"VariableDeclaration","scope":4946,"src":"3081:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4932,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4935,"mutability":"mutable","name":"result","nameLocation":"3103:6:19","nodeType":"VariableDeclaration","scope":4946,"src":"3095:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4934,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:19"},"scope":6406,"src":"3020:322:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4966,"nodeType":"Block","src":"3567:231:19","statements":[{"id":4965,"nodeType":"UncheckedBlock","src":"3577:215:19","statements":[{"expression":{"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4958,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"3601:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4959,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"3611:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4963,"nodeType":"ExpressionStatement","src":"3601:15:19"},{"AST":{"nodeType":"YulBlock","src":"3655:127:19","statements":[{"nodeType":"YulAssignment","src":"3749:19:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:19"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:19"},"nodeType":"YulFunctionCall","src":"3759:9:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4949,"isOffset":false,"isSlot":false,"src":"3763:1:19","valueSize":1},{"declaration":4951,"isOffset":false,"isSlot":false,"src":"3766:1:19","valueSize":1},{"declaration":4956,"isOffset":false,"isSlot":false,"src":"3749:6:19","valueSize":1}],"flags":["memory-safe"],"id":4964,"nodeType":"InlineAssembly","src":"3630:152:19"}]}]},"documentation":{"id":4947,"nodeType":"StructuredDocumentation","src":"3348:123:19","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4967,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:19","nodeType":"FunctionDefinition","parameters":{"id":4952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4949,"mutability":"mutable","name":"a","nameLocation":"3500:1:19","nodeType":"VariableDeclaration","scope":4967,"src":"3492:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4948,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4951,"mutability":"mutable","name":"b","nameLocation":"3511:1:19","nodeType":"VariableDeclaration","scope":4967,"src":"3503:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4950,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:19"},"returnParameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4954,"mutability":"mutable","name":"success","nameLocation":"3542:7:19","nodeType":"VariableDeclaration","scope":4967,"src":"3537:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4953,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4956,"mutability":"mutable","name":"result","nameLocation":"3559:6:19","nodeType":"VariableDeclaration","scope":4967,"src":"3551:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4955,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:19"},"scope":6406,"src":"3476:322:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4996,"nodeType":"Block","src":"3989:122:19","statements":[{"assignments":[4978,4980],"declarations":[{"constant":false,"id":4978,"mutability":"mutable","name":"success","nameLocation":"4005:7:19","nodeType":"VariableDeclaration","scope":4996,"src":"4000:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4977,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4980,"mutability":"mutable","name":"result","nameLocation":"4022:6:19","nodeType":"VariableDeclaration","scope":4996,"src":"4014:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4979,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4985,"initialValue":{"arguments":[{"id":4982,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"4039:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4983,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"4042:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4981,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"4032:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:19"},{"expression":{"arguments":[{"id":4987,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"4069:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"4078:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4990,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4989,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:19","memberName":"max","nodeType":"MemberAccess","src":"4086:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4986,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"4061:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4976,"id":4995,"nodeType":"Return","src":"4054:50:19"}]},"documentation":{"id":4968,"nodeType":"StructuredDocumentation","src":"3804:103:19","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4997,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:19","nodeType":"FunctionDefinition","parameters":{"id":4973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"a","nameLocation":"3943:1:19","nodeType":"VariableDeclaration","scope":4997,"src":"3935:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4969,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4972,"mutability":"mutable","name":"b","nameLocation":"3954:1:19","nodeType":"VariableDeclaration","scope":4997,"src":"3946:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4971,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:19"},"returnParameters":{"id":4976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4997,"src":"3980:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4974,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:19"},"scope":6406,"src":"3912:199:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5016,"nodeType":"Block","src":"4294:73:19","statements":[{"assignments":[null,5008],"declarations":[null,{"constant":false,"id":5008,"mutability":"mutable","name":"result","nameLocation":"4315:6:19","nodeType":"VariableDeclaration","scope":5016,"src":"4307:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5013,"initialValue":{"arguments":[{"id":5010,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"4332:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5011,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"4335:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5009,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"4325:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:19"},{"expression":{"id":5014,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"4354:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5006,"id":5015,"nodeType":"Return","src":"4347:13:19"}]},"documentation":{"id":4998,"nodeType":"StructuredDocumentation","src":"4117:95:19","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":5017,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:19","nodeType":"FunctionDefinition","parameters":{"id":5003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5000,"mutability":"mutable","name":"a","nameLocation":"4248:1:19","nodeType":"VariableDeclaration","scope":5017,"src":"4240:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4999,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5002,"mutability":"mutable","name":"b","nameLocation":"4259:1:19","nodeType":"VariableDeclaration","scope":5017,"src":"4251:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5001,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:19"},"returnParameters":{"id":5006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5017,"src":"4285:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5004,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:19"},"scope":6406,"src":"4217:150:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5046,"nodeType":"Block","src":"4564:122:19","statements":[{"assignments":[5028,5030],"declarations":[{"constant":false,"id":5028,"mutability":"mutable","name":"success","nameLocation":"4580:7:19","nodeType":"VariableDeclaration","scope":5046,"src":"4575:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5027,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5030,"mutability":"mutable","name":"result","nameLocation":"4597:6:19","nodeType":"VariableDeclaration","scope":5046,"src":"4589:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5029,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5035,"initialValue":{"arguments":[{"id":5032,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"4614:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5033,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"4617:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5031,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"4607:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:19"},{"expression":{"arguments":[{"id":5037,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"4644:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"4653:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5040,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5039,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:19","memberName":"max","nodeType":"MemberAccess","src":"4661:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5036,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"4636:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5026,"id":5045,"nodeType":"Return","src":"4629:50:19"}]},"documentation":{"id":5018,"nodeType":"StructuredDocumentation","src":"4373:109:19","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5047,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:19","nodeType":"FunctionDefinition","parameters":{"id":5023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5020,"mutability":"mutable","name":"a","nameLocation":"4518:1:19","nodeType":"VariableDeclaration","scope":5047,"src":"4510:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5019,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5022,"mutability":"mutable","name":"b","nameLocation":"4529:1:19","nodeType":"VariableDeclaration","scope":5047,"src":"4521:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5021,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:19"},"returnParameters":{"id":5026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5047,"src":"4555:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5024,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:19"},"scope":6406,"src":"4487:199:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5073,"nodeType":"Block","src":"5158:207:19","statements":[{"id":5072,"nodeType":"UncheckedBlock","src":"5168:191:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5059,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"5306:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5060,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"5312:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5061,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"5316:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5063,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5066,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"5337:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5064,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"5321:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"5321:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5058,"id":5071,"nodeType":"Return","src":"5299:49:19"}]}]},"documentation":{"id":5048,"nodeType":"StructuredDocumentation","src":"4692:374:19","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5074,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:19","nodeType":"FunctionDefinition","parameters":{"id":5055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5050,"mutability":"mutable","name":"condition","nameLocation":"5093:9:19","nodeType":"VariableDeclaration","scope":5074,"src":"5088:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5049,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5052,"mutability":"mutable","name":"a","nameLocation":"5112:1:19","nodeType":"VariableDeclaration","scope":5074,"src":"5104:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5051,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5054,"mutability":"mutable","name":"b","nameLocation":"5123:1:19","nodeType":"VariableDeclaration","scope":5074,"src":"5115:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5053,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:19"},"returnParameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5074,"src":"5149:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:19"},"scope":6406,"src":"5071:294:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5092,"nodeType":"Block","src":"5502:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5085,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"5527:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5086,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"5531:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5088,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"5534:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5089,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"5537:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5084,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"5519:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5083,"id":5091,"nodeType":"Return","src":"5512:27:19"}]},"documentation":{"id":5075,"nodeType":"StructuredDocumentation","src":"5371:59:19","text":" @dev Returns the largest of two numbers."},"id":5093,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:19","nodeType":"FunctionDefinition","parameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5077,"mutability":"mutable","name":"a","nameLocation":"5456:1:19","nodeType":"VariableDeclaration","scope":5093,"src":"5448:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5076,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5079,"mutability":"mutable","name":"b","nameLocation":"5467:1:19","nodeType":"VariableDeclaration","scope":5093,"src":"5459:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5078,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:19"},"returnParameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5093,"src":"5493:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:19"},"scope":6406,"src":"5435:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5111,"nodeType":"Block","src":"5684:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5104,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"5709:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5105,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"5713:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5107,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"5716:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5108,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"5719:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5103,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"5701:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5102,"id":5110,"nodeType":"Return","src":"5694:27:19"}]},"documentation":{"id":5094,"nodeType":"StructuredDocumentation","src":"5552:60:19","text":" @dev Returns the smallest of two numbers."},"id":5112,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:19","nodeType":"FunctionDefinition","parameters":{"id":5099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5096,"mutability":"mutable","name":"a","nameLocation":"5638:1:19","nodeType":"VariableDeclaration","scope":5112,"src":"5630:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5095,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5098,"mutability":"mutable","name":"b","nameLocation":"5649:1:19","nodeType":"VariableDeclaration","scope":5112,"src":"5641:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5097,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:19"},"returnParameters":{"id":5102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5112,"src":"5675:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5100,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:19"},"scope":6406,"src":"5617:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5134,"nodeType":"Block","src":"5912:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5122,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"5967:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5123,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"5971:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"5977:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5127,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"5981:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5121,"id":5133,"nodeType":"Return","src":"5959:28:19"}]},"documentation":{"id":5113,"nodeType":"StructuredDocumentation","src":"5734:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5135,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:19","nodeType":"FunctionDefinition","parameters":{"id":5118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5115,"mutability":"mutable","name":"a","nameLocation":"5866:1:19","nodeType":"VariableDeclaration","scope":5135,"src":"5858:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5114,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5117,"mutability":"mutable","name":"b","nameLocation":"5877:1:19","nodeType":"VariableDeclaration","scope":5135,"src":"5869:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5116,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:19"},"returnParameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5135,"src":"5903:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5119,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:19"},"scope":6406,"src":"5841:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5175,"nodeType":"Block","src":"6286:633:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5145,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"6300:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5156,"nodeType":"IfStatement","src":"6296:150:19","trueBody":{"id":5155,"nodeType":"Block","src":"6308:138:19","statements":[{"expression":{"arguments":[{"expression":{"id":5151,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"6412:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":5152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"6412:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5148,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"6400:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"6400:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5154,"nodeType":"ExpressionStatement","src":"6400:35:19"}]}},{"id":5174,"nodeType":"UncheckedBlock","src":"6829:84:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5159,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"6876:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5157,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"6860:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"6860:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5163,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"6887:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5167,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"6896:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5144,"id":5173,"nodeType":"Return","src":"6853:49:19"}]}]},"documentation":{"id":5136,"nodeType":"StructuredDocumentation","src":"6000:210:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5176,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:19","nodeType":"FunctionDefinition","parameters":{"id":5141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5138,"mutability":"mutable","name":"a","nameLocation":"6240:1:19","nodeType":"VariableDeclaration","scope":5176,"src":"6232:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5137,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5140,"mutability":"mutable","name":"b","nameLocation":"6251:1:19","nodeType":"VariableDeclaration","scope":5176,"src":"6243:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5139,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:19"},"returnParameters":{"id":5144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5176,"src":"6277:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5142,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:19"},"scope":6406,"src":"6215:704:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5311,"nodeType":"Block","src":"7340:3585:19","statements":[{"id":5310,"nodeType":"UncheckedBlock","src":"7350:3569:19","statements":[{"assignments":[5189,5191],"declarations":[{"constant":false,"id":5189,"mutability":"mutable","name":"high","nameLocation":"7383:4:19","nodeType":"VariableDeclaration","scope":5310,"src":"7375:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5188,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5191,"mutability":"mutable","name":"low","nameLocation":"7397:3:19","nodeType":"VariableDeclaration","scope":5310,"src":"7389:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5190,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5196,"initialValue":{"arguments":[{"id":5193,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"7411:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5194,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"7414:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5192,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"7404:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5197,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"7498:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5205,"nodeType":"IfStatement","src":"7494:365:19","trueBody":{"id":5204,"nodeType":"Block","src":"7509:350:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5200,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"7827:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5201,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"7833:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5187,"id":5203,"nodeType":"Return","src":"7820:24:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5206,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"7969:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5207,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"7984:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5224,"nodeType":"IfStatement","src":"7965:142:19","trueBody":{"id":5223,"nodeType":"Block","src":"7990:117:19","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5213,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"8028:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5216,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"8046:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":5217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"8046:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5218,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"8070:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:19","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1231,"src":"8070:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5212,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"8020:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5209,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"8008:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"8008:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5222,"nodeType":"ExpressionStatement","src":"8008:84:19"}]}},{"assignments":[5226],"declarations":[{"constant":false,"id":5226,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:19","nodeType":"VariableDeclaration","scope":5310,"src":"8359:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5225,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5227,"nodeType":"VariableDeclarationStatement","src":"8359:17:19"},{"AST":{"nodeType":"YulBlock","src":"8415:283:19","statements":[{"nodeType":"YulAssignment","src":"8484:38:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:19"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:19"},"nodeType":"YulFunctionCall","src":"8497:25:19"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:19"}]},{"nodeType":"YulAssignment","src":"8604:37:19","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:19"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:19"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:19"},"nodeType":"YulFunctionCall","src":"8622:18:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:19"},"nodeType":"YulFunctionCall","src":"8612:29:19"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:19"}]},{"nodeType":"YulAssignment","src":"8658:26:19","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:19"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:19"},"nodeType":"YulFunctionCall","src":"8665:19:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5183,"isOffset":false,"isSlot":false,"src":"8510:11:19","valueSize":1},{"declaration":5189,"isOffset":false,"isSlot":false,"src":"8604:4:19","valueSize":1},{"declaration":5189,"isOffset":false,"isSlot":false,"src":"8616:4:19","valueSize":1},{"declaration":5191,"isOffset":false,"isSlot":false,"src":"8636:3:19","valueSize":1},{"declaration":5191,"isOffset":false,"isSlot":false,"src":"8658:3:19","valueSize":1},{"declaration":5191,"isOffset":false,"isSlot":false,"src":"8669:3:19","valueSize":1},{"declaration":5226,"isOffset":false,"isSlot":false,"src":"8484:9:19","valueSize":1},{"declaration":5226,"isOffset":false,"isSlot":false,"src":"8625:9:19","valueSize":1},{"declaration":5226,"isOffset":false,"isSlot":false,"src":"8674:9:19","valueSize":1},{"declaration":5179,"isOffset":false,"isSlot":false,"src":"8504:1:19","valueSize":1},{"declaration":5181,"isOffset":false,"isSlot":false,"src":"8507:1:19","valueSize":1}],"flags":["memory-safe"],"id":5228,"nodeType":"InlineAssembly","src":"8390:308:19"},{"assignments":[5230],"declarations":[{"constant":false,"id":5230,"mutability":"mutable","name":"twos","nameLocation":"8910:4:19","nodeType":"VariableDeclaration","scope":5310,"src":"8902:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5229,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5237,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5231,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"8917:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5233,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"8936:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:19"},{"AST":{"nodeType":"YulBlock","src":"8987:359:19","statements":[{"nodeType":"YulAssignment","src":"9052:37:19","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:19"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:19"},"nodeType":"YulFunctionCall","src":"9067:22:19"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:19"}]},{"nodeType":"YulAssignment","src":"9153:21:19","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:19"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:19"},"nodeType":"YulFunctionCall","src":"9160:14:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:19"}]},{"nodeType":"YulAssignment","src":"9293:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:19","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:19"},"nodeType":"YulFunctionCall","src":"9309:12:19"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:19"},"nodeType":"YulFunctionCall","src":"9305:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:19"},"nodeType":"YulFunctionCall","src":"9301:31:19"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5183,"isOffset":false,"isSlot":false,"src":"9052:11:19","valueSize":1},{"declaration":5183,"isOffset":false,"isSlot":false,"src":"9071:11:19","valueSize":1},{"declaration":5191,"isOffset":false,"isSlot":false,"src":"9153:3:19","valueSize":1},{"declaration":5191,"isOffset":false,"isSlot":false,"src":"9164:3:19","valueSize":1},{"declaration":5230,"isOffset":false,"isSlot":false,"src":"9084:4:19","valueSize":1},{"declaration":5230,"isOffset":false,"isSlot":false,"src":"9169:4:19","valueSize":1},{"declaration":5230,"isOffset":false,"isSlot":false,"src":"9293:4:19","valueSize":1},{"declaration":5230,"isOffset":false,"isSlot":false,"src":"9316:4:19","valueSize":1},{"declaration":5230,"isOffset":false,"isSlot":false,"src":"9323:4:19","valueSize":1}],"flags":["memory-safe"],"id":5238,"nodeType":"InlineAssembly","src":"8962:384:19"},{"expression":{"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5239,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"9409:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5240,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"9416:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5241,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"9423:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5244,"nodeType":"ExpressionStatement","src":"9409:18:19"},{"assignments":[5246],"declarations":[{"constant":false,"id":5246,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:19","nodeType":"VariableDeclaration","scope":5310,"src":"9762:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5245,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5253,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5248,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"9785:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:19"},{"expression":{"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5254,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"10018:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5256,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"10033:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5257,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"10047:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5261,"nodeType":"ExpressionStatement","src":"10018:36:19"},{"expression":{"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5262,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"10088:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5264,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"10103:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5265,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"10117:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5269,"nodeType":"ExpressionStatement","src":"10088:36:19"},{"expression":{"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5270,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"10160:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5272,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"10175:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5273,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"10189:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5277,"nodeType":"ExpressionStatement","src":"10160:36:19"},{"expression":{"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5278,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"10231:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5280,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"10246:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5281,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"10260:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5285,"nodeType":"ExpressionStatement","src":"10231:36:19"},{"expression":{"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5286,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"10304:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5288,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"10319:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5289,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"10333:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5293,"nodeType":"ExpressionStatement","src":"10304:36:19"},{"expression":{"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5294,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"10378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5296,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"10393:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5297,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"10407:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5301,"nodeType":"ExpressionStatement","src":"10378:36:19"},{"expression":{"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5302,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"10859:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5303,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10868:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5304,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"10874:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5307,"nodeType":"ExpressionStatement","src":"10859:22:19"},{"expression":{"id":5308,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"10902:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5187,"id":5309,"nodeType":"Return","src":"10895:13:19"}]}]},"documentation":{"id":5177,"nodeType":"StructuredDocumentation","src":"6925:312:19","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5312,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:19","nodeType":"FunctionDefinition","parameters":{"id":5184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"x","nameLocation":"7266:1:19","nodeType":"VariableDeclaration","scope":5312,"src":"7258:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5178,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5181,"mutability":"mutable","name":"y","nameLocation":"7277:1:19","nodeType":"VariableDeclaration","scope":5312,"src":"7269:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5180,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5183,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:19","nodeType":"VariableDeclaration","scope":5312,"src":"7280:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5182,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:19"},"returnParameters":{"id":5187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5186,"mutability":"mutable","name":"result","nameLocation":"7332:6:19","nodeType":"VariableDeclaration","scope":5312,"src":"7324:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5185,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:19"},"scope":6406,"src":"7242:3683:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5348,"nodeType":"Block","src":"11164:128:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5328,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"11188:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5329,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"11191:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5330,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"11194:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5327,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5312,5349],"referencedDeclaration":5312,"src":"11181:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5335,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5322,"src":"11242:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}],"id":5334,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"11225:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4797_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5338,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"11262:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5339,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"11265:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5340,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"11268:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5337,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5332,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"11209:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"11209:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5326,"id":5347,"nodeType":"Return","src":"11174:111:19"}]},"documentation":{"id":5313,"nodeType":"StructuredDocumentation","src":"10931:118:19","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5349,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:19","nodeType":"FunctionDefinition","parameters":{"id":5323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5315,"mutability":"mutable","name":"x","nameLocation":"11078:1:19","nodeType":"VariableDeclaration","scope":5349,"src":"11070:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5314,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5317,"mutability":"mutable","name":"y","nameLocation":"11089:1:19","nodeType":"VariableDeclaration","scope":5349,"src":"11081:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5316,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5319,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:19","nodeType":"VariableDeclaration","scope":5349,"src":"11092:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5318,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5322,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:19","nodeType":"VariableDeclaration","scope":5349,"src":"11113:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"},"typeName":{"id":5321,"nodeType":"UserDefinedTypeName","pathNode":{"id":5320,"name":"Rounding","nameLocations":["11113:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4797,"src":"11113:8:19"},"referencedDeclaration":4797,"src":"11113:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:19"},"returnParameters":{"id":5326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5349,"src":"11155:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5324,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:19"},"scope":6406,"src":"11054:238:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5398,"nodeType":"Block","src":"11500:245:19","statements":[{"id":5397,"nodeType":"UncheckedBlock","src":"11510:229:19","statements":[{"assignments":[5362,5364],"declarations":[{"constant":false,"id":5362,"mutability":"mutable","name":"high","nameLocation":"11543:4:19","nodeType":"VariableDeclaration","scope":5397,"src":"11535:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5361,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5364,"mutability":"mutable","name":"low","nameLocation":"11557:3:19","nodeType":"VariableDeclaration","scope":5397,"src":"11549:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5363,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5369,"initialValue":{"arguments":[{"id":5366,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"11571:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5367,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"11574:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5365,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"11564:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5370,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"11594:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5372,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"11607:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5383,"nodeType":"IfStatement","src":"11590:86:19","trueBody":{"id":5382,"nodeType":"Block","src":"11610:66:19","statements":[{"expression":{"arguments":[{"expression":{"id":5378,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"11640:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":5379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:19","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1231,"src":"11640:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5375,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"11628:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"11628:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5381,"nodeType":"ExpressionStatement","src":"11628:33:19"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5384,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"11697:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":5385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5386,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"11712:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":5388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5391,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"11719:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5392,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"11726:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5360,"id":5396,"nodeType":"Return","src":"11689:39:19"}]}]},"documentation":{"id":5350,"nodeType":"StructuredDocumentation","src":"11298:111:19","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":5399,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:19","nodeType":"FunctionDefinition","parameters":{"id":5357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5352,"mutability":"mutable","name":"x","nameLocation":"11438:1:19","nodeType":"VariableDeclaration","scope":5399,"src":"11430:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5351,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5354,"mutability":"mutable","name":"y","nameLocation":"11449:1:19","nodeType":"VariableDeclaration","scope":5399,"src":"11441:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5353,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5356,"mutability":"mutable","name":"n","nameLocation":"11458:1:19","nodeType":"VariableDeclaration","scope":5399,"src":"11452:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5355,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:19"},"returnParameters":{"id":5360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5359,"mutability":"mutable","name":"result","nameLocation":"11492:6:19","nodeType":"VariableDeclaration","scope":5399,"src":"11484:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5358,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:19"},"scope":6406,"src":"11414:331:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5437,"nodeType":"Block","src":"11963:113:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5415,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"11987:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5416,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"11990:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5417,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"11993:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5414,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[5399,5438],"referencedDeclaration":5399,"src":"11980:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5422,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5409,"src":"12031:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}],"id":5421,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"12014:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4797_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5425,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"12051:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5426,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"12054:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5428,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"12062:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5424,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5419,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"11998:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"11998:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5413,"id":5436,"nodeType":"Return","src":"11973:96:19"}]},"documentation":{"id":5400,"nodeType":"StructuredDocumentation","src":"11751:109:19","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":5438,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:19","nodeType":"FunctionDefinition","parameters":{"id":5410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"mutability":"mutable","name":"x","nameLocation":"11889:1:19","nodeType":"VariableDeclaration","scope":5438,"src":"11881:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5401,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5404,"mutability":"mutable","name":"y","nameLocation":"11900:1:19","nodeType":"VariableDeclaration","scope":5438,"src":"11892:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5403,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5406,"mutability":"mutable","name":"n","nameLocation":"11909:1:19","nodeType":"VariableDeclaration","scope":5438,"src":"11903:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5405,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5409,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:19","nodeType":"VariableDeclaration","scope":5438,"src":"11912:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"},"typeName":{"id":5408,"nodeType":"UserDefinedTypeName","pathNode":{"id":5407,"name":"Rounding","nameLocations":["11912:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4797,"src":"11912:8:19"},"referencedDeclaration":4797,"src":"11912:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:19"},"returnParameters":{"id":5413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5438,"src":"11954:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5411,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:19"},"scope":6406,"src":"11865:211:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5534,"nodeType":"Block","src":"12710:1849:19","statements":[{"id":5533,"nodeType":"UncheckedBlock","src":"12720:1833:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5448,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"12748:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5453,"nodeType":"IfStatement","src":"12744:20:19","trueBody":{"expression":{"hexValue":"30","id":5451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5447,"id":5452,"nodeType":"Return","src":"12756:8:19"}},{"assignments":[5455],"declarations":[{"constant":false,"id":5455,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:19","nodeType":"VariableDeclaration","scope":5533,"src":"13235:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5454,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5459,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5456,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"13255:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5457,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"13259:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:19"},{"assignments":[5461],"declarations":[{"constant":false,"id":5461,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:19","nodeType":"VariableDeclaration","scope":5533,"src":"13274:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5460,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5463,"initialValue":{"id":5462,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"13288:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:19"},{"assignments":[5465],"declarations":[{"constant":false,"id":5465,"mutability":"mutable","name":"x","nameLocation":"13432:1:19","nodeType":"VariableDeclaration","scope":5533,"src":"13425:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5464,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5467,"initialValue":{"hexValue":"30","id":5466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:19"},{"assignments":[5469],"declarations":[{"constant":false,"id":5469,"mutability":"mutable","name":"y","nameLocation":"13458:1:19","nodeType":"VariableDeclaration","scope":5533,"src":"13451:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5468,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5471,"initialValue":{"hexValue":"31","id":5470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:19"},{"body":{"id":5508,"nodeType":"Block","src":"13501:882:19","statements":[{"assignments":[5476],"declarations":[{"constant":false,"id":5476,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:19","nodeType":"VariableDeclaration","scope":5508,"src":"13519:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5475,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5480,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5477,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"13538:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5478,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"13544:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:19"},{"expression":{"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5481,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"13573:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5482,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"13578:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5483,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5484,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"13678:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5485,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"13923:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5486,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"13929:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5487,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"13941:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5492,"nodeType":"ExpressionStatement","src":"13572:395:19"},{"expression":{"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5493,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"13987:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5494,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"13990:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5495,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5496,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"14072:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5497,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"14326:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5498,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"14330:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5501,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"14341:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5499,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:19","typeDescriptions":{}}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5507,"nodeType":"ExpressionStatement","src":"13986:382:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5472,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"13485:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5509,"nodeType":"WhileStatement","src":"13478:905:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5510,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"14401:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5515,"nodeType":"IfStatement","src":"14397:22:19","trueBody":{"expression":{"hexValue":"30","id":5513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5447,"id":5514,"nodeType":"Return","src":"14411:8:19"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5517,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"14470:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5520,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"14477:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:19","subExpression":{"id":5523,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"14490:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5521,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:19","typeDescriptions":{}}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5529,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"14502:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5527,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:19","typeDescriptions":{}}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5516,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"14462:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5447,"id":5532,"nodeType":"Return","src":"14455:50:19"}]}]},"documentation":{"id":5439,"nodeType":"StructuredDocumentation","src":"12082:553:19","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5535,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:19","nodeType":"FunctionDefinition","parameters":{"id":5444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5441,"mutability":"mutable","name":"a","nameLocation":"12664:1:19","nodeType":"VariableDeclaration","scope":5535,"src":"12656:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5440,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5443,"mutability":"mutable","name":"n","nameLocation":"12675:1:19","nodeType":"VariableDeclaration","scope":5535,"src":"12667:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5442,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:19"},"returnParameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5535,"src":"12701:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5445,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:19"},"scope":6406,"src":"12640:1919:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5555,"nodeType":"Block","src":"15159:82:19","statements":[{"id":5554,"nodeType":"UncheckedBlock","src":"15169:66:19","statements":[{"expression":{"arguments":[{"id":5547,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"15212:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5548,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"15215:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5551,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"15222:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5545,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"15200:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6406_$","typeString":"type(library Math)"}},"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:19","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5592,"src":"15200:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5544,"id":5553,"nodeType":"Return","src":"15193:31:19"}]}]},"documentation":{"id":5536,"nodeType":"StructuredDocumentation","src":"14565:514:19","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5556,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:19","nodeType":"FunctionDefinition","parameters":{"id":5541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5538,"mutability":"mutable","name":"a","nameLocation":"15113:1:19","nodeType":"VariableDeclaration","scope":5556,"src":"15105:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5537,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5540,"mutability":"mutable","name":"p","nameLocation":"15124:1:19","nodeType":"VariableDeclaration","scope":5556,"src":"15116:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5539,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:19"},"returnParameters":{"id":5544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5556,"src":"15150:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5542,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:19"},"scope":6406,"src":"15084:157:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5591,"nodeType":"Block","src":"16011:174:19","statements":[{"assignments":[5569,5571],"declarations":[{"constant":false,"id":5569,"mutability":"mutable","name":"success","nameLocation":"16027:7:19","nodeType":"VariableDeclaration","scope":5591,"src":"16022:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5568,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5571,"mutability":"mutable","name":"result","nameLocation":"16044:6:19","nodeType":"VariableDeclaration","scope":5591,"src":"16036:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5570,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5577,"initialValue":{"arguments":[{"id":5573,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"16064:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5574,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"16067:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5575,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"16070:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5572,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5616,5698],"referencedDeclaration":5616,"src":"16054:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:19"},{"condition":{"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:19","subExpression":{"id":5578,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"16087:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5588,"nodeType":"IfStatement","src":"16082:74:19","trueBody":{"id":5587,"nodeType":"Block","src":"16096:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":5583,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"16122:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"16122:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5580,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"16110:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"16110:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5586,"nodeType":"ExpressionStatement","src":"16110:35:19"}]}},{"expression":{"id":5589,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"16172:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5567,"id":5590,"nodeType":"Return","src":"16165:13:19"}]},"documentation":{"id":5557,"nodeType":"StructuredDocumentation","src":"15247:678:19","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5592,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:19","nodeType":"FunctionDefinition","parameters":{"id":5564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5559,"mutability":"mutable","name":"b","nameLocation":"15954:1:19","nodeType":"VariableDeclaration","scope":5592,"src":"15946:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5558,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5561,"mutability":"mutable","name":"e","nameLocation":"15965:1:19","nodeType":"VariableDeclaration","scope":5592,"src":"15957:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5560,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5563,"mutability":"mutable","name":"m","nameLocation":"15976:1:19","nodeType":"VariableDeclaration","scope":5592,"src":"15968:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5562,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:19"},"returnParameters":{"id":5567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5592,"src":"16002:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5565,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:19"},"scope":6406,"src":"15930:255:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5615,"nodeType":"Block","src":"17039:1493:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5606,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"17053:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5613,"nodeType":"IfStatement","src":"17049:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5605,"id":5612,"nodeType":"Return","src":"17061:17:19"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:19"},"nodeType":"YulFunctionCall","src":"17138:11:19"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:19","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:19"},"nodeType":"YulFunctionCall","src":"18050:17:19"},"nodeType":"YulExpressionStatement","src":"18050:17:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:19"},"nodeType":"YulFunctionCall","src":"18087:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:19"},"nodeType":"YulFunctionCall","src":"18080:28:19"},"nodeType":"YulExpressionStatement","src":"18080:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:19"},"nodeType":"YulFunctionCall","src":"18128:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:19"},"nodeType":"YulFunctionCall","src":"18121:28:19"},"nodeType":"YulExpressionStatement","src":"18121:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:19"},"nodeType":"YulFunctionCall","src":"18169:14:19"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:19"},"nodeType":"YulFunctionCall","src":"18162:25:19"},"nodeType":"YulExpressionStatement","src":"18162:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:19"},"nodeType":"YulFunctionCall","src":"18207:14:19"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:19"},"nodeType":"YulFunctionCall","src":"18200:25:19"},"nodeType":"YulExpressionStatement","src":"18200:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:19"},"nodeType":"YulFunctionCall","src":"18245:14:19"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:19"},"nodeType":"YulFunctionCall","src":"18238:25:19"},"nodeType":"YulExpressionStatement","src":"18238:25:19"},{"nodeType":"YulAssignment","src":"18425:57:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:19"},"nodeType":"YulFunctionCall","src":"18447:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:19","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:19","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:19","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:19"},"nodeType":"YulFunctionCall","src":"18436:46:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:19"}]},{"nodeType":"YulAssignment","src":"18495:21:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:19","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:19"},"nodeType":"YulFunctionCall","src":"18505:11:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5595,"isOffset":false,"isSlot":false,"src":"18185:1:19","valueSize":1},{"declaration":5597,"isOffset":false,"isSlot":false,"src":"18223:1:19","valueSize":1},{"declaration":5599,"isOffset":false,"isSlot":false,"src":"18261:1:19","valueSize":1},{"declaration":5604,"isOffset":false,"isSlot":false,"src":"18495:6:19","valueSize":1},{"declaration":5602,"isOffset":false,"isSlot":false,"src":"18425:7:19","valueSize":1}],"flags":["memory-safe"],"id":5614,"nodeType":"InlineAssembly","src":"17088:1438:19"}]},"documentation":{"id":5593,"nodeType":"StructuredDocumentation","src":"16191:738:19","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5616,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:19","nodeType":"FunctionDefinition","parameters":{"id":5600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5595,"mutability":"mutable","name":"b","nameLocation":"16961:1:19","nodeType":"VariableDeclaration","scope":5616,"src":"16953:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5594,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5597,"mutability":"mutable","name":"e","nameLocation":"16972:1:19","nodeType":"VariableDeclaration","scope":5616,"src":"16964:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5596,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5599,"mutability":"mutable","name":"m","nameLocation":"16983:1:19","nodeType":"VariableDeclaration","scope":5616,"src":"16975:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5598,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:19"},"returnParameters":{"id":5605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5602,"mutability":"mutable","name":"success","nameLocation":"17014:7:19","nodeType":"VariableDeclaration","scope":5616,"src":"17009:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5601,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5604,"mutability":"mutable","name":"result","nameLocation":"17031:6:19","nodeType":"VariableDeclaration","scope":5616,"src":"17023:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5603,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:19"},"scope":6406,"src":"16934:1598:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5651,"nodeType":"Block","src":"18729:179:19","statements":[{"assignments":[5629,5631],"declarations":[{"constant":false,"id":5629,"mutability":"mutable","name":"success","nameLocation":"18745:7:19","nodeType":"VariableDeclaration","scope":5651,"src":"18740:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5628,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5631,"mutability":"mutable","name":"result","nameLocation":"18767:6:19","nodeType":"VariableDeclaration","scope":5651,"src":"18754:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5630,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5637,"initialValue":{"arguments":[{"id":5633,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5619,"src":"18787:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5634,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"18790:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5635,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"18793:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5632,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5616,5698],"referencedDeclaration":5698,"src":"18777:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:19"},{"condition":{"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:19","subExpression":{"id":5638,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"18810:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5648,"nodeType":"IfStatement","src":"18805:74:19","trueBody":{"id":5647,"nodeType":"Block","src":"18819:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":5643,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"18845:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":5644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"18845:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5640,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"18833:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"18833:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5646,"nodeType":"ExpressionStatement","src":"18833:35:19"}]}},{"expression":{"id":5649,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"18895:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5627,"id":5650,"nodeType":"Return","src":"18888:13:19"}]},"documentation":{"id":5617,"nodeType":"StructuredDocumentation","src":"18538:85:19","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5652,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:19","nodeType":"FunctionDefinition","parameters":{"id":5624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5619,"mutability":"mutable","name":"b","nameLocation":"18657:1:19","nodeType":"VariableDeclaration","scope":5652,"src":"18644:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5618,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5621,"mutability":"mutable","name":"e","nameLocation":"18673:1:19","nodeType":"VariableDeclaration","scope":5652,"src":"18660:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5620,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5623,"mutability":"mutable","name":"m","nameLocation":"18689:1:19","nodeType":"VariableDeclaration","scope":5652,"src":"18676:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5622,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:19"},"returnParameters":{"id":5627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5652,"src":"18715:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5625,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:19"},"scope":6406,"src":"18628:280:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5697,"nodeType":"Block","src":"19162:771:19","statements":[{"condition":{"arguments":[{"id":5667,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"19187:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5666,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"19176:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5676,"nodeType":"IfStatement","src":"19172:47:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5670,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5665,"id":5675,"nodeType":"Return","src":"19191:28:19"}},{"assignments":[5678],"declarations":[{"constant":false,"id":5678,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:19","nodeType":"VariableDeclaration","scope":5697,"src":"19230:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5677,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5681,"initialValue":{"expression":{"id":5679,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"19245:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:19","memberName":"length","nodeType":"MemberAccess","src":"19245:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:19"},{"expression":{"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"19335:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5685,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"19361:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:19","memberName":"length","nodeType":"MemberAccess","src":"19361:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5687,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"19371:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:19","memberName":"length","nodeType":"MemberAccess","src":"19371:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5689,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"19381:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5690,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"19387:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5691,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"19390:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5692,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"19393:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5683,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5695,"nodeType":"ExpressionStatement","src":"19335:60:19"},{"AST":{"nodeType":"YulBlock","src":"19431:496:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:19","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:19"},"nodeType":"YulFunctionCall","src":"19460:17:19"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:19","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:19"},"nodeType":"YulFunctionCall","src":"19589:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:19","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:19"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:19"},"nodeType":"YulFunctionCall","src":"19611:13:19"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:19"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:19"},"nodeType":"YulFunctionCall","src":"19578:62:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:19"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:19"},"nodeType":"YulFunctionCall","src":"19789:20:19"},"nodeType":"YulExpressionStatement","src":"19789:20:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:19","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:19"},"nodeType":"YulFunctionCall","src":"19898:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:19"},"nodeType":"YulFunctionCall","src":"19885:32:19"},"nodeType":"YulExpressionStatement","src":"19885:32:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":5678,"isOffset":false,"isSlot":false,"src":"19635:4:19","valueSize":1},{"declaration":5678,"isOffset":false,"isSlot":false,"src":"19804:4:19","valueSize":1},{"declaration":5678,"isOffset":false,"isSlot":false,"src":"19911:4:19","valueSize":1},{"declaration":5664,"isOffset":false,"isSlot":false,"src":"19464:6:19","valueSize":1},{"declaration":5664,"isOffset":false,"isSlot":false,"src":"19617:6:19","valueSize":1},{"declaration":5664,"isOffset":false,"isSlot":false,"src":"19796:6:19","valueSize":1},{"declaration":5662,"isOffset":false,"isSlot":false,"src":"19567:7:19","valueSize":1}],"flags":["memory-safe"],"id":5696,"nodeType":"InlineAssembly","src":"19406:521:19"}]},"documentation":{"id":5653,"nodeType":"StructuredDocumentation","src":"18914:88:19","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5698,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:19","nodeType":"FunctionDefinition","parameters":{"id":5660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5655,"mutability":"mutable","name":"b","nameLocation":"19048:1:19","nodeType":"VariableDeclaration","scope":5698,"src":"19035:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5654,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5657,"mutability":"mutable","name":"e","nameLocation":"19072:1:19","nodeType":"VariableDeclaration","scope":5698,"src":"19059:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5656,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5659,"mutability":"mutable","name":"m","nameLocation":"19096:1:19","nodeType":"VariableDeclaration","scope":5698,"src":"19083:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5658,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:19"},"returnParameters":{"id":5665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5662,"mutability":"mutable","name":"success","nameLocation":"19132:7:19","nodeType":"VariableDeclaration","scope":5698,"src":"19127:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5661,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5664,"mutability":"mutable","name":"result","nameLocation":"19154:6:19","nodeType":"VariableDeclaration","scope":5698,"src":"19141:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5663,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:19"},"scope":6406,"src":"19007:926:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5730,"nodeType":"Block","src":"20088:176:19","statements":[{"body":{"id":5726,"nodeType":"Block","src":"20145:92:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5717,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"20163:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5719,"indexExpression":{"id":5718,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"20173:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5725,"nodeType":"IfStatement","src":"20159:68:19","trueBody":{"id":5724,"nodeType":"Block","src":"20182:45:19","statements":[{"expression":{"hexValue":"66616c7365","id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5705,"id":5723,"nodeType":"Return","src":"20200:12:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5710,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"20118:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5711,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"20122:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:19","memberName":"length","nodeType":"MemberAccess","src":"20122:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5727,"initializationExpression":{"assignments":[5707],"declarations":[{"constant":false,"id":5707,"mutability":"mutable","name":"i","nameLocation":"20111:1:19","nodeType":"VariableDeclaration","scope":5727,"src":"20103:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5706,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5709,"initialValue":{"hexValue":"30","id":5708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:19"},"loopExpression":{"expression":{"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:19","subExpression":{"id":5714,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"20142:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5716,"nodeType":"ExpressionStatement","src":"20140:3:19"},"nodeType":"ForStatement","src":"20098:139:19"},{"expression":{"hexValue":"74727565","id":5728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5705,"id":5729,"nodeType":"Return","src":"20246:11:19"}]},"documentation":{"id":5699,"nodeType":"StructuredDocumentation","src":"19939:72:19","text":" @dev Returns whether the provided byte array is zero."},"id":5731,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:19","nodeType":"FunctionDefinition","parameters":{"id":5702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:19","nodeType":"VariableDeclaration","scope":5731,"src":"20036:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5700,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:19"},"returnParameters":{"id":5705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5731,"src":"20082:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5703,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:19"},"scope":6406,"src":"20016:248:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5949,"nodeType":"Block","src":"20624:5124:19","statements":[{"id":5948,"nodeType":"UncheckedBlock","src":"20634:5108:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5739,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"20728:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5745,"nodeType":"IfStatement","src":"20724:53:19","trueBody":{"id":5744,"nodeType":"Block","src":"20736:41:19","statements":[{"expression":{"id":5742,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"20761:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5738,"id":5743,"nodeType":"Return","src":"20754:8:19"}]}},{"assignments":[5747],"declarations":[{"constant":false,"id":5747,"mutability":"mutable","name":"aa","nameLocation":"21712:2:19","nodeType":"VariableDeclaration","scope":5948,"src":"21704:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5746,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5749,"initialValue":{"id":5748,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"21717:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:19"},{"assignments":[5751],"declarations":[{"constant":false,"id":5751,"mutability":"mutable","name":"xn","nameLocation":"21740:2:19","nodeType":"VariableDeclaration","scope":5948,"src":"21732:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5750,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5753,"initialValue":{"hexValue":"31","id":5752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5754,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"21765:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5769,"nodeType":"IfStatement","src":"21761:92:19","trueBody":{"id":5768,"nodeType":"Block","src":"21783:70:19","statements":[{"expression":{"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5760,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"21801:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5763,"nodeType":"ExpressionStatement","src":"21801:10:19"},{"expression":{"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5764,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"21829:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5767,"nodeType":"ExpressionStatement","src":"21829:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5770,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"21870:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5785,"nodeType":"IfStatement","src":"21866:90:19","trueBody":{"id":5784,"nodeType":"Block","src":"21887:69:19","statements":[{"expression":{"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5776,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"21905:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5779,"nodeType":"ExpressionStatement","src":"21905:9:19"},{"expression":{"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5780,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"21932:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5783,"nodeType":"ExpressionStatement","src":"21932:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5786,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"21973:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5801,"nodeType":"IfStatement","src":"21969:90:19","trueBody":{"id":5800,"nodeType":"Block","src":"21990:69:19","statements":[{"expression":{"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5792,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"22008:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5795,"nodeType":"ExpressionStatement","src":"22008:9:19"},{"expression":{"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5796,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"22035:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5799,"nodeType":"ExpressionStatement","src":"22035:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5802,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"22076:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5806,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5817,"nodeType":"IfStatement","src":"22072:89:19","trueBody":{"id":5816,"nodeType":"Block","src":"22093:68:19","statements":[{"expression":{"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5808,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"22111:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5811,"nodeType":"ExpressionStatement","src":"22111:9:19"},{"expression":{"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5812,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"22138:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5815,"nodeType":"ExpressionStatement","src":"22138:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5818,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"22178:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5822,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5833,"nodeType":"IfStatement","src":"22174:87:19","trueBody":{"id":5832,"nodeType":"Block","src":"22194:67:19","statements":[{"expression":{"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5824,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"22212:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5827,"nodeType":"ExpressionStatement","src":"22212:8:19"},{"expression":{"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5828,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"22238:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5831,"nodeType":"ExpressionStatement","src":"22238:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5834,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"22278:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5849,"nodeType":"IfStatement","src":"22274:87:19","trueBody":{"id":5848,"nodeType":"Block","src":"22294:67:19","statements":[{"expression":{"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5840,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"22312:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5843,"nodeType":"ExpressionStatement","src":"22312:8:19"},{"expression":{"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5844,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"22338:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5847,"nodeType":"ExpressionStatement","src":"22338:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5850,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"22378:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5861,"nodeType":"IfStatement","src":"22374:61:19","trueBody":{"id":5860,"nodeType":"Block","src":"22394:41:19","statements":[{"expression":{"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5856,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"22412:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5859,"nodeType":"ExpressionStatement","src":"22412:8:19"}]}},{"expression":{"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5862,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"22855:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5864,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"22865:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5866,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5870,"nodeType":"ExpressionStatement","src":"22855:18:19"},{"expression":{"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5871,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"24760:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5872,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"24766:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5873,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"24771:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5874,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"24775:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5881,"nodeType":"ExpressionStatement","src":"24760:23:19"},{"expression":{"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5882,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"24869:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5883,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"24875:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5884,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"24880:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5885,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"24884:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5892,"nodeType":"ExpressionStatement","src":"24869:23:19"},{"expression":{"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5893,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"24980:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5894,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"24986:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5895,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"24991:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5896,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"24995:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5899,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5903,"nodeType":"ExpressionStatement","src":"24980:23:19"},{"expression":{"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5904,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"25089:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5905,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"25095:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"25100:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5907,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"25104:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5914,"nodeType":"ExpressionStatement","src":"25089:23:19"},{"expression":{"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5915,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"25199:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5916,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"25205:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5917,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"25210:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5918,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"25214:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5925,"nodeType":"ExpressionStatement","src":"25199:23:19"},{"expression":{"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5926,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"25309:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"25315:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"25320:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5929,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"25324:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5936,"nodeType":"ExpressionStatement","src":"25309:23:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5937,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"25698:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5940,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"25719:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5941,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"25724:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5942,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"25728:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5938,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"25703:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"25703:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5738,"id":5947,"nodeType":"Return","src":"25691:40:19"}]}]},"documentation":{"id":5732,"nodeType":"StructuredDocumentation","src":"20270:292:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5950,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:19","nodeType":"FunctionDefinition","parameters":{"id":5735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5734,"mutability":"mutable","name":"a","nameLocation":"20589:1:19","nodeType":"VariableDeclaration","scope":5950,"src":"20581:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5733,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:19"},"returnParameters":{"id":5738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5950,"src":"20615:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5736,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:19"},"scope":6406,"src":"20567:5181:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5983,"nodeType":"Block","src":"25921:171:19","statements":[{"id":5982,"nodeType":"UncheckedBlock","src":"25931:155:19","statements":[{"assignments":[5962],"declarations":[{"constant":false,"id":5962,"mutability":"mutable","name":"result","nameLocation":"25963:6:19","nodeType":"VariableDeclaration","scope":5982,"src":"25955:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5961,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5966,"initialValue":{"arguments":[{"id":5964,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"25977:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5963,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5950,5984],"referencedDeclaration":5950,"src":"25972:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5967,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"26000:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5971,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"26042:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}],"id":5970,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"26025:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4797_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"26055:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5974,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"26064:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5976,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"26073:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5968,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"26009:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"26009:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5960,"id":5981,"nodeType":"Return","src":"25993:82:19"}]}]},"documentation":{"id":5951,"nodeType":"StructuredDocumentation","src":"25754:86:19","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5984,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:19","nodeType":"FunctionDefinition","parameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"a","nameLocation":"25867:1:19","nodeType":"VariableDeclaration","scope":5984,"src":"25859:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5952,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5956,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:19","nodeType":"VariableDeclaration","scope":5984,"src":"25870:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"},"typeName":{"id":5955,"nodeType":"UserDefinedTypeName","pathNode":{"id":5954,"name":"Rounding","nameLocations":["25870:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4797,"src":"25870:8:19"},"referencedDeclaration":4797,"src":"25870:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:19"},"returnParameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5984,"src":"25912:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5958,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:19"},"scope":6406,"src":"25845:247:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6074,"nodeType":"Block","src":"26281:2334:19","statements":[{"expression":{"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5992,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"26363:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5995,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"26383:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5993,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"26367:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"26367:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6002,"nodeType":"ExpressionStatement","src":"26363:64:19"},{"expression":{"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6003,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"26503:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6006,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"26525:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6007,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"26530:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6004,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"26508:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"26508:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6016,"nodeType":"ExpressionStatement","src":"26503:56:19"},{"expression":{"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6017,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"26634:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6020,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"26656:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6021,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"26661:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6023,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6018,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"26639:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"26639:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6030,"nodeType":"ExpressionStatement","src":"26634:48:19"},{"expression":{"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6031,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"26757:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6034,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"26779:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6035,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"26784:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:19","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6032,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"26762:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"26762:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6044,"nodeType":"ExpressionStatement","src":"26757:44:19"},{"expression":{"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6045,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"26874:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6048,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"26896:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6049,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"26901:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6046,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"26879:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"26879:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6058,"nodeType":"ExpressionStatement","src":"26874:42:19"},{"expression":{"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6059,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"26988:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6062,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"27010:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6063,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"27015:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":6066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6060,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"26993:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"26993:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6072,"nodeType":"ExpressionStatement","src":"26988:41:19"},{"AST":{"nodeType":"YulBlock","src":"28490:119:19","statements":[{"nodeType":"YulAssignment","src":"28504:95:19","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:19"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:19"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:19"},"nodeType":"YulFunctionCall","src":"28520:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:19","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:19"},"nodeType":"YulFunctionCall","src":"28515:83:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:19"},"nodeType":"YulFunctionCall","src":"28509:90:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5990,"isOffset":false,"isSlot":false,"src":"28504:1:19","valueSize":1},{"declaration":5990,"isOffset":false,"isSlot":false,"src":"28512:1:19","valueSize":1},{"declaration":5990,"isOffset":false,"isSlot":false,"src":"28524:1:19","valueSize":1},{"declaration":5987,"isOffset":false,"isSlot":false,"src":"28527:1:19","valueSize":1}],"flags":["memory-safe"],"id":6073,"nodeType":"InlineAssembly","src":"28465:144:19"}]},"documentation":{"id":5985,"nodeType":"StructuredDocumentation","src":"26098:119:19","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6075,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:19","nodeType":"FunctionDefinition","parameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"x","nameLocation":"26244:1:19","nodeType":"VariableDeclaration","scope":6075,"src":"26236:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5986,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:19"},"returnParameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5990,"mutability":"mutable","name":"r","nameLocation":"26278:1:19","nodeType":"VariableDeclaration","scope":6075,"src":"26270:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5989,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:19"},"scope":6406,"src":"26222:2393:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6108,"nodeType":"Block","src":"28848:175:19","statements":[{"id":6107,"nodeType":"UncheckedBlock","src":"28858:159:19","statements":[{"assignments":[6087],"declarations":[{"constant":false,"id":6087,"mutability":"mutable","name":"result","nameLocation":"28890:6:19","nodeType":"VariableDeclaration","scope":6107,"src":"28882:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6086,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6091,"initialValue":{"arguments":[{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"28904:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6088,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6075,6109],"referencedDeclaration":6075,"src":"28899:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6092,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"28931:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6096,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"28973:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}],"id":6095,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"28956:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4797_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6099,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"28991:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"29000:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6093,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"28940:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"28940:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6085,"id":6106,"nodeType":"Return","src":"28924:82:19"}]}]},"documentation":{"id":6076,"nodeType":"StructuredDocumentation","src":"28621:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6109,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:19","nodeType":"FunctionDefinition","parameters":{"id":6082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6078,"mutability":"mutable","name":"value","nameLocation":"28790:5:19","nodeType":"VariableDeclaration","scope":6109,"src":"28782:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6077,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6081,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:19","nodeType":"VariableDeclaration","scope":6109,"src":"28797:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"},"typeName":{"id":6080,"nodeType":"UserDefinedTypeName","pathNode":{"id":6079,"name":"Rounding","nameLocations":["28797:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4797,"src":"28797:8:19"},"referencedDeclaration":4797,"src":"28797:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:19"},"returnParameters":{"id":6085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6109,"src":"28839:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6083,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:19"},"scope":6406,"src":"28768:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6237,"nodeType":"Block","src":"29216:854:19","statements":[{"assignments":[6118],"declarations":[{"constant":false,"id":6118,"mutability":"mutable","name":"result","nameLocation":"29234:6:19","nodeType":"VariableDeclaration","scope":6237,"src":"29226:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6117,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6120,"initialValue":{"hexValue":"30","id":6119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:19"},{"id":6234,"nodeType":"UncheckedBlock","src":"29254:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"29282:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6137,"nodeType":"IfStatement","src":"29278:103:19","trueBody":{"id":6136,"nodeType":"Block","src":"29301:80:19","statements":[{"expression":{"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"29319:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6131,"nodeType":"ExpressionStatement","src":"29319:17:19"},{"expression":{"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6132,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"29354:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6135,"nodeType":"ExpressionStatement","src":"29354:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"29398:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6154,"nodeType":"IfStatement","src":"29394:103:19","trueBody":{"id":6153,"nodeType":"Block","src":"29417:80:19","statements":[{"expression":{"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"29435:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6148,"nodeType":"ExpressionStatement","src":"29435:17:19"},{"expression":{"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"29470:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6152,"nodeType":"ExpressionStatement","src":"29470:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"29514:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6171,"nodeType":"IfStatement","src":"29510:103:19","trueBody":{"id":6170,"nodeType":"Block","src":"29533:80:19","statements":[{"expression":{"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"29551:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6165,"nodeType":"ExpressionStatement","src":"29551:17:19"},{"expression":{"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6166,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"29586:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6169,"nodeType":"ExpressionStatement","src":"29586:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"29630:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6188,"nodeType":"IfStatement","src":"29626:100:19","trueBody":{"id":6187,"nodeType":"Block","src":"29648:78:19","statements":[{"expression":{"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"29666:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6182,"nodeType":"ExpressionStatement","src":"29666:16:19"},{"expression":{"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"29700:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6186,"nodeType":"ExpressionStatement","src":"29700:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"29743:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6205,"nodeType":"IfStatement","src":"29739:100:19","trueBody":{"id":6204,"nodeType":"Block","src":"29761:78:19","statements":[{"expression":{"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"29779:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6199,"nodeType":"ExpressionStatement","src":"29779:16:19"},{"expression":{"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6200,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"29813:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6203,"nodeType":"ExpressionStatement","src":"29813:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"29856:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6222,"nodeType":"IfStatement","src":"29852:100:19","trueBody":{"id":6221,"nodeType":"Block","src":"29874:78:19","statements":[{"expression":{"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"29892:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6216,"nodeType":"ExpressionStatement","src":"29892:16:19"},{"expression":{"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"29926:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6220,"nodeType":"ExpressionStatement","src":"29926:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"29969:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6233,"nodeType":"IfStatement","src":"29965:66:19","trueBody":{"id":6232,"nodeType":"Block","src":"29987:44:19","statements":[{"expression":{"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"30005:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6231,"nodeType":"ExpressionStatement","src":"30005:11:19"}]}}]},{"expression":{"id":6235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"30057:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6116,"id":6236,"nodeType":"Return","src":"30050:13:19"}]},"documentation":{"id":6110,"nodeType":"StructuredDocumentation","src":"29029:120:19","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6238,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:19","nodeType":"FunctionDefinition","parameters":{"id":6113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6112,"mutability":"mutable","name":"value","nameLocation":"29177:5:19","nodeType":"VariableDeclaration","scope":6238,"src":"29169:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6111,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:19"},"returnParameters":{"id":6116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6238,"src":"29207:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6114,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:19"},"scope":6406,"src":"29154:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6271,"nodeType":"Block","src":"30305:177:19","statements":[{"id":6270,"nodeType":"UncheckedBlock","src":"30315:161:19","statements":[{"assignments":[6250],"declarations":[{"constant":false,"id":6250,"mutability":"mutable","name":"result","nameLocation":"30347:6:19","nodeType":"VariableDeclaration","scope":6270,"src":"30339:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6249,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6254,"initialValue":{"arguments":[{"id":6252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"30362:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6251,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6238,6272],"referencedDeclaration":6238,"src":"30356:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6255,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"30389:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6259,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6244,"src":"30431:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}],"id":6258,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"30414:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4797_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6262,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"30450:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"30459:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6256,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"30398:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"30398:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6248,"id":6269,"nodeType":"Return","src":"30382:83:19"}]}]},"documentation":{"id":6239,"nodeType":"StructuredDocumentation","src":"30076:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6272,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:19","nodeType":"FunctionDefinition","parameters":{"id":6245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6241,"mutability":"mutable","name":"value","nameLocation":"30247:5:19","nodeType":"VariableDeclaration","scope":6272,"src":"30239:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6240,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6244,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:19","nodeType":"VariableDeclaration","scope":6272,"src":"30254:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"},"typeName":{"id":6243,"nodeType":"UserDefinedTypeName","pathNode":{"id":6242,"name":"Rounding","nameLocations":["30254:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4797,"src":"30254:8:19"},"referencedDeclaration":4797,"src":"30254:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:19"},"returnParameters":{"id":6248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6272,"src":"30296:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6246,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:19"},"scope":6406,"src":"30224:258:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6348,"nodeType":"Block","src":"30800:675:19","statements":[{"expression":{"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6280,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"30882:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6283,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"30902:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6281,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"30886:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"30886:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6290,"nodeType":"ExpressionStatement","src":"30882:64:19"},{"expression":{"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6291,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"31022:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6294,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"31044:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6295,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"31049:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6297,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6292,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"31027:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"31027:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6304,"nodeType":"ExpressionStatement","src":"31022:56:19"},{"expression":{"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6305,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"31153:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6308,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"31175:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6309,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"31180:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6306,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"31158:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"31158:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6318,"nodeType":"ExpressionStatement","src":"31153:48:19"},{"expression":{"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6319,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"31276:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6322,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"31298:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6323,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"31303:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:19","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6320,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"31281:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"31281:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6332,"nodeType":"ExpressionStatement","src":"31276:44:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6333,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"31426:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":6334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6336,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6339,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"31453:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6340,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"31458:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6337,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"31436:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"31436:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6279,"id":6347,"nodeType":"Return","src":"31418:50:19"}]},"documentation":{"id":6273,"nodeType":"StructuredDocumentation","src":"30488:246:19","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6349,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:19","nodeType":"FunctionDefinition","parameters":{"id":6276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6275,"mutability":"mutable","name":"x","nameLocation":"30763:1:19","nodeType":"VariableDeclaration","scope":6349,"src":"30755:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6274,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:19"},"returnParameters":{"id":6279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6278,"mutability":"mutable","name":"r","nameLocation":"30797:1:19","nodeType":"VariableDeclaration","scope":6349,"src":"30789:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6277,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:19"},"scope":6406,"src":"30739:736:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6385,"nodeType":"Block","src":"31712:184:19","statements":[{"id":6384,"nodeType":"UncheckedBlock","src":"31722:168:19","statements":[{"assignments":[6361],"declarations":[{"constant":false,"id":6361,"mutability":"mutable","name":"result","nameLocation":"31754:6:19","nodeType":"VariableDeclaration","scope":6384,"src":"31746:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6360,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6365,"initialValue":{"arguments":[{"id":6363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"31770:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6362,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6349,6386],"referencedDeclaration":6349,"src":"31763:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6366,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"31797:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6370,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"31839:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}],"id":6369,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"31822:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4797_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6373,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"31858:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"31873:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6367,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"31806:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"31806:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6359,"id":6383,"nodeType":"Return","src":"31790:89:19"}]}]},"documentation":{"id":6350,"nodeType":"StructuredDocumentation","src":"31481:144:19","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6386,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:19","nodeType":"FunctionDefinition","parameters":{"id":6356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6352,"mutability":"mutable","name":"value","nameLocation":"31654:5:19","nodeType":"VariableDeclaration","scope":6386,"src":"31646:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6351,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6355,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:19","nodeType":"VariableDeclaration","scope":6386,"src":"31661:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"},"typeName":{"id":6354,"nodeType":"UserDefinedTypeName","pathNode":{"id":6353,"name":"Rounding","nameLocations":["31661:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4797,"src":"31661:8:19"},"referencedDeclaration":4797,"src":"31661:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:19"},"returnParameters":{"id":6359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6386,"src":"31703:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6357,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:19"},"scope":6406,"src":"31630:266:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6404,"nodeType":"Block","src":"32094:48:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6397,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"32117:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}],"id":6396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6395,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:19","typeDescriptions":{}}},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6394,"id":6403,"nodeType":"Return","src":"32104:31:19"}]},"documentation":{"id":6387,"nodeType":"StructuredDocumentation","src":"31902:113:19","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6405,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:19","nodeType":"FunctionDefinition","parameters":{"id":6391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6390,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:19","nodeType":"VariableDeclaration","scope":6405,"src":"32046:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"},"typeName":{"id":6389,"nodeType":"UserDefinedTypeName","pathNode":{"id":6388,"name":"Rounding","nameLocations":["32046:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4797,"src":"32046:8:19"},"referencedDeclaration":4797,"src":"32046:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4797","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:19"},"returnParameters":{"id":6394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6405,"src":"32088:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6392,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:19"},"scope":6406,"src":"32020:122:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6407,"src":"281:31863:19","usedErrors":[],"usedEvents":[]}],"src":"103:32042:19"},"id":19},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8171]},"id":8172,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6408,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6409,"nodeType":"StructuredDocumentation","src":"218:550:20","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8171,"linearizedBaseContracts":[8171],"name":"SafeCast","nameLocation":"777:8:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6410,"nodeType":"StructuredDocumentation","src":"792:68:20","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6416,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:20","nodeType":"ErrorDefinition","parameters":{"id":6415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6412,"mutability":"mutable","name":"bits","nameLocation":"908:4:20","nodeType":"VariableDeclaration","scope":6416,"src":"902:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6411,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6414,"mutability":"mutable","name":"value","nameLocation":"922:5:20","nodeType":"VariableDeclaration","scope":6416,"src":"914:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6413,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:20"},"src":"865:64:20"},{"documentation":{"id":6417,"nodeType":"StructuredDocumentation","src":"935:75:20","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6421,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:20","nodeType":"ErrorDefinition","parameters":{"id":6420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6419,"mutability":"mutable","name":"value","nameLocation":"1056:5:20","nodeType":"VariableDeclaration","scope":6421,"src":"1049:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6418,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:20"},"src":"1015:48:20"},{"documentation":{"id":6422,"nodeType":"StructuredDocumentation","src":"1069:67:20","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6428,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:20","nodeType":"ErrorDefinition","parameters":{"id":6427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6424,"mutability":"mutable","name":"bits","nameLocation":"1183:4:20","nodeType":"VariableDeclaration","scope":6428,"src":"1177:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6423,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6426,"mutability":"mutable","name":"value","nameLocation":"1196:5:20","nodeType":"VariableDeclaration","scope":6428,"src":"1189:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6425,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:20"},"src":"1141:62:20"},{"documentation":{"id":6429,"nodeType":"StructuredDocumentation","src":"1209:75:20","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6433,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:20","nodeType":"ErrorDefinition","parameters":{"id":6432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6431,"mutability":"mutable","name":"value","nameLocation":"1331:5:20","nodeType":"VariableDeclaration","scope":6433,"src":"1323:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6430,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:20"},"src":"1289:49:20"},{"body":{"id":6460,"nodeType":"Block","src":"1695:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"1709:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6443,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6442,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:20","memberName":"max","nodeType":"MemberAccess","src":"1717:17:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6454,"nodeType":"IfStatement","src":"1705:105:20","trueBody":{"id":6453,"nodeType":"Block","src":"1736:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"1793:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6448,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"1757:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6452,"nodeType":"RevertStatement","src":"1750:49:20"}]}},{"expression":{"arguments":[{"id":6457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"1834:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6455,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:20","typeDescriptions":{}}},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6440,"id":6459,"nodeType":"Return","src":"1819:21:20"}]},"documentation":{"id":6434,"nodeType":"StructuredDocumentation","src":"1344:280:20","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6461,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:20","nodeType":"FunctionDefinition","parameters":{"id":6437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6436,"mutability":"mutable","name":"value","nameLocation":"1656:5:20","nodeType":"VariableDeclaration","scope":6461,"src":"1648:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6435,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:20"},"returnParameters":{"id":6440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6461,"src":"1686:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6438,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:20"},"scope":8171,"src":"1629:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6488,"nodeType":"Block","src":"2204:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"2218:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6471,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6470,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:20","memberName":"max","nodeType":"MemberAccess","src":"2226:17:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6482,"nodeType":"IfStatement","src":"2214:105:20","trueBody":{"id":6481,"nodeType":"Block","src":"2245:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"2302:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6476,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"2266:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6480,"nodeType":"RevertStatement","src":"2259:49:20"}]}},{"expression":{"arguments":[{"id":6485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"2343:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6483,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:20","typeDescriptions":{}}},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6468,"id":6487,"nodeType":"Return","src":"2328:21:20"}]},"documentation":{"id":6462,"nodeType":"StructuredDocumentation","src":"1853:280:20","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6489,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:20","nodeType":"FunctionDefinition","parameters":{"id":6465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6464,"mutability":"mutable","name":"value","nameLocation":"2165:5:20","nodeType":"VariableDeclaration","scope":6489,"src":"2157:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6463,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:20"},"returnParameters":{"id":6468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6489,"src":"2195:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6466,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:20"},"scope":8171,"src":"2138:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6516,"nodeType":"Block","src":"2713:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"2727:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6499,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6498,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:20","memberName":"max","nodeType":"MemberAccess","src":"2735:17:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6510,"nodeType":"IfStatement","src":"2723:105:20","trueBody":{"id":6509,"nodeType":"Block","src":"2754:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"2811:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6504,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"2775:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6508,"nodeType":"RevertStatement","src":"2768:49:20"}]}},{"expression":{"arguments":[{"id":6513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"2852:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6511,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:20","typeDescriptions":{}}},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6496,"id":6515,"nodeType":"Return","src":"2837:21:20"}]},"documentation":{"id":6490,"nodeType":"StructuredDocumentation","src":"2362:280:20","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6517,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:20","nodeType":"FunctionDefinition","parameters":{"id":6493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6492,"mutability":"mutable","name":"value","nameLocation":"2674:5:20","nodeType":"VariableDeclaration","scope":6517,"src":"2666:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6491,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:20"},"returnParameters":{"id":6496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6517,"src":"2704:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6494,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:20"},"scope":8171,"src":"2647:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6544,"nodeType":"Block","src":"3222:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"3236:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6527,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6526,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:20","memberName":"max","nodeType":"MemberAccess","src":"3244:17:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6538,"nodeType":"IfStatement","src":"3232:105:20","trueBody":{"id":6537,"nodeType":"Block","src":"3263:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"3320:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6532,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"3284:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6536,"nodeType":"RevertStatement","src":"3277:49:20"}]}},{"expression":{"arguments":[{"id":6541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"3361:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6539,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:20","typeDescriptions":{}}},"id":6542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6524,"id":6543,"nodeType":"Return","src":"3346:21:20"}]},"documentation":{"id":6518,"nodeType":"StructuredDocumentation","src":"2871:280:20","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6545,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:20","nodeType":"FunctionDefinition","parameters":{"id":6521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6520,"mutability":"mutable","name":"value","nameLocation":"3183:5:20","nodeType":"VariableDeclaration","scope":6545,"src":"3175:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6519,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:20"},"returnParameters":{"id":6524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6545,"src":"3213:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6522,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:20"},"scope":8171,"src":"3156:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6572,"nodeType":"Block","src":"3731:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"3745:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6555,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6554,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:20","memberName":"max","nodeType":"MemberAccess","src":"3753:17:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6566,"nodeType":"IfStatement","src":"3741:105:20","trueBody":{"id":6565,"nodeType":"Block","src":"3772:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"3829:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6560,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"3793:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6564,"nodeType":"RevertStatement","src":"3786:49:20"}]}},{"expression":{"arguments":[{"id":6569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"3870:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6567,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:20","typeDescriptions":{}}},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6552,"id":6571,"nodeType":"Return","src":"3855:21:20"}]},"documentation":{"id":6546,"nodeType":"StructuredDocumentation","src":"3380:280:20","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6573,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:20","nodeType":"FunctionDefinition","parameters":{"id":6549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6548,"mutability":"mutable","name":"value","nameLocation":"3692:5:20","nodeType":"VariableDeclaration","scope":6573,"src":"3684:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6547,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:20"},"returnParameters":{"id":6552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6573,"src":"3722:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6550,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:20"},"scope":8171,"src":"3665:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6600,"nodeType":"Block","src":"4240:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"4254:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6583,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6582,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:20","memberName":"max","nodeType":"MemberAccess","src":"4262:17:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6594,"nodeType":"IfStatement","src":"4250:105:20","trueBody":{"id":6593,"nodeType":"Block","src":"4281:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"4338:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6588,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"4302:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6592,"nodeType":"RevertStatement","src":"4295:49:20"}]}},{"expression":{"arguments":[{"id":6597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"4379:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6595,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:20","typeDescriptions":{}}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6580,"id":6599,"nodeType":"Return","src":"4364:21:20"}]},"documentation":{"id":6574,"nodeType":"StructuredDocumentation","src":"3889:280:20","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6601,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:20","nodeType":"FunctionDefinition","parameters":{"id":6577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6576,"mutability":"mutable","name":"value","nameLocation":"4201:5:20","nodeType":"VariableDeclaration","scope":6601,"src":"4193:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6575,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:20"},"returnParameters":{"id":6580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6601,"src":"4231:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6578,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:20"},"scope":8171,"src":"4174:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6628,"nodeType":"Block","src":"4749:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"4763:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6611,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6610,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:20","memberName":"max","nodeType":"MemberAccess","src":"4771:17:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6622,"nodeType":"IfStatement","src":"4759:105:20","trueBody":{"id":6621,"nodeType":"Block","src":"4790:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"4847:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6616,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"4811:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6620,"nodeType":"RevertStatement","src":"4804:49:20"}]}},{"expression":{"arguments":[{"id":6625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"4888:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6623,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:20","typeDescriptions":{}}},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6608,"id":6627,"nodeType":"Return","src":"4873:21:20"}]},"documentation":{"id":6602,"nodeType":"StructuredDocumentation","src":"4398:280:20","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6629,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:20","nodeType":"FunctionDefinition","parameters":{"id":6605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6604,"mutability":"mutable","name":"value","nameLocation":"4710:5:20","nodeType":"VariableDeclaration","scope":6629,"src":"4702:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6603,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:20"},"returnParameters":{"id":6608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6629,"src":"4740:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6606,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:20"},"scope":8171,"src":"4683:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6656,"nodeType":"Block","src":"5258:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"5272:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6639,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6638,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:20","memberName":"max","nodeType":"MemberAccess","src":"5280:17:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6650,"nodeType":"IfStatement","src":"5268:105:20","trueBody":{"id":6649,"nodeType":"Block","src":"5299:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"5356:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6644,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"5320:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6648,"nodeType":"RevertStatement","src":"5313:49:20"}]}},{"expression":{"arguments":[{"id":6653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"5397:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6651,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:20","typeDescriptions":{}}},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6636,"id":6655,"nodeType":"Return","src":"5382:21:20"}]},"documentation":{"id":6630,"nodeType":"StructuredDocumentation","src":"4907:280:20","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6657,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:20","nodeType":"FunctionDefinition","parameters":{"id":6633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6632,"mutability":"mutable","name":"value","nameLocation":"5219:5:20","nodeType":"VariableDeclaration","scope":6657,"src":"5211:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6631,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:20"},"returnParameters":{"id":6636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6657,"src":"5249:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6634,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:20"},"scope":8171,"src":"5192:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6684,"nodeType":"Block","src":"5767:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"5781:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6667,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6666,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:20","memberName":"max","nodeType":"MemberAccess","src":"5789:17:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6678,"nodeType":"IfStatement","src":"5777:105:20","trueBody":{"id":6677,"nodeType":"Block","src":"5808:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"5865:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6672,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"5829:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6676,"nodeType":"RevertStatement","src":"5822:49:20"}]}},{"expression":{"arguments":[{"id":6681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"5906:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6679,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:20","typeDescriptions":{}}},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6664,"id":6683,"nodeType":"Return","src":"5891:21:20"}]},"documentation":{"id":6658,"nodeType":"StructuredDocumentation","src":"5416:280:20","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6685,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:20","nodeType":"FunctionDefinition","parameters":{"id":6661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6660,"mutability":"mutable","name":"value","nameLocation":"5728:5:20","nodeType":"VariableDeclaration","scope":6685,"src":"5720:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6659,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:20"},"returnParameters":{"id":6664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6685,"src":"5758:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6662,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:20"},"scope":8171,"src":"5701:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6712,"nodeType":"Block","src":"6276:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"6290:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6695,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6694,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:20","memberName":"max","nodeType":"MemberAccess","src":"6298:17:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6706,"nodeType":"IfStatement","src":"6286:105:20","trueBody":{"id":6705,"nodeType":"Block","src":"6317:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"6374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6700,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"6338:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6704,"nodeType":"RevertStatement","src":"6331:49:20"}]}},{"expression":{"arguments":[{"id":6709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"6415:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6707,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:20","typeDescriptions":{}}},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6692,"id":6711,"nodeType":"Return","src":"6400:21:20"}]},"documentation":{"id":6686,"nodeType":"StructuredDocumentation","src":"5925:280:20","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6713,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:20","nodeType":"FunctionDefinition","parameters":{"id":6689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6688,"mutability":"mutable","name":"value","nameLocation":"6237:5:20","nodeType":"VariableDeclaration","scope":6713,"src":"6229:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6687,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:20"},"returnParameters":{"id":6692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6713,"src":"6267:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6690,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:20"},"scope":8171,"src":"6210:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6740,"nodeType":"Block","src":"6785:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"6799:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6723,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6722,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:20","memberName":"max","nodeType":"MemberAccess","src":"6807:17:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6734,"nodeType":"IfStatement","src":"6795:105:20","trueBody":{"id":6733,"nodeType":"Block","src":"6826:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"6883:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6728,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"6847:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6732,"nodeType":"RevertStatement","src":"6840:49:20"}]}},{"expression":{"arguments":[{"id":6737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"6924:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6735,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:20","typeDescriptions":{}}},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6720,"id":6739,"nodeType":"Return","src":"6909:21:20"}]},"documentation":{"id":6714,"nodeType":"StructuredDocumentation","src":"6434:280:20","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6741,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:20","nodeType":"FunctionDefinition","parameters":{"id":6717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6716,"mutability":"mutable","name":"value","nameLocation":"6746:5:20","nodeType":"VariableDeclaration","scope":6741,"src":"6738:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6715,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:20"},"returnParameters":{"id":6720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6741,"src":"6776:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6718,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:20"},"scope":8171,"src":"6719:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6768,"nodeType":"Block","src":"7294:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"7308:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6751,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6750,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:20","memberName":"max","nodeType":"MemberAccess","src":"7316:17:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6762,"nodeType":"IfStatement","src":"7304:105:20","trueBody":{"id":6761,"nodeType":"Block","src":"7335:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"7392:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6756,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"7356:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6760,"nodeType":"RevertStatement","src":"7349:49:20"}]}},{"expression":{"arguments":[{"id":6765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"7433:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6763,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:20","typeDescriptions":{}}},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6748,"id":6767,"nodeType":"Return","src":"7418:21:20"}]},"documentation":{"id":6742,"nodeType":"StructuredDocumentation","src":"6943:280:20","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6769,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:20","nodeType":"FunctionDefinition","parameters":{"id":6745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6744,"mutability":"mutable","name":"value","nameLocation":"7255:5:20","nodeType":"VariableDeclaration","scope":6769,"src":"7247:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6743,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:20"},"returnParameters":{"id":6748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6769,"src":"7285:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6746,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:20"},"scope":8171,"src":"7228:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6796,"nodeType":"Block","src":"7803:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"7817:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6779,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6778,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:20","memberName":"max","nodeType":"MemberAccess","src":"7825:17:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6790,"nodeType":"IfStatement","src":"7813:105:20","trueBody":{"id":6789,"nodeType":"Block","src":"7844:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"7901:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6784,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"7865:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6788,"nodeType":"RevertStatement","src":"7858:49:20"}]}},{"expression":{"arguments":[{"id":6793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"7942:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6791,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:20","typeDescriptions":{}}},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6776,"id":6795,"nodeType":"Return","src":"7927:21:20"}]},"documentation":{"id":6770,"nodeType":"StructuredDocumentation","src":"7452:280:20","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6797,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:20","nodeType":"FunctionDefinition","parameters":{"id":6773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6772,"mutability":"mutable","name":"value","nameLocation":"7764:5:20","nodeType":"VariableDeclaration","scope":6797,"src":"7756:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6771,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:20"},"returnParameters":{"id":6776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6797,"src":"7794:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6774,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:20"},"scope":8171,"src":"7737:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6824,"nodeType":"Block","src":"8312:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"8326:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6807,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6806,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:20","memberName":"max","nodeType":"MemberAccess","src":"8334:17:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6818,"nodeType":"IfStatement","src":"8322:105:20","trueBody":{"id":6817,"nodeType":"Block","src":"8353:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"8410:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6812,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"8374:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6816,"nodeType":"RevertStatement","src":"8367:49:20"}]}},{"expression":{"arguments":[{"id":6821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"8451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6819,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:20","typeDescriptions":{}}},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6804,"id":6823,"nodeType":"Return","src":"8436:21:20"}]},"documentation":{"id":6798,"nodeType":"StructuredDocumentation","src":"7961:280:20","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6825,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:20","nodeType":"FunctionDefinition","parameters":{"id":6801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6800,"mutability":"mutable","name":"value","nameLocation":"8273:5:20","nodeType":"VariableDeclaration","scope":6825,"src":"8265:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6799,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:20"},"returnParameters":{"id":6804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6825,"src":"8303:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6802,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:20"},"scope":8171,"src":"8246:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6852,"nodeType":"Block","src":"8821:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"8835:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6835,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6834,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:20","memberName":"max","nodeType":"MemberAccess","src":"8843:17:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6846,"nodeType":"IfStatement","src":"8831:105:20","trueBody":{"id":6845,"nodeType":"Block","src":"8862:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"8919:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6840,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"8883:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6844,"nodeType":"RevertStatement","src":"8876:49:20"}]}},{"expression":{"arguments":[{"id":6849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"8960:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6847,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:20","typeDescriptions":{}}},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6832,"id":6851,"nodeType":"Return","src":"8945:21:20"}]},"documentation":{"id":6826,"nodeType":"StructuredDocumentation","src":"8470:280:20","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6853,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:20","nodeType":"FunctionDefinition","parameters":{"id":6829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6828,"mutability":"mutable","name":"value","nameLocation":"8782:5:20","nodeType":"VariableDeclaration","scope":6853,"src":"8774:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6827,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:20"},"returnParameters":{"id":6832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6853,"src":"8812:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6830,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:20"},"scope":8171,"src":"8755:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6880,"nodeType":"Block","src":"9330:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"9344:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6863,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6862,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:20","memberName":"max","nodeType":"MemberAccess","src":"9352:17:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6874,"nodeType":"IfStatement","src":"9340:105:20","trueBody":{"id":6873,"nodeType":"Block","src":"9371:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"9428:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6868,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"9392:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6872,"nodeType":"RevertStatement","src":"9385:49:20"}]}},{"expression":{"arguments":[{"id":6877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"9469:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6875,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:20","typeDescriptions":{}}},"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6860,"id":6879,"nodeType":"Return","src":"9454:21:20"}]},"documentation":{"id":6854,"nodeType":"StructuredDocumentation","src":"8979:280:20","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6881,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:20","nodeType":"FunctionDefinition","parameters":{"id":6857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6856,"mutability":"mutable","name":"value","nameLocation":"9291:5:20","nodeType":"VariableDeclaration","scope":6881,"src":"9283:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6855,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:20"},"returnParameters":{"id":6860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6881,"src":"9321:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6858,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:20"},"scope":8171,"src":"9264:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6908,"nodeType":"Block","src":"9839:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"9853:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6891,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6890,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:20","memberName":"max","nodeType":"MemberAccess","src":"9861:17:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6902,"nodeType":"IfStatement","src":"9849:105:20","trueBody":{"id":6901,"nodeType":"Block","src":"9880:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"9937:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6896,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"9901:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6900,"nodeType":"RevertStatement","src":"9894:49:20"}]}},{"expression":{"arguments":[{"id":6905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"9978:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6903,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:20","typeDescriptions":{}}},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6888,"id":6907,"nodeType":"Return","src":"9963:21:20"}]},"documentation":{"id":6882,"nodeType":"StructuredDocumentation","src":"9488:280:20","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6909,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:20","nodeType":"FunctionDefinition","parameters":{"id":6885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6884,"mutability":"mutable","name":"value","nameLocation":"9800:5:20","nodeType":"VariableDeclaration","scope":6909,"src":"9792:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6883,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:20"},"returnParameters":{"id":6888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6909,"src":"9830:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6886,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:20"},"scope":8171,"src":"9773:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6936,"nodeType":"Block","src":"10348:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"10362:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6919,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6918,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:20","memberName":"max","nodeType":"MemberAccess","src":"10370:17:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6930,"nodeType":"IfStatement","src":"10358:105:20","trueBody":{"id":6929,"nodeType":"Block","src":"10389:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"10446:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6924,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"10410:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6928,"nodeType":"RevertStatement","src":"10403:49:20"}]}},{"expression":{"arguments":[{"id":6933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"10487:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6931,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:20","typeDescriptions":{}}},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6916,"id":6935,"nodeType":"Return","src":"10472:21:20"}]},"documentation":{"id":6910,"nodeType":"StructuredDocumentation","src":"9997:280:20","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6937,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:20","nodeType":"FunctionDefinition","parameters":{"id":6913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6912,"mutability":"mutable","name":"value","nameLocation":"10309:5:20","nodeType":"VariableDeclaration","scope":6937,"src":"10301:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6911,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:20"},"returnParameters":{"id":6916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6937,"src":"10339:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6914,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:20"},"scope":8171,"src":"10282:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6964,"nodeType":"Block","src":"10857:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"10871:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6947,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6946,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:20","memberName":"max","nodeType":"MemberAccess","src":"10879:17:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6958,"nodeType":"IfStatement","src":"10867:105:20","trueBody":{"id":6957,"nodeType":"Block","src":"10898:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"10955:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6952,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"10919:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6956,"nodeType":"RevertStatement","src":"10912:49:20"}]}},{"expression":{"arguments":[{"id":6961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"10996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6959,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:20","typeDescriptions":{}}},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6944,"id":6963,"nodeType":"Return","src":"10981:21:20"}]},"documentation":{"id":6938,"nodeType":"StructuredDocumentation","src":"10506:280:20","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6965,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:20","nodeType":"FunctionDefinition","parameters":{"id":6941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6940,"mutability":"mutable","name":"value","nameLocation":"10818:5:20","nodeType":"VariableDeclaration","scope":6965,"src":"10810:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6939,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:20"},"returnParameters":{"id":6944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6965,"src":"10848:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6942,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:20"},"scope":8171,"src":"10791:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6992,"nodeType":"Block","src":"11360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"11374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6975,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6974,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:20","memberName":"max","nodeType":"MemberAccess","src":"11382:16:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6986,"nodeType":"IfStatement","src":"11370:103:20","trueBody":{"id":6985,"nodeType":"Block","src":"11400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"11456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6980,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"11421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6984,"nodeType":"RevertStatement","src":"11414:48:20"}]}},{"expression":{"arguments":[{"id":6989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"11496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6987,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:20","typeDescriptions":{}}},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6972,"id":6991,"nodeType":"Return","src":"11482:20:20"}]},"documentation":{"id":6966,"nodeType":"StructuredDocumentation","src":"11015:276:20","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6993,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:20","nodeType":"FunctionDefinition","parameters":{"id":6969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6968,"mutability":"mutable","name":"value","nameLocation":"11322:5:20","nodeType":"VariableDeclaration","scope":6993,"src":"11314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6967,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:20"},"returnParameters":{"id":6972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6993,"src":"11352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6970,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:20"},"scope":8171,"src":"11296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7020,"nodeType":"Block","src":"11860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"11874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7003,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":7002,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":7006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:20","memberName":"max","nodeType":"MemberAccess","src":"11882:16:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7014,"nodeType":"IfStatement","src":"11870:103:20","trueBody":{"id":7013,"nodeType":"Block","src":"11900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"11956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7008,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"11921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7012,"nodeType":"RevertStatement","src":"11914:48:20"}]}},{"expression":{"arguments":[{"id":7017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"11996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7015,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:20","typeDescriptions":{}}},"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":7000,"id":7019,"nodeType":"Return","src":"11982:20:20"}]},"documentation":{"id":6994,"nodeType":"StructuredDocumentation","src":"11515:276:20","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7021,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:20","nodeType":"FunctionDefinition","parameters":{"id":6997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6996,"mutability":"mutable","name":"value","nameLocation":"11822:5:20","nodeType":"VariableDeclaration","scope":7021,"src":"11814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6995,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:20"},"returnParameters":{"id":7000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7021,"src":"11852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6998,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:20"},"scope":8171,"src":"11796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7048,"nodeType":"Block","src":"12360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"12374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7031,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":7030,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":7034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:20","memberName":"max","nodeType":"MemberAccess","src":"12382:16:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7042,"nodeType":"IfStatement","src":"12370:103:20","trueBody":{"id":7041,"nodeType":"Block","src":"12400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"12456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7036,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"12421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7040,"nodeType":"RevertStatement","src":"12414:48:20"}]}},{"expression":{"arguments":[{"id":7045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"12496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7043,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:20","typeDescriptions":{}}},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":7028,"id":7047,"nodeType":"Return","src":"12482:20:20"}]},"documentation":{"id":7022,"nodeType":"StructuredDocumentation","src":"12015:276:20","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7049,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:20","nodeType":"FunctionDefinition","parameters":{"id":7025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7024,"mutability":"mutable","name":"value","nameLocation":"12322:5:20","nodeType":"VariableDeclaration","scope":7049,"src":"12314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7023,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:20"},"returnParameters":{"id":7028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7049,"src":"12352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7026,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:20"},"scope":8171,"src":"12296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7076,"nodeType":"Block","src":"12860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"12874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7059,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7058,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:20","memberName":"max","nodeType":"MemberAccess","src":"12882:16:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7070,"nodeType":"IfStatement","src":"12870:103:20","trueBody":{"id":7069,"nodeType":"Block","src":"12900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"12956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7064,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"12921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7068,"nodeType":"RevertStatement","src":"12914:48:20"}]}},{"expression":{"arguments":[{"id":7073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"12996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7071,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:20","typeDescriptions":{}}},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7056,"id":7075,"nodeType":"Return","src":"12982:20:20"}]},"documentation":{"id":7050,"nodeType":"StructuredDocumentation","src":"12515:276:20","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7077,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:20","nodeType":"FunctionDefinition","parameters":{"id":7053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7052,"mutability":"mutable","name":"value","nameLocation":"12822:5:20","nodeType":"VariableDeclaration","scope":7077,"src":"12814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7051,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:20"},"returnParameters":{"id":7056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7077,"src":"12852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7054,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:20"},"scope":8171,"src":"12796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7104,"nodeType":"Block","src":"13360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"13374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7087,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7086,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:20","memberName":"max","nodeType":"MemberAccess","src":"13382:16:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7098,"nodeType":"IfStatement","src":"13370:103:20","trueBody":{"id":7097,"nodeType":"Block","src":"13400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"13456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7092,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"13421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7096,"nodeType":"RevertStatement","src":"13414:48:20"}]}},{"expression":{"arguments":[{"id":7101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"13496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7099,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:20","typeDescriptions":{}}},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7084,"id":7103,"nodeType":"Return","src":"13482:20:20"}]},"documentation":{"id":7078,"nodeType":"StructuredDocumentation","src":"13015:276:20","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7105,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:20","nodeType":"FunctionDefinition","parameters":{"id":7081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7080,"mutability":"mutable","name":"value","nameLocation":"13322:5:20","nodeType":"VariableDeclaration","scope":7105,"src":"13314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7079,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:20"},"returnParameters":{"id":7084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7105,"src":"13352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7082,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:20"},"scope":8171,"src":"13296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7132,"nodeType":"Block","src":"13860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"13874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7115,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7114,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:20","memberName":"max","nodeType":"MemberAccess","src":"13882:16:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7126,"nodeType":"IfStatement","src":"13870:103:20","trueBody":{"id":7125,"nodeType":"Block","src":"13900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"13956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7120,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"13921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7124,"nodeType":"RevertStatement","src":"13914:48:20"}]}},{"expression":{"arguments":[{"id":7129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"13996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7127,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:20","typeDescriptions":{}}},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7112,"id":7131,"nodeType":"Return","src":"13982:20:20"}]},"documentation":{"id":7106,"nodeType":"StructuredDocumentation","src":"13515:276:20","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7133,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:20","nodeType":"FunctionDefinition","parameters":{"id":7109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7108,"mutability":"mutable","name":"value","nameLocation":"13822:5:20","nodeType":"VariableDeclaration","scope":7133,"src":"13814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7107,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:20"},"returnParameters":{"id":7112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7133,"src":"13852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7110,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:20"},"scope":8171,"src":"13796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7160,"nodeType":"Block","src":"14360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"14374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7143,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7142,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:20","memberName":"max","nodeType":"MemberAccess","src":"14382:16:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7154,"nodeType":"IfStatement","src":"14370:103:20","trueBody":{"id":7153,"nodeType":"Block","src":"14400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"14456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7148,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"14421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7152,"nodeType":"RevertStatement","src":"14414:48:20"}]}},{"expression":{"arguments":[{"id":7157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"14496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7155,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:20","typeDescriptions":{}}},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7140,"id":7159,"nodeType":"Return","src":"14482:20:20"}]},"documentation":{"id":7134,"nodeType":"StructuredDocumentation","src":"14015:276:20","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7161,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:20","nodeType":"FunctionDefinition","parameters":{"id":7137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7136,"mutability":"mutable","name":"value","nameLocation":"14322:5:20","nodeType":"VariableDeclaration","scope":7161,"src":"14314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7135,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:20"},"returnParameters":{"id":7140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7161,"src":"14352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7138,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:20"},"scope":8171,"src":"14296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7188,"nodeType":"Block","src":"14860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"14874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7171,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7170,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:20","memberName":"max","nodeType":"MemberAccess","src":"14882:16:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7182,"nodeType":"IfStatement","src":"14870:103:20","trueBody":{"id":7181,"nodeType":"Block","src":"14900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"14956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7176,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"14921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7180,"nodeType":"RevertStatement","src":"14914:48:20"}]}},{"expression":{"arguments":[{"id":7185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"14996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7183,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:20","typeDescriptions":{}}},"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7168,"id":7187,"nodeType":"Return","src":"14982:20:20"}]},"documentation":{"id":7162,"nodeType":"StructuredDocumentation","src":"14515:276:20","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7189,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:20","nodeType":"FunctionDefinition","parameters":{"id":7165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7164,"mutability":"mutable","name":"value","nameLocation":"14822:5:20","nodeType":"VariableDeclaration","scope":7189,"src":"14814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7163,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:20"},"returnParameters":{"id":7168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7189,"src":"14852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7166,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:20"},"scope":8171,"src":"14796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7216,"nodeType":"Block","src":"15360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"15374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7199,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7198,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:20","memberName":"max","nodeType":"MemberAccess","src":"15382:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7210,"nodeType":"IfStatement","src":"15370:103:20","trueBody":{"id":7209,"nodeType":"Block","src":"15400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"15456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7204,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"15421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7208,"nodeType":"RevertStatement","src":"15414:48:20"}]}},{"expression":{"arguments":[{"id":7213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"15496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7211,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:20","typeDescriptions":{}}},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7196,"id":7215,"nodeType":"Return","src":"15482:20:20"}]},"documentation":{"id":7190,"nodeType":"StructuredDocumentation","src":"15015:276:20","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7217,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:20","nodeType":"FunctionDefinition","parameters":{"id":7193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7192,"mutability":"mutable","name":"value","nameLocation":"15322:5:20","nodeType":"VariableDeclaration","scope":7217,"src":"15314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7191,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:20"},"returnParameters":{"id":7196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7217,"src":"15352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7194,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:20"},"scope":8171,"src":"15296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7244,"nodeType":"Block","src":"15860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"15874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7227,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7226,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:20","memberName":"max","nodeType":"MemberAccess","src":"15882:16:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7238,"nodeType":"IfStatement","src":"15870:103:20","trueBody":{"id":7237,"nodeType":"Block","src":"15900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"15956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7232,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"15921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7236,"nodeType":"RevertStatement","src":"15914:48:20"}]}},{"expression":{"arguments":[{"id":7241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"15996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7239,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:20","typeDescriptions":{}}},"id":7242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7224,"id":7243,"nodeType":"Return","src":"15982:20:20"}]},"documentation":{"id":7218,"nodeType":"StructuredDocumentation","src":"15515:276:20","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7245,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:20","nodeType":"FunctionDefinition","parameters":{"id":7221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7220,"mutability":"mutable","name":"value","nameLocation":"15822:5:20","nodeType":"VariableDeclaration","scope":7245,"src":"15814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7219,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:20"},"returnParameters":{"id":7224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7245,"src":"15852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7222,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:20"},"scope":8171,"src":"15796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7272,"nodeType":"Block","src":"16360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"16374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7255,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7254,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:20","memberName":"max","nodeType":"MemberAccess","src":"16382:16:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7266,"nodeType":"IfStatement","src":"16370:103:20","trueBody":{"id":7265,"nodeType":"Block","src":"16400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"16456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7260,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"16421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7264,"nodeType":"RevertStatement","src":"16414:48:20"}]}},{"expression":{"arguments":[{"id":7269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"16496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7267,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:20","typeDescriptions":{}}},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7252,"id":7271,"nodeType":"Return","src":"16482:20:20"}]},"documentation":{"id":7246,"nodeType":"StructuredDocumentation","src":"16015:276:20","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7273,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:20","nodeType":"FunctionDefinition","parameters":{"id":7249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7248,"mutability":"mutable","name":"value","nameLocation":"16322:5:20","nodeType":"VariableDeclaration","scope":7273,"src":"16314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7247,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:20"},"returnParameters":{"id":7252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7273,"src":"16352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7250,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:20"},"scope":8171,"src":"16296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7300,"nodeType":"Block","src":"16854:146:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"16868:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7283,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7282,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:20","memberName":"max","nodeType":"MemberAccess","src":"16876:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7294,"nodeType":"IfStatement","src":"16864:101:20","trueBody":{"id":7293,"nodeType":"Block","src":"16893:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"16948:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7288,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"16914:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7292,"nodeType":"RevertStatement","src":"16907:47:20"}]}},{"expression":{"arguments":[{"id":7297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"16987:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7295,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:20","typeDescriptions":{}}},"id":7298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7280,"id":7299,"nodeType":"Return","src":"16974:19:20"}]},"documentation":{"id":7274,"nodeType":"StructuredDocumentation","src":"16515:272:20","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7301,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:20","nodeType":"FunctionDefinition","parameters":{"id":7277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7276,"mutability":"mutable","name":"value","nameLocation":"16817:5:20","nodeType":"VariableDeclaration","scope":7301,"src":"16809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7275,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:20"},"returnParameters":{"id":7280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7301,"src":"16847:5:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7278,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:20"},"scope":8171,"src":"16792:208:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7323,"nodeType":"Block","src":"17236:128:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"17250:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7317,"nodeType":"IfStatement","src":"17246:81:20","trueBody":{"id":7316,"nodeType":"Block","src":"17261:66:20","statements":[{"errorCall":{"arguments":[{"id":7313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"17310:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7312,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"17282:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7315,"nodeType":"RevertStatement","src":"17275:41:20"}]}},{"expression":{"arguments":[{"id":7320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"17351:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7318,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:20","typeDescriptions":{}}},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7308,"id":7322,"nodeType":"Return","src":"17336:21:20"}]},"documentation":{"id":7302,"nodeType":"StructuredDocumentation","src":"17006:160:20","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7324,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:20","nodeType":"FunctionDefinition","parameters":{"id":7305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7304,"mutability":"mutable","name":"value","nameLocation":"17197:5:20","nodeType":"VariableDeclaration","scope":7324,"src":"17190:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7303,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:20"},"returnParameters":{"id":7308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7324,"src":"17227:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7306,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:20"},"scope":8171,"src":"17171:193:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7349,"nodeType":"Block","src":"17761:150:20","statements":[{"expression":{"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7332,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"17771:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7327,"src":"17791:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7333,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:20","typeDescriptions":{}}},"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7338,"nodeType":"ExpressionStatement","src":"17771:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"17811:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7327,"src":"17825:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7348,"nodeType":"IfStatement","src":"17807:98:20","trueBody":{"id":7347,"nodeType":"Block","src":"17832:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7327,"src":"17888:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7342,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"17853:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7346,"nodeType":"RevertStatement","src":"17846:48:20"}]}}]},"documentation":{"id":7325,"nodeType":"StructuredDocumentation","src":"17370:312:20","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7350,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:20","nodeType":"FunctionDefinition","parameters":{"id":7328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7327,"mutability":"mutable","name":"value","nameLocation":"17712:5:20","nodeType":"VariableDeclaration","scope":7350,"src":"17705:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7326,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:20"},"returnParameters":{"id":7331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7330,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:20","nodeType":"VariableDeclaration","scope":7350,"src":"17742:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7329,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:20"},"scope":8171,"src":"17687:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7375,"nodeType":"Block","src":"18308:150:20","statements":[{"expression":{"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7358,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"18318:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"18338:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7359,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:20","typeDescriptions":{}}},"id":7362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7364,"nodeType":"ExpressionStatement","src":"18318:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"18358:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"18372:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7374,"nodeType":"IfStatement","src":"18354:98:20","trueBody":{"id":7373,"nodeType":"Block","src":"18379:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"18435:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7368,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"18400:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7372,"nodeType":"RevertStatement","src":"18393:48:20"}]}}]},"documentation":{"id":7351,"nodeType":"StructuredDocumentation","src":"17917:312:20","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7376,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:20","nodeType":"FunctionDefinition","parameters":{"id":7354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7353,"mutability":"mutable","name":"value","nameLocation":"18259:5:20","nodeType":"VariableDeclaration","scope":7376,"src":"18252:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7352,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:20"},"returnParameters":{"id":7357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7356,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:20","nodeType":"VariableDeclaration","scope":7376,"src":"18289:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7355,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:20"},"scope":8171,"src":"18234:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7401,"nodeType":"Block","src":"18855:150:20","statements":[{"expression":{"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7384,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"18865:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"18885:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7385,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:20","typeDescriptions":{}}},"id":7388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7390,"nodeType":"ExpressionStatement","src":"18865:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"18905:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"18919:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7400,"nodeType":"IfStatement","src":"18901:98:20","trueBody":{"id":7399,"nodeType":"Block","src":"18926:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"18982:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7394,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"18947:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7398,"nodeType":"RevertStatement","src":"18940:48:20"}]}}]},"documentation":{"id":7377,"nodeType":"StructuredDocumentation","src":"18464:312:20","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7402,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:20","nodeType":"FunctionDefinition","parameters":{"id":7380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7379,"mutability":"mutable","name":"value","nameLocation":"18806:5:20","nodeType":"VariableDeclaration","scope":7402,"src":"18799:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7378,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:20"},"returnParameters":{"id":7383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7382,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:20","nodeType":"VariableDeclaration","scope":7402,"src":"18836:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7381,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:20"},"scope":8171,"src":"18781:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7427,"nodeType":"Block","src":"19402:150:20","statements":[{"expression":{"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7410,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"19412:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7405,"src":"19432:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7411,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:20","typeDescriptions":{}}},"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7416,"nodeType":"ExpressionStatement","src":"19412:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"19452:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7405,"src":"19466:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7426,"nodeType":"IfStatement","src":"19448:98:20","trueBody":{"id":7425,"nodeType":"Block","src":"19473:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7405,"src":"19529:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7420,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"19494:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7424,"nodeType":"RevertStatement","src":"19487:48:20"}]}}]},"documentation":{"id":7403,"nodeType":"StructuredDocumentation","src":"19011:312:20","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7428,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:20","nodeType":"FunctionDefinition","parameters":{"id":7406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7405,"mutability":"mutable","name":"value","nameLocation":"19353:5:20","nodeType":"VariableDeclaration","scope":7428,"src":"19346:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7404,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:20"},"returnParameters":{"id":7409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7408,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:20","nodeType":"VariableDeclaration","scope":7428,"src":"19383:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7407,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:20"},"scope":8171,"src":"19328:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7453,"nodeType":"Block","src":"19949:150:20","statements":[{"expression":{"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7436,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"19959:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7431,"src":"19979:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7437,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:20","typeDescriptions":{}}},"id":7440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7442,"nodeType":"ExpressionStatement","src":"19959:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"19999:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7431,"src":"20013:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7452,"nodeType":"IfStatement","src":"19995:98:20","trueBody":{"id":7451,"nodeType":"Block","src":"20020:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7431,"src":"20076:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7446,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"20041:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7450,"nodeType":"RevertStatement","src":"20034:48:20"}]}}]},"documentation":{"id":7429,"nodeType":"StructuredDocumentation","src":"19558:312:20","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7454,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:20","nodeType":"FunctionDefinition","parameters":{"id":7432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7431,"mutability":"mutable","name":"value","nameLocation":"19900:5:20","nodeType":"VariableDeclaration","scope":7454,"src":"19893:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7430,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:20"},"returnParameters":{"id":7435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7434,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:20","nodeType":"VariableDeclaration","scope":7454,"src":"19930:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7433,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:20"},"scope":8171,"src":"19875:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7479,"nodeType":"Block","src":"20496:150:20","statements":[{"expression":{"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7462,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"20506:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"20526:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7463,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:20","typeDescriptions":{}}},"id":7466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7468,"nodeType":"ExpressionStatement","src":"20506:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"20546:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"20560:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7478,"nodeType":"IfStatement","src":"20542:98:20","trueBody":{"id":7477,"nodeType":"Block","src":"20567:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"20623:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7472,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"20588:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7476,"nodeType":"RevertStatement","src":"20581:48:20"}]}}]},"documentation":{"id":7455,"nodeType":"StructuredDocumentation","src":"20105:312:20","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7480,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:20","nodeType":"FunctionDefinition","parameters":{"id":7458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7457,"mutability":"mutable","name":"value","nameLocation":"20447:5:20","nodeType":"VariableDeclaration","scope":7480,"src":"20440:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7456,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:20"},"returnParameters":{"id":7461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7460,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:20","nodeType":"VariableDeclaration","scope":7480,"src":"20477:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7459,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:20"},"scope":8171,"src":"20422:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7505,"nodeType":"Block","src":"21043:150:20","statements":[{"expression":{"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7488,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"21053:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7483,"src":"21073:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7489,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:20","typeDescriptions":{}}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7494,"nodeType":"ExpressionStatement","src":"21053:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"21093:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7483,"src":"21107:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7504,"nodeType":"IfStatement","src":"21089:98:20","trueBody":{"id":7503,"nodeType":"Block","src":"21114:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7483,"src":"21170:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7498,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"21135:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7502,"nodeType":"RevertStatement","src":"21128:48:20"}]}}]},"documentation":{"id":7481,"nodeType":"StructuredDocumentation","src":"20652:312:20","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7506,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:20","nodeType":"FunctionDefinition","parameters":{"id":7484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7483,"mutability":"mutable","name":"value","nameLocation":"20994:5:20","nodeType":"VariableDeclaration","scope":7506,"src":"20987:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7482,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:20"},"returnParameters":{"id":7487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7486,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:20","nodeType":"VariableDeclaration","scope":7506,"src":"21024:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7485,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:20"},"scope":8171,"src":"20969:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7531,"nodeType":"Block","src":"21590:150:20","statements":[{"expression":{"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7514,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"21600:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"21620:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7515,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:20","typeDescriptions":{}}},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7520,"nodeType":"ExpressionStatement","src":"21600:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"21640:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"21654:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7530,"nodeType":"IfStatement","src":"21636:98:20","trueBody":{"id":7529,"nodeType":"Block","src":"21661:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"21717:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7524,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"21682:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7528,"nodeType":"RevertStatement","src":"21675:48:20"}]}}]},"documentation":{"id":7507,"nodeType":"StructuredDocumentation","src":"21199:312:20","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7532,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:20","nodeType":"FunctionDefinition","parameters":{"id":7510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7509,"mutability":"mutable","name":"value","nameLocation":"21541:5:20","nodeType":"VariableDeclaration","scope":7532,"src":"21534:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7508,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:20"},"returnParameters":{"id":7513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7512,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:20","nodeType":"VariableDeclaration","scope":7532,"src":"21571:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7511,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:20"},"scope":8171,"src":"21516:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7557,"nodeType":"Block","src":"22137:150:20","statements":[{"expression":{"id":7545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7540,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"22147:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7535,"src":"22167:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7541,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:20","typeDescriptions":{}}},"id":7544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7546,"nodeType":"ExpressionStatement","src":"22147:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"22187:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7535,"src":"22201:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7556,"nodeType":"IfStatement","src":"22183:98:20","trueBody":{"id":7555,"nodeType":"Block","src":"22208:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7535,"src":"22264:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7550,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"22229:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7554,"nodeType":"RevertStatement","src":"22222:48:20"}]}}]},"documentation":{"id":7533,"nodeType":"StructuredDocumentation","src":"21746:312:20","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7558,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:20","nodeType":"FunctionDefinition","parameters":{"id":7536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7535,"mutability":"mutable","name":"value","nameLocation":"22088:5:20","nodeType":"VariableDeclaration","scope":7558,"src":"22081:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7534,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:20"},"returnParameters":{"id":7539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7538,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:20","nodeType":"VariableDeclaration","scope":7558,"src":"22118:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7537,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:20"},"scope":8171,"src":"22063:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7583,"nodeType":"Block","src":"22684:150:20","statements":[{"expression":{"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7566,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"22694:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"22714:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7567,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:20","typeDescriptions":{}}},"id":7570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7572,"nodeType":"ExpressionStatement","src":"22694:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"22734:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"22748:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7582,"nodeType":"IfStatement","src":"22730:98:20","trueBody":{"id":7581,"nodeType":"Block","src":"22755:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"22811:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7576,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"22776:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7580,"nodeType":"RevertStatement","src":"22769:48:20"}]}}]},"documentation":{"id":7559,"nodeType":"StructuredDocumentation","src":"22293:312:20","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7584,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:20","nodeType":"FunctionDefinition","parameters":{"id":7562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7561,"mutability":"mutable","name":"value","nameLocation":"22635:5:20","nodeType":"VariableDeclaration","scope":7584,"src":"22628:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7560,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:20"},"returnParameters":{"id":7565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7564,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:20","nodeType":"VariableDeclaration","scope":7584,"src":"22665:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7563,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:20"},"scope":8171,"src":"22610:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7609,"nodeType":"Block","src":"23231:150:20","statements":[{"expression":{"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7592,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"23241:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"23261:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7593,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:20","typeDescriptions":{}}},"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7598,"nodeType":"ExpressionStatement","src":"23241:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7599,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"23281:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"23295:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7608,"nodeType":"IfStatement","src":"23277:98:20","trueBody":{"id":7607,"nodeType":"Block","src":"23302:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"23358:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7602,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"23323:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7606,"nodeType":"RevertStatement","src":"23316:48:20"}]}}]},"documentation":{"id":7585,"nodeType":"StructuredDocumentation","src":"22840:312:20","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7610,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:20","nodeType":"FunctionDefinition","parameters":{"id":7588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7587,"mutability":"mutable","name":"value","nameLocation":"23182:5:20","nodeType":"VariableDeclaration","scope":7610,"src":"23175:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7586,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:20"},"returnParameters":{"id":7591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7590,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:20","nodeType":"VariableDeclaration","scope":7610,"src":"23212:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7589,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:20"},"scope":8171,"src":"23157:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7635,"nodeType":"Block","src":"23778:150:20","statements":[{"expression":{"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7618,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"23788:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"23808:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7619,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:20","typeDescriptions":{}}},"id":7622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7624,"nodeType":"ExpressionStatement","src":"23788:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7625,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"23828:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"23842:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7634,"nodeType":"IfStatement","src":"23824:98:20","trueBody":{"id":7633,"nodeType":"Block","src":"23849:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"23905:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7628,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"23870:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7632,"nodeType":"RevertStatement","src":"23863:48:20"}]}}]},"documentation":{"id":7611,"nodeType":"StructuredDocumentation","src":"23387:312:20","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7636,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:20","nodeType":"FunctionDefinition","parameters":{"id":7614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7613,"mutability":"mutable","name":"value","nameLocation":"23729:5:20","nodeType":"VariableDeclaration","scope":7636,"src":"23722:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7612,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:20"},"returnParameters":{"id":7617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7616,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:20","nodeType":"VariableDeclaration","scope":7636,"src":"23759:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7615,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:20"},"scope":8171,"src":"23704:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7661,"nodeType":"Block","src":"24325:150:20","statements":[{"expression":{"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7644,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"24335:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"24355:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7645,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:20","typeDescriptions":{}}},"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7650,"nodeType":"ExpressionStatement","src":"24335:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"24375:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"24389:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7660,"nodeType":"IfStatement","src":"24371:98:20","trueBody":{"id":7659,"nodeType":"Block","src":"24396:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"24452:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7654,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"24417:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7658,"nodeType":"RevertStatement","src":"24410:48:20"}]}}]},"documentation":{"id":7637,"nodeType":"StructuredDocumentation","src":"23934:312:20","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7662,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:20","nodeType":"FunctionDefinition","parameters":{"id":7640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7639,"mutability":"mutable","name":"value","nameLocation":"24276:5:20","nodeType":"VariableDeclaration","scope":7662,"src":"24269:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7638,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:20"},"returnParameters":{"id":7643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7642,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:20","nodeType":"VariableDeclaration","scope":7662,"src":"24306:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7641,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:20"},"scope":8171,"src":"24251:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7687,"nodeType":"Block","src":"24872:150:20","statements":[{"expression":{"id":7675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7670,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"24882:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"24902:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7671,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:20","typeDescriptions":{}}},"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7676,"nodeType":"ExpressionStatement","src":"24882:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7677,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"24922:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"24936:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7686,"nodeType":"IfStatement","src":"24918:98:20","trueBody":{"id":7685,"nodeType":"Block","src":"24943:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"24999:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7680,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"24964:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7684,"nodeType":"RevertStatement","src":"24957:48:20"}]}}]},"documentation":{"id":7663,"nodeType":"StructuredDocumentation","src":"24481:312:20","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7688,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:20","nodeType":"FunctionDefinition","parameters":{"id":7666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7665,"mutability":"mutable","name":"value","nameLocation":"24823:5:20","nodeType":"VariableDeclaration","scope":7688,"src":"24816:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7664,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:20"},"returnParameters":{"id":7669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7668,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:20","nodeType":"VariableDeclaration","scope":7688,"src":"24853:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7667,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:20"},"scope":8171,"src":"24798:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7713,"nodeType":"Block","src":"25419:150:20","statements":[{"expression":{"id":7701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7696,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"25429:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"25449:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7697,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:20","typeDescriptions":{}}},"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7702,"nodeType":"ExpressionStatement","src":"25429:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7703,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"25469:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"25483:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7712,"nodeType":"IfStatement","src":"25465:98:20","trueBody":{"id":7711,"nodeType":"Block","src":"25490:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"25546:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7706,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"25511:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7710,"nodeType":"RevertStatement","src":"25504:48:20"}]}}]},"documentation":{"id":7689,"nodeType":"StructuredDocumentation","src":"25028:312:20","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7714,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:20","nodeType":"FunctionDefinition","parameters":{"id":7692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7691,"mutability":"mutable","name":"value","nameLocation":"25370:5:20","nodeType":"VariableDeclaration","scope":7714,"src":"25363:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7690,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:20"},"returnParameters":{"id":7695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7694,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:20","nodeType":"VariableDeclaration","scope":7714,"src":"25400:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7693,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:20"},"scope":8171,"src":"25345:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7739,"nodeType":"Block","src":"25966:150:20","statements":[{"expression":{"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7722,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"25976:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"25996:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7723,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:20","typeDescriptions":{}}},"id":7726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7728,"nodeType":"ExpressionStatement","src":"25976:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"26016:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"26030:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7738,"nodeType":"IfStatement","src":"26012:98:20","trueBody":{"id":7737,"nodeType":"Block","src":"26037:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"26093:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7732,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"26058:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7736,"nodeType":"RevertStatement","src":"26051:48:20"}]}}]},"documentation":{"id":7715,"nodeType":"StructuredDocumentation","src":"25575:312:20","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7740,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:20","nodeType":"FunctionDefinition","parameters":{"id":7718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7717,"mutability":"mutable","name":"value","nameLocation":"25917:5:20","nodeType":"VariableDeclaration","scope":7740,"src":"25910:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7716,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:20"},"returnParameters":{"id":7721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7720,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:20","nodeType":"VariableDeclaration","scope":7740,"src":"25947:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7719,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:20"},"scope":8171,"src":"25892:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7765,"nodeType":"Block","src":"26513:150:20","statements":[{"expression":{"id":7753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7748,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"26523:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"26543:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7749,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:20","typeDescriptions":{}}},"id":7752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7754,"nodeType":"ExpressionStatement","src":"26523:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7755,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"26563:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"26577:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7764,"nodeType":"IfStatement","src":"26559:98:20","trueBody":{"id":7763,"nodeType":"Block","src":"26584:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"26640:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7758,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"26605:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7762,"nodeType":"RevertStatement","src":"26598:48:20"}]}}]},"documentation":{"id":7741,"nodeType":"StructuredDocumentation","src":"26122:312:20","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7766,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:20","nodeType":"FunctionDefinition","parameters":{"id":7744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7743,"mutability":"mutable","name":"value","nameLocation":"26464:5:20","nodeType":"VariableDeclaration","scope":7766,"src":"26457:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7742,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:20"},"returnParameters":{"id":7747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7746,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:20","nodeType":"VariableDeclaration","scope":7766,"src":"26494:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7745,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:20"},"scope":8171,"src":"26439:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7791,"nodeType":"Block","src":"27060:150:20","statements":[{"expression":{"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7774,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"27070:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"27090:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7775,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:20","typeDescriptions":{}}},"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7780,"nodeType":"ExpressionStatement","src":"27070:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7781,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"27110:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"27124:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7790,"nodeType":"IfStatement","src":"27106:98:20","trueBody":{"id":7789,"nodeType":"Block","src":"27131:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"27187:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7784,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"27152:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7788,"nodeType":"RevertStatement","src":"27145:48:20"}]}}]},"documentation":{"id":7767,"nodeType":"StructuredDocumentation","src":"26669:312:20","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7792,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:20","nodeType":"FunctionDefinition","parameters":{"id":7770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7769,"mutability":"mutable","name":"value","nameLocation":"27011:5:20","nodeType":"VariableDeclaration","scope":7792,"src":"27004:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7768,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:20"},"returnParameters":{"id":7773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7772,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:20","nodeType":"VariableDeclaration","scope":7792,"src":"27041:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7771,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:20"},"scope":8171,"src":"26986:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7817,"nodeType":"Block","src":"27607:150:20","statements":[{"expression":{"id":7805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7800,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7798,"src":"27617:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"27637:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7801,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:20","typeDescriptions":{}}},"id":7804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7806,"nodeType":"ExpressionStatement","src":"27617:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7807,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7798,"src":"27657:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"27671:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7816,"nodeType":"IfStatement","src":"27653:98:20","trueBody":{"id":7815,"nodeType":"Block","src":"27678:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"27734:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7810,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"27699:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7814,"nodeType":"RevertStatement","src":"27692:48:20"}]}}]},"documentation":{"id":7793,"nodeType":"StructuredDocumentation","src":"27216:312:20","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7818,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:20","nodeType":"FunctionDefinition","parameters":{"id":7796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7795,"mutability":"mutable","name":"value","nameLocation":"27558:5:20","nodeType":"VariableDeclaration","scope":7818,"src":"27551:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7794,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:20"},"returnParameters":{"id":7799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7798,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:20","nodeType":"VariableDeclaration","scope":7818,"src":"27588:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7797,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:20"},"scope":8171,"src":"27533:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7843,"nodeType":"Block","src":"28147:148:20","statements":[{"expression":{"id":7831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7826,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"28157:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"28176:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7827,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:20","typeDescriptions":{}}},"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7832,"nodeType":"ExpressionStatement","src":"28157:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"28196:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"28210:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7842,"nodeType":"IfStatement","src":"28192:97:20","trueBody":{"id":7841,"nodeType":"Block","src":"28217:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"28272:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7836,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"28238:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7840,"nodeType":"RevertStatement","src":"28231:47:20"}]}}]},"documentation":{"id":7819,"nodeType":"StructuredDocumentation","src":"27763:307:20","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7844,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:20","nodeType":"FunctionDefinition","parameters":{"id":7822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7821,"mutability":"mutable","name":"value","nameLocation":"28099:5:20","nodeType":"VariableDeclaration","scope":7844,"src":"28092:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7820,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:20"},"returnParameters":{"id":7825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7824,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:20","nodeType":"VariableDeclaration","scope":7844,"src":"28129:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7823,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:20"},"scope":8171,"src":"28075:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7869,"nodeType":"Block","src":"28685:148:20","statements":[{"expression":{"id":7857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7852,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"28695:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7847,"src":"28714:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7853,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:20","typeDescriptions":{}}},"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7858,"nodeType":"ExpressionStatement","src":"28695:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"28734:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7847,"src":"28748:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7868,"nodeType":"IfStatement","src":"28730:97:20","trueBody":{"id":7867,"nodeType":"Block","src":"28755:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7847,"src":"28810:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7862,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"28776:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7866,"nodeType":"RevertStatement","src":"28769:47:20"}]}}]},"documentation":{"id":7845,"nodeType":"StructuredDocumentation","src":"28301:307:20","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7870,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:20","nodeType":"FunctionDefinition","parameters":{"id":7848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7847,"mutability":"mutable","name":"value","nameLocation":"28637:5:20","nodeType":"VariableDeclaration","scope":7870,"src":"28630:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7846,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:20"},"returnParameters":{"id":7851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7850,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:20","nodeType":"VariableDeclaration","scope":7870,"src":"28667:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7849,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:20"},"scope":8171,"src":"28613:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7895,"nodeType":"Block","src":"29223:148:20","statements":[{"expression":{"id":7883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7878,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7876,"src":"29233:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7873,"src":"29252:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7879,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:20","typeDescriptions":{}}},"id":7882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7884,"nodeType":"ExpressionStatement","src":"29233:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7885,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7876,"src":"29272:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7873,"src":"29286:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7894,"nodeType":"IfStatement","src":"29268:97:20","trueBody":{"id":7893,"nodeType":"Block","src":"29293:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7873,"src":"29348:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7888,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"29314:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7892,"nodeType":"RevertStatement","src":"29307:47:20"}]}}]},"documentation":{"id":7871,"nodeType":"StructuredDocumentation","src":"28839:307:20","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7896,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:20","nodeType":"FunctionDefinition","parameters":{"id":7874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7873,"mutability":"mutable","name":"value","nameLocation":"29175:5:20","nodeType":"VariableDeclaration","scope":7896,"src":"29168:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7872,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:20"},"returnParameters":{"id":7877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7876,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:20","nodeType":"VariableDeclaration","scope":7896,"src":"29205:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7875,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:20"},"scope":8171,"src":"29151:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7921,"nodeType":"Block","src":"29761:148:20","statements":[{"expression":{"id":7909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7904,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7902,"src":"29771:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"29790:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7905,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:20","typeDescriptions":{}}},"id":7908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7910,"nodeType":"ExpressionStatement","src":"29771:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7911,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7902,"src":"29810:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"29824:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7920,"nodeType":"IfStatement","src":"29806:97:20","trueBody":{"id":7919,"nodeType":"Block","src":"29831:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"29886:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7914,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"29852:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7918,"nodeType":"RevertStatement","src":"29845:47:20"}]}}]},"documentation":{"id":7897,"nodeType":"StructuredDocumentation","src":"29377:307:20","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7922,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:20","nodeType":"FunctionDefinition","parameters":{"id":7900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7899,"mutability":"mutable","name":"value","nameLocation":"29713:5:20","nodeType":"VariableDeclaration","scope":7922,"src":"29706:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7898,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:20"},"returnParameters":{"id":7903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7902,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:20","nodeType":"VariableDeclaration","scope":7922,"src":"29743:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7901,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:20"},"scope":8171,"src":"29689:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7947,"nodeType":"Block","src":"30299:148:20","statements":[{"expression":{"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7930,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7928,"src":"30309:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7925,"src":"30328:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7931,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:20","typeDescriptions":{}}},"id":7934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7936,"nodeType":"ExpressionStatement","src":"30309:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7937,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7928,"src":"30348:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7925,"src":"30362:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7946,"nodeType":"IfStatement","src":"30344:97:20","trueBody":{"id":7945,"nodeType":"Block","src":"30369:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7925,"src":"30424:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7940,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"30390:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7944,"nodeType":"RevertStatement","src":"30383:47:20"}]}}]},"documentation":{"id":7923,"nodeType":"StructuredDocumentation","src":"29915:307:20","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7948,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:20","nodeType":"FunctionDefinition","parameters":{"id":7926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7925,"mutability":"mutable","name":"value","nameLocation":"30251:5:20","nodeType":"VariableDeclaration","scope":7948,"src":"30244:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7924,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:20"},"returnParameters":{"id":7929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7928,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:20","nodeType":"VariableDeclaration","scope":7948,"src":"30281:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7927,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:20"},"scope":8171,"src":"30227:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7973,"nodeType":"Block","src":"30837:148:20","statements":[{"expression":{"id":7961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7956,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"30847:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7951,"src":"30866:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7957,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:20","typeDescriptions":{}}},"id":7960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7962,"nodeType":"ExpressionStatement","src":"30847:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7963,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"30886:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7951,"src":"30900:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7972,"nodeType":"IfStatement","src":"30882:97:20","trueBody":{"id":7971,"nodeType":"Block","src":"30907:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7951,"src":"30962:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7966,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"30928:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7970,"nodeType":"RevertStatement","src":"30921:47:20"}]}}]},"documentation":{"id":7949,"nodeType":"StructuredDocumentation","src":"30453:307:20","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7974,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:20","nodeType":"FunctionDefinition","parameters":{"id":7952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7951,"mutability":"mutable","name":"value","nameLocation":"30789:5:20","nodeType":"VariableDeclaration","scope":7974,"src":"30782:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7950,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:20"},"returnParameters":{"id":7955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7954,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:20","nodeType":"VariableDeclaration","scope":7974,"src":"30819:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7953,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:20"},"scope":8171,"src":"30765:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7999,"nodeType":"Block","src":"31375:148:20","statements":[{"expression":{"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7982,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"31385:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7977,"src":"31404:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7983,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:20","typeDescriptions":{}}},"id":7986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7988,"nodeType":"ExpressionStatement","src":"31385:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7989,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"31424:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7977,"src":"31438:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7998,"nodeType":"IfStatement","src":"31420:97:20","trueBody":{"id":7997,"nodeType":"Block","src":"31445:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7977,"src":"31500:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7992,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"31466:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7996,"nodeType":"RevertStatement","src":"31459:47:20"}]}}]},"documentation":{"id":7975,"nodeType":"StructuredDocumentation","src":"30991:307:20","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8000,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:20","nodeType":"FunctionDefinition","parameters":{"id":7978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7977,"mutability":"mutable","name":"value","nameLocation":"31327:5:20","nodeType":"VariableDeclaration","scope":8000,"src":"31320:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7976,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:20"},"returnParameters":{"id":7981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7980,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:20","nodeType":"VariableDeclaration","scope":8000,"src":"31357:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7979,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:20"},"scope":8171,"src":"31303:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8025,"nodeType":"Block","src":"31913:148:20","statements":[{"expression":{"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8008,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8006,"src":"31923:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"31942:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":8009,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:20","typeDescriptions":{}}},"id":8012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":8014,"nodeType":"ExpressionStatement","src":"31923:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8015,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8006,"src":"31962:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"31976:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8024,"nodeType":"IfStatement","src":"31958:97:20","trueBody":{"id":8023,"nodeType":"Block","src":"31983:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"32038:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8018,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"32004:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8022,"nodeType":"RevertStatement","src":"31997:47:20"}]}}]},"documentation":{"id":8001,"nodeType":"StructuredDocumentation","src":"31529:307:20","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8026,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:20","nodeType":"FunctionDefinition","parameters":{"id":8004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8003,"mutability":"mutable","name":"value","nameLocation":"31865:5:20","nodeType":"VariableDeclaration","scope":8026,"src":"31858:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8002,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:20"},"returnParameters":{"id":8007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8006,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:20","nodeType":"VariableDeclaration","scope":8026,"src":"31895:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":8005,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:20"},"scope":8171,"src":"31841:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8051,"nodeType":"Block","src":"32451:148:20","statements":[{"expression":{"id":8039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8034,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8032,"src":"32461:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8029,"src":"32480:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":8035,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:20","typeDescriptions":{}}},"id":8038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":8040,"nodeType":"ExpressionStatement","src":"32461:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8041,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8032,"src":"32500:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8029,"src":"32514:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8050,"nodeType":"IfStatement","src":"32496:97:20","trueBody":{"id":8049,"nodeType":"Block","src":"32521:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8029,"src":"32576:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8044,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"32542:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8048,"nodeType":"RevertStatement","src":"32535:47:20"}]}}]},"documentation":{"id":8027,"nodeType":"StructuredDocumentation","src":"32067:307:20","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8052,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:20","nodeType":"FunctionDefinition","parameters":{"id":8030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8029,"mutability":"mutable","name":"value","nameLocation":"32403:5:20","nodeType":"VariableDeclaration","scope":8052,"src":"32396:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8028,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:20"},"returnParameters":{"id":8033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8032,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:20","nodeType":"VariableDeclaration","scope":8052,"src":"32433:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":8031,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:20"},"scope":8171,"src":"32379:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8077,"nodeType":"Block","src":"32989:148:20","statements":[{"expression":{"id":8065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8060,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8058,"src":"32999:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"33018:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8061,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:20","typeDescriptions":{}}},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8066,"nodeType":"ExpressionStatement","src":"32999:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8067,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8058,"src":"33038:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"33052:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8076,"nodeType":"IfStatement","src":"33034:97:20","trueBody":{"id":8075,"nodeType":"Block","src":"33059:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"33114:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8070,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"33080:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8074,"nodeType":"RevertStatement","src":"33073:47:20"}]}}]},"documentation":{"id":8053,"nodeType":"StructuredDocumentation","src":"32605:307:20","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8078,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:20","nodeType":"FunctionDefinition","parameters":{"id":8056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8055,"mutability":"mutable","name":"value","nameLocation":"32941:5:20","nodeType":"VariableDeclaration","scope":8078,"src":"32934:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8054,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:20"},"returnParameters":{"id":8059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8058,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:20","nodeType":"VariableDeclaration","scope":8078,"src":"32971:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8057,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:20"},"scope":8171,"src":"32917:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8103,"nodeType":"Block","src":"33527:148:20","statements":[{"expression":{"id":8091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8086,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8084,"src":"33537:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"33556:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8087,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:20","typeDescriptions":{}}},"id":8090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8092,"nodeType":"ExpressionStatement","src":"33537:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8093,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8084,"src":"33576:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"33590:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8102,"nodeType":"IfStatement","src":"33572:97:20","trueBody":{"id":8101,"nodeType":"Block","src":"33597:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"33652:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8096,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"33618:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8100,"nodeType":"RevertStatement","src":"33611:47:20"}]}}]},"documentation":{"id":8079,"nodeType":"StructuredDocumentation","src":"33143:307:20","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8104,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:20","nodeType":"FunctionDefinition","parameters":{"id":8082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8081,"mutability":"mutable","name":"value","nameLocation":"33479:5:20","nodeType":"VariableDeclaration","scope":8104,"src":"33472:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8080,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:20"},"returnParameters":{"id":8085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8084,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:20","nodeType":"VariableDeclaration","scope":8104,"src":"33509:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8083,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:20"},"scope":8171,"src":"33455:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8129,"nodeType":"Block","src":"34058:146:20","statements":[{"expression":{"id":8117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8112,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"34068:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8107,"src":"34086:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8113,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:20","typeDescriptions":{}}},"id":8116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8118,"nodeType":"ExpressionStatement","src":"34068:24:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8119,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"34106:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8107,"src":"34120:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8128,"nodeType":"IfStatement","src":"34102:96:20","trueBody":{"id":8127,"nodeType":"Block","src":"34127:71:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8107,"src":"34181:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8122,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"34148:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8126,"nodeType":"RevertStatement","src":"34141:46:20"}]}}]},"documentation":{"id":8105,"nodeType":"StructuredDocumentation","src":"33681:302:20","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8130,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:20","nodeType":"FunctionDefinition","parameters":{"id":8108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8107,"mutability":"mutable","name":"value","nameLocation":"34011:5:20","nodeType":"VariableDeclaration","scope":8130,"src":"34004:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8106,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:20"},"returnParameters":{"id":8111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8110,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:20","nodeType":"VariableDeclaration","scope":8130,"src":"34041:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8109,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:20"},"scope":8171,"src":"33988:216:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8159,"nodeType":"Block","src":"34444:250:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"34557:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8142,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8141,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:20","memberName":"max","nodeType":"MemberAccess","src":"34573:16:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8139,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:20","typeDescriptions":{}}},"id":8146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8153,"nodeType":"IfStatement","src":"34553:105:20","trueBody":{"id":8152,"nodeType":"Block","src":"34592:66:20","statements":[{"errorCall":{"arguments":[{"id":8149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"34641:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8148,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"34613:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":8150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8151,"nodeType":"RevertStatement","src":"34606:41:20"}]}},{"expression":{"arguments":[{"id":8156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"34681:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8154,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:20","typeDescriptions":{}}},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8137,"id":8158,"nodeType":"Return","src":"34667:20:20"}]},"documentation":{"id":8131,"nodeType":"StructuredDocumentation","src":"34210:165:20","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8160,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:20","nodeType":"FunctionDefinition","parameters":{"id":8134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8133,"mutability":"mutable","name":"value","nameLocation":"34406:5:20","nodeType":"VariableDeclaration","scope":8160,"src":"34398:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8132,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:20"},"returnParameters":{"id":8137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8160,"src":"34436:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8135,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:20"},"scope":8171,"src":"34380:314:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8169,"nodeType":"Block","src":"34853:87:20","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:20","statements":[{"nodeType":"YulAssignment","src":"34902:22:20","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:20"},"nodeType":"YulFunctionCall","src":"34914:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:20"},"nodeType":"YulFunctionCall","src":"34907:17:20"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8163,"isOffset":false,"isSlot":false,"src":"34921:1:20","valueSize":1},{"declaration":8166,"isOffset":false,"isSlot":false,"src":"34902:1:20","valueSize":1}],"flags":["memory-safe"],"id":8168,"nodeType":"InlineAssembly","src":"34863:71:20"}]},"documentation":{"id":8161,"nodeType":"StructuredDocumentation","src":"34700:90:20","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8170,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:20","nodeType":"FunctionDefinition","parameters":{"id":8164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8163,"mutability":"mutable","name":"b","nameLocation":"34816:1:20","nodeType":"VariableDeclaration","scope":8170,"src":"34811:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8162,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:20"},"returnParameters":{"id":8167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8166,"mutability":"mutable","name":"u","nameLocation":"34850:1:20","nodeType":"VariableDeclaration","scope":8170,"src":"34842:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8165,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:20"},"scope":8171,"src":"34795:145:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8172,"src":"769:34173:20","usedErrors":[6416,6421,6428,6433],"usedEvents":[]}],"src":"192:34751:20"},"id":20},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8171],"SignedMath":[8315]},"id":8316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8173,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8316,"sourceUnit":8172,"src":"135:40:21","symbolAliases":[{"foreign":{"id":8174,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"143:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8176,"nodeType":"StructuredDocumentation","src":"177:80:21","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8315,"linearizedBaseContracts":[8315],"name":"SignedMath","nameLocation":"266:10:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":8205,"nodeType":"Block","src":"746:215:21","statements":[{"id":8204,"nodeType":"UncheckedBlock","src":"756:199:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8188,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8183,"src":"894:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8189,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8181,"src":"900:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8190,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8183,"src":"904:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":8197,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8179,"src":"932:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8195,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"916:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8171_$","typeString":"type(library SafeCast)"}},"id":8196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"916:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8193,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:21","typeDescriptions":{}}},"id":8199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8187,"id":8203,"nodeType":"Return","src":"887:57:21"}]}]},"documentation":{"id":8177,"nodeType":"StructuredDocumentation","src":"283:374:21","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":8206,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:21","nodeType":"FunctionDefinition","parameters":{"id":8184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8179,"mutability":"mutable","name":"condition","nameLocation":"684:9:21","nodeType":"VariableDeclaration","scope":8206,"src":"679:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8178,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8181,"mutability":"mutable","name":"a","nameLocation":"702:1:21","nodeType":"VariableDeclaration","scope":8206,"src":"695:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8180,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8183,"mutability":"mutable","name":"b","nameLocation":"712:1:21","nodeType":"VariableDeclaration","scope":8206,"src":"705:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8182,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:21"},"returnParameters":{"id":8187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8206,"src":"738:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8185,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:21"},"scope":8315,"src":"662:299:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8224,"nodeType":"Block","src":"1102:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8217,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8209,"src":"1127:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8218,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"1131:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8220,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8209,"src":"1134:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8221,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"1137:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8216,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8206,"src":"1119:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8215,"id":8223,"nodeType":"Return","src":"1112:27:21"}]},"documentation":{"id":8207,"nodeType":"StructuredDocumentation","src":"967:66:21","text":" @dev Returns the largest of two signed numbers."},"id":8225,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:21","nodeType":"FunctionDefinition","parameters":{"id":8212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8209,"mutability":"mutable","name":"a","nameLocation":"1058:1:21","nodeType":"VariableDeclaration","scope":8225,"src":"1051:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8208,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8211,"mutability":"mutable","name":"b","nameLocation":"1068:1:21","nodeType":"VariableDeclaration","scope":8225,"src":"1061:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8210,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:21"},"returnParameters":{"id":8215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8225,"src":"1094:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8213,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:21"},"scope":8315,"src":"1038:108:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8243,"nodeType":"Block","src":"1288:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8236,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8228,"src":"1313:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8237,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"1317:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8239,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8228,"src":"1320:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8240,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"1323:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8235,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8206,"src":"1305:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8234,"id":8242,"nodeType":"Return","src":"1298:27:21"}]},"documentation":{"id":8226,"nodeType":"StructuredDocumentation","src":"1152:67:21","text":" @dev Returns the smallest of two signed numbers."},"id":8244,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:21","nodeType":"FunctionDefinition","parameters":{"id":8231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8228,"mutability":"mutable","name":"a","nameLocation":"1244:1:21","nodeType":"VariableDeclaration","scope":8244,"src":"1237:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8227,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8230,"mutability":"mutable","name":"b","nameLocation":"1254:1:21","nodeType":"VariableDeclaration","scope":8244,"src":"1247:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8229,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:21"},"returnParameters":{"id":8234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8244,"src":"1280:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8232,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:21"},"scope":8315,"src":"1224:108:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8287,"nodeType":"Block","src":"1537:162:21","statements":[{"assignments":[8255],"declarations":[{"constant":false,"id":8255,"mutability":"mutable","name":"x","nameLocation":"1606:1:21","nodeType":"VariableDeclaration","scope":8287,"src":"1599:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8254,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8268,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8247,"src":"1611:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8257,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"1615:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8260,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8247,"src":"1622:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8261,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"1626:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8263,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:21"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8269,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"1651:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8274,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"1671:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:21","typeDescriptions":{}}},"id":8275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8270,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:21","typeDescriptions":{}}},"id":8278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8247,"src":"1685:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8280,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"1689:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8253,"id":8286,"nodeType":"Return","src":"1644:48:21"}]},"documentation":{"id":8245,"nodeType":"StructuredDocumentation","src":"1338:126:21","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8288,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:21","nodeType":"FunctionDefinition","parameters":{"id":8250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8247,"mutability":"mutable","name":"a","nameLocation":"1493:1:21","nodeType":"VariableDeclaration","scope":8288,"src":"1486:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8246,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8249,"mutability":"mutable","name":"b","nameLocation":"1503:1:21","nodeType":"VariableDeclaration","scope":8288,"src":"1496:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8248,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:21"},"returnParameters":{"id":8253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8288,"src":"1529:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8251,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:21"},"scope":8315,"src":"1469:230:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8313,"nodeType":"Block","src":"1843:767:21","statements":[{"id":8312,"nodeType":"UncheckedBlock","src":"1853:751:21","statements":[{"assignments":[8297],"declarations":[{"constant":false,"id":8297,"mutability":"mutable","name":"mask","nameLocation":"2424:4:21","nodeType":"VariableDeclaration","scope":8312,"src":"2417:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8296,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8301,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8298,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8291,"src":"2431:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8304,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8291,"src":"2576:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8305,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"2580:4:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8307,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8308,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"2588:4:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8302,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:21","typeDescriptions":{}}},"id":8310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8295,"id":8311,"nodeType":"Return","src":"2560:33:21"}]}]},"documentation":{"id":8289,"nodeType":"StructuredDocumentation","src":"1705:78:21","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8314,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:21","nodeType":"FunctionDefinition","parameters":{"id":8292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8291,"mutability":"mutable","name":"n","nameLocation":"1808:1:21","nodeType":"VariableDeclaration","scope":8314,"src":"1801:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8290,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:21"},"returnParameters":{"id":8295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8314,"src":"1834:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8293,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:21"},"scope":8315,"src":"1788:822:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8316,"src":"258:2354:21","usedErrors":[],"usedEvents":[]}],"src":"109:2504:21"},"id":21},"contracts/AssetTokenizer.sol":{"ast":{"absolutePath":"contracts/AssetTokenizer.sol","exportedSymbols":{"AssetTokenizer":[8446],"Context":[1148],"Ownable":[147]},"id":8447,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8317,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:22"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8447,"sourceUnit":148,"src":"58:52:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8319,"name":"Ownable","nameLocations":["139:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"139:7:22"},"id":8320,"nodeType":"InheritanceSpecifier","src":"139:7:22"}],"canonicalName":"AssetTokenizer","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8446,"linearizedBaseContracts":[8446,147,1148],"name":"AssetTokenizer","nameLocation":"121:14:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8322,"mutability":"mutable","name":"_nextAssetId","nameLocation":"169:12:22","nodeType":"VariableDeclaration","scope":8446,"src":"153:28:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8321,"name":"uint256","nodeType":"ElementaryTypeName","src":"153:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"canonicalName":"AssetTokenizer.Asset","id":8335,"members":[{"constant":false,"id":8324,"mutability":"mutable","name":"uri","nameLocation":"218:3:22","nodeType":"VariableDeclaration","scope":8335,"src":"211:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8323,"name":"string","nodeType":"ElementaryTypeName","src":"211:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8326,"mutability":"mutable","name":"issuer","nameLocation":"239:6:22","nodeType":"VariableDeclaration","scope":8335,"src":"231:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8325,"name":"address","nodeType":"ElementaryTypeName","src":"231:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8328,"mutability":"mutable","name":"proofHash","nameLocation":"263:9:22","nodeType":"VariableDeclaration","scope":8335,"src":"255:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"255:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8330,"mutability":"mutable","name":"valuation","nameLocation":"290:9:22","nodeType":"VariableDeclaration","scope":8335,"src":"282:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8329,"name":"uint256","nodeType":"ElementaryTypeName","src":"282:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8332,"mutability":"mutable","name":"maturity","nameLocation":"317:8:22","nodeType":"VariableDeclaration","scope":8335,"src":"309:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8331,"name":"uint256","nodeType":"ElementaryTypeName","src":"309:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8334,"mutability":"mutable","name":"locked","nameLocation":"340:6:22","nodeType":"VariableDeclaration","scope":8335,"src":"335:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8333,"name":"bool","nodeType":"ElementaryTypeName","src":"335:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Asset","nameLocation":"195:5:22","nodeType":"StructDefinition","scope":8446,"src":"188:165:22","visibility":"public"},{"constant":false,"functionSelector":"cf35bdd0","id":8340,"mutability":"mutable","name":"assets","nameLocation":"392:6:22","nodeType":"VariableDeclaration","scope":8446,"src":"359:39:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$8335_storage_$","typeString":"mapping(uint256 => struct AssetTokenizer.Asset)"},"typeName":{"id":8339,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8336,"name":"uint256","nodeType":"ElementaryTypeName","src":"367:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"359:25:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$8335_storage_$","typeString":"mapping(uint256 => struct AssetTokenizer.Asset)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8338,"nodeType":"UserDefinedTypeName","pathNode":{"id":8337,"name":"Asset","nameLocations":["378:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":8335,"src":"378:5:22"},"referencedDeclaration":8335,"src":"378:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$8335_storage_ptr","typeString":"struct AssetTokenizer.Asset"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"a30dd43fc057b356acd774161b6c8743df78c9bd58d7f492dd56d00121dda6b5","id":8348,"name":"AssetMinted","nameLocation":"411:11:22","nodeType":"EventDefinition","parameters":{"id":8347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8342,"indexed":true,"mutability":"mutable","name":"assetId","nameLocation":"439:7:22","nodeType":"VariableDeclaration","scope":8348,"src":"423:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8341,"name":"uint256","nodeType":"ElementaryTypeName","src":"423:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8344,"indexed":true,"mutability":"mutable","name":"issuer","nameLocation":"464:6:22","nodeType":"VariableDeclaration","scope":8348,"src":"448:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8343,"name":"address","nodeType":"ElementaryTypeName","src":"448:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8346,"indexed":false,"mutability":"mutable","name":"uri","nameLocation":"479:3:22","nodeType":"VariableDeclaration","scope":8348,"src":"472:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8345,"name":"string","nodeType":"ElementaryTypeName","src":"472:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"422:61:22"},"src":"405:79:22"},{"body":{"id":8355,"nodeType":"Block","src":"524:2:22","statements":[]},"id":8356,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":8351,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"512:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"516:6:22","memberName":"sender","nodeType":"MemberAccess","src":"512:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8353,"kind":"baseConstructorSpecifier","modifierName":{"id":8350,"name":"Ownable","nameLocations":["504:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"504:7:22"},"nodeType":"ModifierInvocation","src":"504:19:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8349,"nodeType":"ParameterList","parameters":[],"src":"501:2:22"},"returnParameters":{"id":8354,"nodeType":"ParameterList","parameters":[],"src":"524:0:22"},"scope":8446,"src":"490:36:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8399,"nodeType":"Block","src":"725:344:22","statements":[{"assignments":[8374],"declarations":[{"constant":false,"id":8374,"mutability":"mutable","name":"assetId","nameLocation":"743:7:22","nodeType":"VariableDeclaration","scope":8399,"src":"735:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8373,"name":"uint256","nodeType":"ElementaryTypeName","src":"735:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8377,"initialValue":{"id":8376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"753:14:22","subExpression":{"id":8375,"name":"_nextAssetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8322,"src":"753:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"735:32:22"},{"expression":{"id":8389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8378,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"777:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$8335_storage_$","typeString":"mapping(uint256 => struct AssetTokenizer.Asset storage ref)"}},"id":8380,"indexExpression":{"id":8379,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8374,"src":"784:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"777:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$8335_storage","typeString":"struct AssetTokenizer.Asset storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8382,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8358,"src":"820:3:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8383,"name":"issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8360,"src":"845:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8384,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8362,"src":"876:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8385,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8364,"src":"910:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8386,"name":"maturity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"943:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":8387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"973:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8381,"name":"Asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"795:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Asset_$8335_storage_ptr_$","typeString":"type(struct AssetTokenizer.Asset storage pointer)"}},"id":8388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["815:3:22","837:6:22","865:9:22","899:9:22","933:8:22","965:6:22"],"names":["uri","issuer","proofHash","valuation","maturity","locked"],"nodeType":"FunctionCall","src":"795:194:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$8335_memory_ptr","typeString":"struct AssetTokenizer.Asset memory"}},"src":"777:212:22","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$8335_storage","typeString":"struct AssetTokenizer.Asset storage ref"}},"id":8390,"nodeType":"ExpressionStatement","src":"777:212:22"},{"eventCall":{"arguments":[{"id":8392,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8374,"src":"1017:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8393,"name":"issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8360,"src":"1026:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8394,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8358,"src":"1034:3:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8391,"name":"AssetMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8348,"src":"1005:11:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":8395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1005:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8396,"nodeType":"EmitStatement","src":"1000:38:22"},{"expression":{"id":8397,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8374,"src":"1055:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8372,"id":8398,"nodeType":"Return","src":"1048:14:22"}]},"functionSelector":"b473cd54","id":8400,"implemented":true,"kind":"function","modifiers":[{"id":8369,"kind":"modifierInvocation","modifierName":{"id":8368,"name":"onlyOwner","nameLocations":["697:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"697:9:22"},"nodeType":"ModifierInvocation","src":"697:9:22"}],"name":"mintAsset","nameLocation":"541:9:22","nodeType":"FunctionDefinition","parameters":{"id":8367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8358,"mutability":"mutable","name":"uri","nameLocation":"574:3:22","nodeType":"VariableDeclaration","scope":8400,"src":"560:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8357,"name":"string","nodeType":"ElementaryTypeName","src":"560:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8360,"mutability":"mutable","name":"issuer","nameLocation":"595:6:22","nodeType":"VariableDeclaration","scope":8400,"src":"587:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8359,"name":"address","nodeType":"ElementaryTypeName","src":"587:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8362,"mutability":"mutable","name":"proofHash","nameLocation":"619:9:22","nodeType":"VariableDeclaration","scope":8400,"src":"611:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"611:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8364,"mutability":"mutable","name":"valuation","nameLocation":"646:9:22","nodeType":"VariableDeclaration","scope":8400,"src":"638:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8363,"name":"uint256","nodeType":"ElementaryTypeName","src":"638:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8366,"mutability":"mutable","name":"maturity","nameLocation":"673:8:22","nodeType":"VariableDeclaration","scope":8400,"src":"665:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8365,"name":"uint256","nodeType":"ElementaryTypeName","src":"665:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"550:137:22"},"returnParameters":{"id":8372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8400,"src":"716:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8370,"name":"uint256","nodeType":"ElementaryTypeName","src":"716:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"715:9:22"},"scope":8446,"src":"532:537:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8431,"nodeType":"Block","src":"1143:144:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8408,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1161:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1165:6:22","memberName":"sender","nodeType":"MemberAccess","src":"1161:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":8410,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"1175:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$8335_storage_$","typeString":"mapping(uint256 => struct AssetTokenizer.Asset storage ref)"}},"id":8412,"indexExpression":{"id":8411,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8402,"src":"1182:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1175:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$8335_storage","typeString":"struct AssetTokenizer.Asset storage ref"}},"id":8413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1191:6:22","memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":8326,"src":"1175:22:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1161:36:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8415,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1201:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1205:6:22","memberName":"sender","nodeType":"MemberAccess","src":"1201:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8417,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1215:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1215:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1201:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1161:61:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":8421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1224:16:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":8407,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1153:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1153:88:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8423,"nodeType":"ExpressionStatement","src":"1153:88:22"},{"expression":{"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8424,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"1251:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$8335_storage_$","typeString":"mapping(uint256 => struct AssetTokenizer.Asset storage ref)"}},"id":8426,"indexExpression":{"id":8425,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8402,"src":"1258:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1251:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$8335_storage","typeString":"struct AssetTokenizer.Asset storage ref"}},"id":8427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1267:6:22","memberName":"locked","nodeType":"MemberAccess","referencedDeclaration":8334,"src":"1251:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1276:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1251:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8430,"nodeType":"ExpressionStatement","src":"1251:29:22"}]},"functionSelector":"bd2a58a2","id":8432,"implemented":true,"kind":"function","modifiers":[],"name":"lockAssetForVault","nameLocation":"1084:17:22","nodeType":"FunctionDefinition","parameters":{"id":8405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8402,"mutability":"mutable","name":"assetId","nameLocation":"1110:7:22","nodeType":"VariableDeclaration","scope":8432,"src":"1102:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8401,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8404,"mutability":"mutable","name":"vault","nameLocation":"1127:5:22","nodeType":"VariableDeclaration","scope":8432,"src":"1119:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8403,"name":"address","nodeType":"ElementaryTypeName","src":"1119:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:32:22"},"returnParameters":{"id":8406,"nodeType":"ParameterList","parameters":[],"src":"1143:0:22"},"scope":8446,"src":"1075:212:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8444,"nodeType":"Block","src":"1365:39:22","statements":[{"expression":{"baseExpression":{"id":8440,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"1382:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$8335_storage_$","typeString":"mapping(uint256 => struct AssetTokenizer.Asset storage ref)"}},"id":8442,"indexExpression":{"id":8441,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8434,"src":"1389:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1382:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$8335_storage","typeString":"struct AssetTokenizer.Asset storage ref"}},"functionReturnParameters":8439,"id":8443,"nodeType":"Return","src":"1375:22:22"}]},"functionSelector":"eac8f5b8","id":8445,"implemented":true,"kind":"function","modifiers":[],"name":"getAsset","nameLocation":"1302:8:22","nodeType":"FunctionDefinition","parameters":{"id":8435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8434,"mutability":"mutable","name":"assetId","nameLocation":"1319:7:22","nodeType":"VariableDeclaration","scope":8445,"src":"1311:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8433,"name":"uint256","nodeType":"ElementaryTypeName","src":"1311:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1310:17:22"},"returnParameters":{"id":8439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8445,"src":"1351:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$8335_memory_ptr","typeString":"struct AssetTokenizer.Asset"},"typeName":{"id":8437,"nodeType":"UserDefinedTypeName","pathNode":{"id":8436,"name":"Asset","nameLocations":["1351:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":8335,"src":"1351:5:22"},"referencedDeclaration":8335,"src":"1351:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$8335_storage_ptr","typeString":"struct AssetTokenizer.Asset"}},"visibility":"internal"}],"src":"1350:14:22"},"scope":8446,"src":"1293:111:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8447,"src":"112:1294:22","usedErrors":[13,18],"usedEvents":[24,8348]}],"src":"32:1374:22"},"id":22},"contracts/ComplianceModule.sol":{"ast":{"absolutePath":"contracts/ComplianceModule.sol","exportedSymbols":{"ComplianceModule":[8510],"Context":[1148],"Ownable":[147]},"id":8511,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8448,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:23"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8449,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8511,"sourceUnit":148,"src":"58:52:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8450,"name":"Ownable","nameLocations":["141:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"141:7:23"},"id":8451,"nodeType":"InheritanceSpecifier","src":"141:7:23"}],"canonicalName":"ComplianceModule","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8510,"linearizedBaseContracts":[8510,147,1148],"name":"ComplianceModule","nameLocation":"121:16:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"20357048","id":8455,"mutability":"mutable","name":"attestations","nameLocation":"188:12:23","nodeType":"VariableDeclaration","scope":8510,"src":"155:45:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes_storage_$","typeString":"mapping(address => bytes)"},"typeName":{"id":8454,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8452,"name":"address","nodeType":"ElementaryTypeName","src":"163:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"155:25:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes_storage_$","typeString":"mapping(address => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8453,"name":"bytes","nodeType":"ElementaryTypeName","src":"174:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"2f52c77c79b4d2ef9a6bb1b4c15fa01856ecd7474893c9b9a681c8428cba2797","id":8461,"name":"KYCAttested","nameLocation":"213:11:23","nodeType":"EventDefinition","parameters":{"id":8460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8457,"indexed":true,"mutability":"mutable","name":"wallet","nameLocation":"241:6:23","nodeType":"VariableDeclaration","scope":8461,"src":"225:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8456,"name":"address","nodeType":"ElementaryTypeName","src":"225:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8459,"indexed":false,"mutability":"mutable","name":"attestationHash","nameLocation":"257:15:23","nodeType":"VariableDeclaration","scope":8461,"src":"249:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"249:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"224:49:23"},"src":"207:67:23"},{"body":{"id":8468,"nodeType":"Block","src":"314:2:23","statements":[]},"id":8469,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":8464,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"302:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"306:6:23","memberName":"sender","nodeType":"MemberAccess","src":"302:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8466,"kind":"baseConstructorSpecifier","modifierName":{"id":8463,"name":"Ownable","nameLocations":["294:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"294:7:23"},"nodeType":"ModifierInvocation","src":"294:19:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8462,"nodeType":"ParameterList","parameters":[],"src":"291:2:23"},"returnParameters":{"id":8467,"nodeType":"ParameterList","parameters":[],"src":"314:0:23"},"scope":8510,"src":"280:36:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8491,"nodeType":"Block","src":"402:109:23","statements":[{"expression":{"id":8482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8478,"name":"attestations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"412:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes_storage_$","typeString":"mapping(address => bytes storage ref)"}},"id":8480,"indexExpression":{"id":8479,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8471,"src":"425:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"412:20:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8481,"name":"attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8473,"src":"435:11:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"412:34:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":8483,"nodeType":"ExpressionStatement","src":"412:34:23"},{"eventCall":{"arguments":[{"id":8485,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8471,"src":"473:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8487,"name":"attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8473,"src":"491:11:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8486,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"481:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"481:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8484,"name":"KYCAttested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8461,"src":"461:11:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":8489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"461:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8490,"nodeType":"EmitStatement","src":"456:48:23"}]},"functionSelector":"d4d03f10","id":8492,"implemented":true,"kind":"function","modifiers":[{"id":8476,"kind":"modifierInvocation","modifierName":{"id":8475,"name":"onlyOwner","nameLocations":["392:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"392:9:23"},"nodeType":"ModifierInvocation","src":"392:9:23"}],"name":"attestKYC","nameLocation":"331:9:23","nodeType":"FunctionDefinition","parameters":{"id":8474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8471,"mutability":"mutable","name":"wallet","nameLocation":"349:6:23","nodeType":"VariableDeclaration","scope":8492,"src":"341:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8470,"name":"address","nodeType":"ElementaryTypeName","src":"341:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8473,"mutability":"mutable","name":"attestation","nameLocation":"370:11:23","nodeType":"VariableDeclaration","scope":8492,"src":"357:24:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8472,"name":"bytes","nodeType":"ElementaryTypeName","src":"357:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"340:42:23"},"returnParameters":{"id":8477,"nodeType":"ParameterList","parameters":[],"src":"402:0:23"},"scope":8510,"src":"322:189:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8508,"nodeType":"Block","src":"615:108:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":8501,"name":"attestations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"685:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes_storage_$","typeString":"mapping(address => bytes storage ref)"}},"id":8503,"indexExpression":{"id":8502,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"698:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"685:20:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":8504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"706:6:23","memberName":"length","nodeType":"MemberAccess","src":"685:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"715:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"685:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8500,"id":8507,"nodeType":"Return","src":"678:38:23"}]},"functionSelector":"bad5b133","id":8509,"implemented":true,"kind":"function","modifiers":[],"name":"verifyAttestation","nameLocation":"526:17:23","nodeType":"FunctionDefinition","parameters":{"id":8497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8494,"mutability":"mutable","name":"wallet","nameLocation":"552:6:23","nodeType":"VariableDeclaration","scope":8509,"src":"544:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8493,"name":"address","nodeType":"ElementaryTypeName","src":"544:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8496,"mutability":"mutable","name":"attestation","nameLocation":"573:11:23","nodeType":"VariableDeclaration","scope":8509,"src":"560:24:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8495,"name":"bytes","nodeType":"ElementaryTypeName","src":"560:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"543:42:23"},"returnParameters":{"id":8500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8509,"src":"609:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8498,"name":"bool","nodeType":"ElementaryTypeName","src":"609:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"608:6:23"},"scope":8510,"src":"517:206:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8511,"src":"112:613:23","usedErrors":[13,18],"usedEvents":[24,8461]}],"src":"32:693:23"},"id":23},"contracts/MockERC20.sol":{"ast":{"absolutePath":"contracts/MockERC20.sol","exportedSymbols":{"Context":[1148],"ERC20":[824],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1082],"MockERC20":[8539]},"id":8540,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8512,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8513,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8540,"sourceUnit":825,"src":"58:55:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8514,"name":"ERC20","nameLocations":["137:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"137:5:24"},"id":8515,"nodeType":"InheritanceSpecifier","src":"137:5:24"}],"canonicalName":"MockERC20","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8539,"linearizedBaseContracts":[8539,824,214,1082,902,1148],"name":"MockERC20","nameLocation":"124:9:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":8537,"nodeType":"Block","src":"223:60:24","statements":[{"expression":{"arguments":[{"expression":{"id":8527,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"239:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"243:6:24","memberName":"sender","nodeType":"MemberAccess","src":"239:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030","id":8529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"251:7:24","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"261:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8531,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"265:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":8532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"265:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"261:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"251:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8526,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"233:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"233:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8536,"nodeType":"ExpressionStatement","src":"233:43:24"}]},"id":8538,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8522,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"209:4:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8523,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"215:6:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8524,"kind":"baseConstructorSpecifier","modifierName":{"id":8521,"name":"ERC20","nameLocations":["203:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"203:5:24"},"nodeType":"ModifierInvocation","src":"203:19:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8517,"mutability":"mutable","name":"name","nameLocation":"175:4:24","nodeType":"VariableDeclaration","scope":8538,"src":"161:18:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8516,"name":"string","nodeType":"ElementaryTypeName","src":"161:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8519,"mutability":"mutable","name":"symbol","nameLocation":"195:6:24","nodeType":"VariableDeclaration","scope":8538,"src":"181:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8518,"name":"string","nodeType":"ElementaryTypeName","src":"181:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"160:42:24"},"returnParameters":{"id":8525,"nodeType":"ParameterList","parameters":[],"src":"223:0:24"},"scope":8539,"src":"149:134:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":8540,"src":"115:170:24","usedErrors":[184,189,194,203,208,213],"usedEvents":[836,845]}],"src":"32:253:24"},"id":24},"contracts/ShareToken.sol":{"ast":{"absolutePath":"contracts/ShareToken.sol","exportedSymbols":{"ComplianceModule":[8510],"Context":[1148],"ECDSA":[3359],"EIP712":[3586],"ERC20":[824],"ERC20Permit":[1056],"IERC20Permit":[1118],"Nonces":[1216],"Ownable":[147],"ShareToken":[8636]},"id":8637,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8541,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:25"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":8542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8637,"sourceUnit":1057,"src":"58:72:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8637,"sourceUnit":148,"src":"131:52:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ComplianceModule.sol","file":"./ComplianceModule.sol","id":8544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8637,"sourceUnit":8511,"src":"184:32:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8545,"name":"ERC20Permit","nameLocations":["241:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"241:11:25"},"id":8546,"nodeType":"InheritanceSpecifier","src":"241:11:25"},{"baseName":{"id":8547,"name":"Ownable","nameLocations":["254:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"254:7:25"},"id":8548,"nodeType":"InheritanceSpecifier","src":"254:7:25"}],"canonicalName":"ShareToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8636,"linearizedBaseContracts":[8636,147,1056,1216,3586,172,1118,824,214,1082,902,1148],"name":"ShareToken","nameLocation":"227:10:25","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"6290865d","id":8551,"mutability":"mutable","name":"compliance","nameLocation":"292:10:25","nodeType":"VariableDeclaration","scope":8636,"src":"268:34:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"},"typeName":{"id":8550,"nodeType":"UserDefinedTypeName","pathNode":{"id":8549,"name":"ComplianceModule","nameLocations":["268:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":8510,"src":"268:16:25"},"referencedDeclaration":8510,"src":"268:16:25","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"}},"visibility":"public"},{"body":{"id":8576,"nodeType":"Block","src":"479:41:25","statements":[{"expression":{"id":8574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8572,"name":"compliance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8551,"src":"489:10:25","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8573,"name":"_compliance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8558,"src":"502:11:25","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"}},"src":"489:24:25","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"}},"id":8575,"nodeType":"ExpressionStatement","src":"489:24:25"}]},"id":8577,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8561,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8553,"src":"407:4:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8562,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"413:6:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8563,"kind":"baseConstructorSpecifier","modifierName":{"id":8560,"name":"ERC20","nameLocations":["401:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"401:5:25"},"nodeType":"ModifierInvocation","src":"401:19:25"},{"arguments":[{"id":8565,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8553,"src":"441:4:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8566,"kind":"baseConstructorSpecifier","modifierName":{"id":8564,"name":"ERC20Permit","nameLocations":["429:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"429:11:25"},"nodeType":"ModifierInvocation","src":"429:17:25"},{"arguments":[{"expression":{"id":8568,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"463:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"467:6:25","memberName":"sender","nodeType":"MemberAccess","src":"463:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8570,"kind":"baseConstructorSpecifier","modifierName":{"id":8567,"name":"Ownable","nameLocations":["455:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"455:7:25"},"nodeType":"ModifierInvocation","src":"455:19:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8553,"mutability":"mutable","name":"name","nameLocation":"335:4:25","nodeType":"VariableDeclaration","scope":8577,"src":"321:18:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8552,"name":"string","nodeType":"ElementaryTypeName","src":"321:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8555,"mutability":"mutable","name":"symbol","nameLocation":"355:6:25","nodeType":"VariableDeclaration","scope":8577,"src":"341:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8554,"name":"string","nodeType":"ElementaryTypeName","src":"341:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8558,"mutability":"mutable","name":"_compliance","nameLocation":"380:11:25","nodeType":"VariableDeclaration","scope":8577,"src":"363:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"},"typeName":{"id":8557,"nodeType":"UserDefinedTypeName","pathNode":{"id":8556,"name":"ComplianceModule","nameLocations":["363:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":8510,"src":"363:16:25"},"referencedDeclaration":8510,"src":"363:16:25","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"}},"visibility":"internal"}],"src":"320:72:25"},"returnParameters":{"id":8571,"nodeType":"ParameterList","parameters":[],"src":"479:0:25"},"scope":8636,"src":"309:211:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8591,"nodeType":"Block","src":"587:34:25","statements":[{"expression":{"arguments":[{"id":8587,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8579,"src":"603:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8588,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8581,"src":"607:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8586,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"597:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"597:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8590,"nodeType":"ExpressionStatement","src":"597:17:25"}]},"functionSelector":"40c10f19","id":8592,"implemented":true,"kind":"function","modifiers":[{"id":8584,"kind":"modifierInvocation","modifierName":{"id":8583,"name":"onlyOwner","nameLocations":["577:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"577:9:25"},"nodeType":"ModifierInvocation","src":"577:9:25"}],"name":"mint","nameLocation":"535:4:25","nodeType":"FunctionDefinition","parameters":{"id":8582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8579,"mutability":"mutable","name":"to","nameLocation":"548:2:25","nodeType":"VariableDeclaration","scope":8592,"src":"540:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8578,"name":"address","nodeType":"ElementaryTypeName","src":"540:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8581,"mutability":"mutable","name":"amount","nameLocation":"560:6:25","nodeType":"VariableDeclaration","scope":8592,"src":"552:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8580,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"539:28:25"},"returnParameters":{"id":8585,"nodeType":"ParameterList","parameters":[],"src":"587:0:25"},"scope":8636,"src":"526:95:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8634,"nodeType":"Block","src":"708:266:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8601,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"722:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"738:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"730:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8602,"name":"address","nodeType":"ElementaryTypeName","src":"730:7:25","typeDescriptions":{}}},"id":8605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"730:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"722:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8607,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8596,"src":"744:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"758:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"750:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8608,"name":"address","nodeType":"ElementaryTypeName","src":"750:7:25","typeDescriptions":{}}},"id":8611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"750:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"744:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"722:38:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8633,"nodeType":"IfStatement","src":"718:250:25","trueBody":{"id":8632,"nodeType":"Block","src":"762:206:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":8617,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"813:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"","id":8618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"819:2:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":8615,"name":"compliance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8551,"src":"784:10:25","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"}},"id":8616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"795:17:25","memberName":"verifyAttestation","nodeType":"MemberAccess","referencedDeclaration":8509,"src":"784:28:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes memory) view external returns (bool)"}},"id":8619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"784:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46726f6d206e6f7420636f6d706c69616e74","id":8620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"824:20:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d1929a2e2e39dcdff30866f990c131176049776928551d351ff3568e320b608","typeString":"literal_string \"From not compliant\""},"value":"From not compliant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4d1929a2e2e39dcdff30866f990c131176049776928551d351ff3568e320b608","typeString":"literal_string \"From not compliant\""}],"id":8614,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"776:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"776:69:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8622,"nodeType":"ExpressionStatement","src":"776:69:25"},{"expression":{"arguments":[{"arguments":[{"id":8626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8596,"src":"929:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"","id":8627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"933:2:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":8624,"name":"compliance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8551,"src":"900:10:25","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"}},"id":8625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"911:17:25","memberName":"verifyAttestation","nodeType":"MemberAccess","referencedDeclaration":8509,"src":"900:28:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes memory) view external returns (bool)"}},"id":8628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"900:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f206e6f7420636f6d706c69616e74","id":8629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"938:18:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d32f09aa2e13abff5c1790ef1a47f80df188ea134184e0bed55ebed3e621e5f","typeString":"literal_string \"To not compliant\""},"value":"To not compliant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d32f09aa2e13abff5c1790ef1a47f80df188ea134184e0bed55ebed3e621e5f","typeString":"literal_string \"To not compliant\""}],"id":8623,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"892:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"892:65:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8631,"nodeType":"ExpressionStatement","src":"892:65:25"}]}}]},"id":8635,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"636:20:25","nodeType":"FunctionDefinition","parameters":{"id":8599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8594,"mutability":"mutable","name":"from","nameLocation":"665:4:25","nodeType":"VariableDeclaration","scope":8635,"src":"657:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8593,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8596,"mutability":"mutable","name":"to","nameLocation":"679:2:25","nodeType":"VariableDeclaration","scope":8635,"src":"671:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8595,"name":"address","nodeType":"ElementaryTypeName","src":"671:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8598,"mutability":"mutable","name":"amount","nameLocation":"691:6:25","nodeType":"VariableDeclaration","scope":8635,"src":"683:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8597,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:42:25"},"returnParameters":{"id":8600,"nodeType":"ParameterList","parameters":[],"src":"708:0:25"},"scope":8636,"src":"627:347:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":8637,"src":"218:758:25","usedErrors":[13,18,184,189,194,203,208,213,933,940,1158,1282,1284,3022,3027,3032],"usedEvents":[24,152,836,845]}],"src":"32:944:25"},"id":25},"contracts/Vault.sol":{"ast":{"absolutePath":"contracts/Vault.sol","exportedSymbols":{"AssetTokenizer":[8446],"ComplianceModule":[8510],"Context":[1148],"ECDSA":[3359],"EIP712":[3586],"ERC20":[824],"ERC20Permit":[1056],"Hashes":[3626],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1082],"IERC20Permit":[1118],"MerkleProof":[4699],"Nonces":[1216],"Ownable":[147],"ShareToken":[8636],"VaultContract":[8891],"YieldDistributor":[9008],"ZKModule":[9056]},"id":8892,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8638,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:26"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8639,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8892,"sourceUnit":148,"src":"58:52:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AssetTokenizer.sol","file":"./AssetTokenizer.sol","id":8640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8892,"sourceUnit":8447,"src":"111:30:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ComplianceModule.sol","file":"./ComplianceModule.sol","id":8641,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8892,"sourceUnit":8511,"src":"142:32:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ZKModule.sol","file":"./ZKModule.sol","id":8642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8892,"sourceUnit":9057,"src":"175:24:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/YieldDistributor.sol","file":"./YieldDistributor.sol","id":8643,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8892,"sourceUnit":9009,"src":"200:32:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ShareToken.sol","file":"./ShareToken.sol","id":8644,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8892,"sourceUnit":8637,"src":"233:26:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8645,"name":"Ownable","nameLocations":["287:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"287:7:26"},"id":8646,"nodeType":"InheritanceSpecifier","src":"287:7:26"}],"canonicalName":"VaultContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8891,"linearizedBaseContracts":[8891,147,1148],"name":"VaultContract","nameLocation":"270:13:26","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"52d91f9c","id":8649,"mutability":"mutable","name":"assetTokenizer","nameLocation":"323:14:26","nodeType":"VariableDeclaration","scope":8891,"src":"301:36:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AssetTokenizer_$8446","typeString":"contract AssetTokenizer"},"typeName":{"id":8648,"nodeType":"UserDefinedTypeName","pathNode":{"id":8647,"name":"AssetTokenizer","nameLocations":["301:14:26"],"nodeType":"IdentifierPath","referencedDeclaration":8446,"src":"301:14:26"},"referencedDeclaration":8446,"src":"301:14:26","typeDescriptions":{"typeIdentifier":"t_contract$_AssetTokenizer_$8446","typeString":"contract AssetTokenizer"}},"visibility":"public"},{"constant":false,"functionSelector":"6c9fa59e","id":8652,"mutability":"mutable","name":"shareToken","nameLocation":"361:10:26","nodeType":"VariableDeclaration","scope":8891,"src":"343:28:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ShareToken_$8636","typeString":"contract ShareToken"},"typeName":{"id":8651,"nodeType":"UserDefinedTypeName","pathNode":{"id":8650,"name":"ShareToken","nameLocations":["343:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":8636,"src":"343:10:26"},"referencedDeclaration":8636,"src":"343:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_ShareToken_$8636","typeString":"contract ShareToken"}},"visibility":"public"},{"constant":false,"functionSelector":"6290865d","id":8655,"mutability":"mutable","name":"compliance","nameLocation":"401:10:26","nodeType":"VariableDeclaration","scope":8891,"src":"377:34:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"},"typeName":{"id":8654,"nodeType":"UserDefinedTypeName","pathNode":{"id":8653,"name":"ComplianceModule","nameLocations":["377:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":8510,"src":"377:16:26"},"referencedDeclaration":8510,"src":"377:16:26","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"}},"visibility":"public"},{"constant":false,"functionSelector":"a38c2c3d","id":8658,"mutability":"mutable","name":"yieldDistributor","nameLocation":"441:16:26","nodeType":"VariableDeclaration","scope":8891,"src":"417:40:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_YieldDistributor_$9008","typeString":"contract YieldDistributor"},"typeName":{"id":8657,"nodeType":"UserDefinedTypeName","pathNode":{"id":8656,"name":"YieldDistributor","nameLocations":["417:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":9008,"src":"417:16:26"},"referencedDeclaration":9008,"src":"417:16:26","typeDescriptions":{"typeIdentifier":"t_contract$_YieldDistributor_$9008","typeString":"contract YieldDistributor"}},"visibility":"public"},{"constant":false,"functionSelector":"8c7bc6d0","id":8661,"mutability":"mutable","name":"zkModule","nameLocation":"479:8:26","nodeType":"VariableDeclaration","scope":8891,"src":"463:24:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ZKModule_$9056","typeString":"contract ZKModule"},"typeName":{"id":8660,"nodeType":"UserDefinedTypeName","pathNode":{"id":8659,"name":"ZKModule","nameLocations":["463:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":9056,"src":"463:8:26"},"referencedDeclaration":9056,"src":"463:8:26","typeDescriptions":{"typeIdentifier":"t_contract$_ZKModule_$9056","typeString":"contract ZKModule"}},"visibility":"public"},{"constant":false,"functionSelector":"aa8d5705","id":8665,"mutability":"mutable","name":"depositedAssets","nameLocation":"526:15:26","nodeType":"VariableDeclaration","scope":8891,"src":"494:47:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":8664,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8662,"name":"uint256","nodeType":"ElementaryTypeName","src":"502:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"494:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8663,"name":"bool","nodeType":"ElementaryTypeName","src":"513:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"f3f43703","id":8669,"mutability":"mutable","name":"pendingWithdrawals","nameLocation":"582:18:26","nodeType":"VariableDeclaration","scope":8891,"src":"547:53:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8668,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8666,"name":"address","nodeType":"ElementaryTypeName","src":"555:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"547:27:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8667,"name":"uint256","nodeType":"ElementaryTypeName","src":"566:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c","id":8675,"name":"Deposit","nameLocation":"613:7:26","nodeType":"EventDefinition","parameters":{"id":8674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8671,"indexed":true,"mutability":"mutable","name":"depositor","nameLocation":"637:9:26","nodeType":"VariableDeclaration","scope":8675,"src":"621:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8670,"name":"address","nodeType":"ElementaryTypeName","src":"621:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8673,"indexed":false,"mutability":"mutable","name":"assetId","nameLocation":"656:7:26","nodeType":"VariableDeclaration","scope":8675,"src":"648:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8672,"name":"uint256","nodeType":"ElementaryTypeName","src":"648:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"620:44:26"},"src":"607:58:26"},{"anonymous":false,"eventSelector":"17040713250ec5f668a1c39e7939900e78558350dbaff0ebef34268dfa8ea4ac","id":8681,"name":"WithdrawRequest","nameLocation":"676:15:26","nodeType":"EventDefinition","parameters":{"id":8680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8677,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"708:4:26","nodeType":"VariableDeclaration","scope":8681,"src":"692:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8676,"name":"address","nodeType":"ElementaryTypeName","src":"692:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8679,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"722:6:26","nodeType":"VariableDeclaration","scope":8681,"src":"714:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8678,"name":"uint256","nodeType":"ElementaryTypeName","src":"714:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"691:38:26"},"src":"670:60:26"},{"anonymous":false,"eventSelector":"fbded071a5348837e0658949d85d74b38bb1402e96ac47b17144ae3185a520bd","id":8687,"name":"WithdrawFulfilled","nameLocation":"741:17:26","nodeType":"EventDefinition","parameters":{"id":8686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8683,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"775:4:26","nodeType":"VariableDeclaration","scope":8687,"src":"759:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8682,"name":"address","nodeType":"ElementaryTypeName","src":"759:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8685,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"789:6:26","nodeType":"VariableDeclaration","scope":8687,"src":"781:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8684,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"758:38:26"},"src":"735:62:26"},{"body":{"id":8729,"nodeType":"Block","src":"1023:193:26","statements":[{"expression":{"id":8711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8709,"name":"assetTokenizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8649,"src":"1033:14:26","typeDescriptions":{"typeIdentifier":"t_contract$_AssetTokenizer_$8446","typeString":"contract AssetTokenizer"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8710,"name":"_assetTokenizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"1050:15:26","typeDescriptions":{"typeIdentifier":"t_contract$_AssetTokenizer_$8446","typeString":"contract AssetTokenizer"}},"src":"1033:32:26","typeDescriptions":{"typeIdentifier":"t_contract$_AssetTokenizer_$8446","typeString":"contract AssetTokenizer"}},"id":8712,"nodeType":"ExpressionStatement","src":"1033:32:26"},{"expression":{"id":8715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8713,"name":"shareToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8652,"src":"1075:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_ShareToken_$8636","typeString":"contract ShareToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8714,"name":"_shareToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8693,"src":"1088:11:26","typeDescriptions":{"typeIdentifier":"t_contract$_ShareToken_$8636","typeString":"contract ShareToken"}},"src":"1075:24:26","typeDescriptions":{"typeIdentifier":"t_contract$_ShareToken_$8636","typeString":"contract ShareToken"}},"id":8716,"nodeType":"ExpressionStatement","src":"1075:24:26"},{"expression":{"id":8719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8717,"name":"compliance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8655,"src":"1109:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8718,"name":"_compliance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8696,"src":"1122:11:26","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"}},"src":"1109:24:26","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"}},"id":8720,"nodeType":"ExpressionStatement","src":"1109:24:26"},{"expression":{"id":8723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8721,"name":"yieldDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8658,"src":"1143:16:26","typeDescriptions":{"typeIdentifier":"t_contract$_YieldDistributor_$9008","typeString":"contract YieldDistributor"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8722,"name":"_yieldDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"1162:17:26","typeDescriptions":{"typeIdentifier":"t_contract$_YieldDistributor_$9008","typeString":"contract YieldDistributor"}},"src":"1143:36:26","typeDescriptions":{"typeIdentifier":"t_contract$_YieldDistributor_$9008","typeString":"contract YieldDistributor"}},"id":8724,"nodeType":"ExpressionStatement","src":"1143:36:26"},{"expression":{"id":8727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8725,"name":"zkModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8661,"src":"1189:8:26","typeDescriptions":{"typeIdentifier":"t_contract$_ZKModule_$9056","typeString":"contract ZKModule"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8726,"name":"_zkModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8702,"src":"1200:9:26","typeDescriptions":{"typeIdentifier":"t_contract$_ZKModule_$9056","typeString":"contract ZKModule"}},"src":"1189:20:26","typeDescriptions":{"typeIdentifier":"t_contract$_ZKModule_$9056","typeString":"contract ZKModule"}},"id":8728,"nodeType":"ExpressionStatement","src":"1189:20:26"}]},"id":8730,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":8705,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1011:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1015:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1011:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8707,"kind":"baseConstructorSpecifier","modifierName":{"id":8704,"name":"Ownable","nameLocations":["1003:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1003:7:26"},"nodeType":"ModifierInvocation","src":"1003:19:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8690,"mutability":"mutable","name":"_assetTokenizer","nameLocation":"839:15:26","nodeType":"VariableDeclaration","scope":8730,"src":"824:30:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AssetTokenizer_$8446","typeString":"contract AssetTokenizer"},"typeName":{"id":8689,"nodeType":"UserDefinedTypeName","pathNode":{"id":8688,"name":"AssetTokenizer","nameLocations":["824:14:26"],"nodeType":"IdentifierPath","referencedDeclaration":8446,"src":"824:14:26"},"referencedDeclaration":8446,"src":"824:14:26","typeDescriptions":{"typeIdentifier":"t_contract$_AssetTokenizer_$8446","typeString":"contract AssetTokenizer"}},"visibility":"internal"},{"constant":false,"id":8693,"mutability":"mutable","name":"_shareToken","nameLocation":"875:11:26","nodeType":"VariableDeclaration","scope":8730,"src":"864:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ShareToken_$8636","typeString":"contract ShareToken"},"typeName":{"id":8692,"nodeType":"UserDefinedTypeName","pathNode":{"id":8691,"name":"ShareToken","nameLocations":["864:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":8636,"src":"864:10:26"},"referencedDeclaration":8636,"src":"864:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_ShareToken_$8636","typeString":"contract ShareToken"}},"visibility":"internal"},{"constant":false,"id":8696,"mutability":"mutable","name":"_compliance","nameLocation":"913:11:26","nodeType":"VariableDeclaration","scope":8730,"src":"896:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"},"typeName":{"id":8695,"nodeType":"UserDefinedTypeName","pathNode":{"id":8694,"name":"ComplianceModule","nameLocations":["896:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":8510,"src":"896:16:26"},"referencedDeclaration":8510,"src":"896:16:26","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"}},"visibility":"internal"},{"constant":false,"id":8699,"mutability":"mutable","name":"_yieldDistributor","nameLocation":"951:17:26","nodeType":"VariableDeclaration","scope":8730,"src":"934:34:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_YieldDistributor_$9008","typeString":"contract YieldDistributor"},"typeName":{"id":8698,"nodeType":"UserDefinedTypeName","pathNode":{"id":8697,"name":"YieldDistributor","nameLocations":["934:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":9008,"src":"934:16:26"},"referencedDeclaration":9008,"src":"934:16:26","typeDescriptions":{"typeIdentifier":"t_contract$_YieldDistributor_$9008","typeString":"contract YieldDistributor"}},"visibility":"internal"},{"constant":false,"id":8702,"mutability":"mutable","name":"_zkModule","nameLocation":"987:9:26","nodeType":"VariableDeclaration","scope":8730,"src":"978:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ZKModule_$9056","typeString":"contract ZKModule"},"typeName":{"id":8701,"nodeType":"UserDefinedTypeName","pathNode":{"id":8700,"name":"ZKModule","nameLocations":["978:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":9056,"src":"978:8:26"},"referencedDeclaration":9056,"src":"978:8:26","typeDescriptions":{"typeIdentifier":"t_contract$_ZKModule_$9056","typeString":"contract ZKModule"}},"visibility":"internal"}],"src":"814:188:26"},"returnParameters":{"id":8708,"nodeType":"ParameterList","parameters":[],"src":"1023:0:26"},"scope":8891,"src":"803:413:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8798,"nodeType":"Block","src":"1270:587:26","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":8738,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1317:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1321:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1317:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"","id":8740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1329:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":8736,"name":"compliance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8655,"src":"1288:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_ComplianceModule_$8510","typeString":"contract ComplianceModule"}},"id":8737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1299:17:26","memberName":"verifyAttestation","nodeType":"MemberAccess","referencedDeclaration":8509,"src":"1288:28:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes memory) view external returns (bool)"}},"id":8741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1288:44:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420636f6d706c69616e74","id":8742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1334:15:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_bbb560f347d1c9050f16c9293282144e9b7319b314930adfa2ec3268995e3c4f","typeString":"literal_string \"Not compliant\""},"value":"Not compliant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bbb560f347d1c9050f16c9293282144e9b7319b314930adfa2ec3268995e3c4f","typeString":"literal_string \"Not compliant\""}],"id":8735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1280:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1280:70:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8744,"nodeType":"ExpressionStatement","src":"1280:70:26"},{"expression":{"arguments":[{"id":8749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1383:25:26","subExpression":{"baseExpression":{"id":8746,"name":"depositedAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8665,"src":"1384:15:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":8748,"indexExpression":{"id":8747,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8732,"src":"1400:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1384:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479206465706f7369746564","id":8750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1410:19:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_17419afcab1c167f08f938e3106ddedd944771ad063fce021c6a28601eb524bb","typeString":"literal_string \"Already deposited\""},"value":"Already deposited"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17419afcab1c167f08f938e3106ddedd944771ad063fce021c6a28601eb524bb","typeString":"literal_string \"Already deposited\""}],"id":8745,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1375:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8752,"nodeType":"ExpressionStatement","src":"1375:55:26"},{"expression":{"arguments":[{"id":8756,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8732,"src":"1508:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":8759,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1525:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_VaultContract_$8891","typeString":"contract VaultContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VaultContract_$8891","typeString":"contract VaultContract"}],"id":8758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1517:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8757,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:26","typeDescriptions":{}}},"id":8760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1517:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8753,"name":"assetTokenizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8649,"src":"1475:14:26","typeDescriptions":{"typeIdentifier":"t_contract$_AssetTokenizer_$8446","typeString":"contract AssetTokenizer"}},"id":8755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1490:17:26","memberName":"lockAssetForVault","nodeType":"MemberAccess","referencedDeclaration":8432,"src":"1475:32:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) external"}},"id":8761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1475:56:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8762,"nodeType":"ExpressionStatement","src":"1475:56:26"},{"expression":{"id":8767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8763,"name":"depositedAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8665,"src":"1541:15:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":8765,"indexExpression":{"id":8764,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8732,"src":"1557:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1541:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1568:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1541:31:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8768,"nodeType":"ExpressionStatement","src":"1541:31:26"},{"assignments":[8773],"declarations":[{"constant":false,"id":8773,"mutability":"mutable","name":"asset","nameLocation":"1652:5:26","nodeType":"VariableDeclaration","scope":8798,"src":"1624:33:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$8335_memory_ptr","typeString":"struct AssetTokenizer.Asset"},"typeName":{"id":8772,"nodeType":"UserDefinedTypeName","pathNode":{"id":8771,"name":"AssetTokenizer.Asset","nameLocations":["1624:14:26","1639:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":8335,"src":"1624:20:26"},"referencedDeclaration":8335,"src":"1624:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$8335_storage_ptr","typeString":"struct AssetTokenizer.Asset"}},"visibility":"internal"}],"id":8778,"initialValue":{"arguments":[{"id":8776,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8732,"src":"1684:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8774,"name":"assetTokenizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8649,"src":"1660:14:26","typeDescriptions":{"typeIdentifier":"t_contract$_AssetTokenizer_$8446","typeString":"contract AssetTokenizer"}},"id":8775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1675:8:26","memberName":"getAsset","nodeType":"MemberAccess","referencedDeclaration":8445,"src":"1660:23:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Asset_$8335_memory_ptr_$","typeString":"function (uint256) view external returns (struct AssetTokenizer.Asset memory)"}},"id":8777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1660:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$8335_memory_ptr","typeString":"struct AssetTokenizer.Asset memory"}},"nodeType":"VariableDeclarationStatement","src":"1624:68:26"},{"assignments":[8780],"declarations":[{"constant":false,"id":8780,"mutability":"mutable","name":"valuation","nameLocation":"1710:9:26","nodeType":"VariableDeclaration","scope":8798,"src":"1702:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8779,"name":"uint256","nodeType":"ElementaryTypeName","src":"1702:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8783,"initialValue":{"expression":{"id":8781,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8773,"src":"1722:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$8335_memory_ptr","typeString":"struct AssetTokenizer.Asset memory"}},"id":8782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1728:9:26","memberName":"valuation","nodeType":"MemberAccess","referencedDeclaration":8330,"src":"1722:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1702:35:26"},{"expression":{"arguments":[{"expression":{"id":8787,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1763:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1767:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1763:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8789,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8780,"src":"1775:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8784,"name":"shareToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8652,"src":"1747:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_ShareToken_$8636","typeString":"contract ShareToken"}},"id":8786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1758:4:26","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":8592,"src":"1747:15:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":8790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1747:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8791,"nodeType":"ExpressionStatement","src":"1747:38:26"},{"eventCall":{"arguments":[{"expression":{"id":8793,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1830:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1834:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1830:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8795,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8732,"src":"1842:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8792,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8675,"src":"1822:7:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1822:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8797,"nodeType":"EmitStatement","src":"1817:33:26"}]},"functionSelector":"fa2df414","id":8799,"implemented":true,"kind":"function","modifiers":[],"name":"depositAsset","nameLocation":"1231:12:26","nodeType":"FunctionDefinition","parameters":{"id":8733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8732,"mutability":"mutable","name":"assetId","nameLocation":"1252:7:26","nodeType":"VariableDeclaration","scope":8799,"src":"1244:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1244:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1243:17:26"},"returnParameters":{"id":8734,"nodeType":"ParameterList","parameters":[],"src":"1270:0:26"},"scope":8891,"src":"1222:635:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8840,"nodeType":"Block","src":"1915:259:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":8807,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1954:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1958:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1954:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8805,"name":"shareToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8652,"src":"1933:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_ShareToken_$8636","typeString":"contract ShareToken"}},"id":8806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1944:9:26","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":410,"src":"1933:20:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8810,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8801,"src":"1969:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1933:42:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420736861726573","id":8812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1977:21:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665","typeString":"literal_string \"Insufficient shares\""},"value":"Insufficient shares"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665","typeString":"literal_string \"Insufficient shares\""}],"id":8804,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1925:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1925:74:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8814,"nodeType":"ExpressionStatement","src":"1925:74:26"},{"expression":{"arguments":[{"expression":{"id":8818,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2033:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2037:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2033:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8822,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2053:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_VaultContract_$8891","typeString":"contract VaultContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VaultContract_$8891","typeString":"contract VaultContract"}],"id":8821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2045:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8820,"name":"address","nodeType":"ElementaryTypeName","src":"2045:7:26","typeDescriptions":{}}},"id":8823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2045:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8824,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8801,"src":"2060:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8815,"name":"shareToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8652,"src":"2009:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_ShareToken_$8636","typeString":"contract ShareToken"}},"id":8817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2020:12:26","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":507,"src":"2009:23:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":8825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2009:58:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8826,"nodeType":"ExpressionStatement","src":"2009:58:26"},{"expression":{"id":8832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8827,"name":"pendingWithdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8669,"src":"2077:18:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8830,"indexExpression":{"expression":{"id":8828,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2096:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2100:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2096:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2077:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8831,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8801,"src":"2111:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2077:40:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8833,"nodeType":"ExpressionStatement","src":"2077:40:26"},{"eventCall":{"arguments":[{"expression":{"id":8835,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2148:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2152:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2148:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8837,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8801,"src":"2160:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8834,"name":"WithdrawRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"2132:15:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2132:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8839,"nodeType":"EmitStatement","src":"2127:40:26"}]},"functionSelector":"9ee679e8","id":8841,"implemented":true,"kind":"function","modifiers":[],"name":"requestWithdrawal","nameLocation":"1872:17:26","nodeType":"FunctionDefinition","parameters":{"id":8802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8801,"mutability":"mutable","name":"shares","nameLocation":"1898:6:26","nodeType":"VariableDeclaration","scope":8841,"src":"1890:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8800,"name":"uint256","nodeType":"ElementaryTypeName","src":"1890:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1889:16:26"},"returnParameters":{"id":8803,"nodeType":"ParameterList","parameters":[],"src":"1915:0:26"},"scope":8891,"src":"1863:311:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8889,"nodeType":"Block","src":"2253:368:26","statements":[{"assignments":[8849,8851],"declarations":[{"constant":false,"id":8849,"mutability":"mutable","name":"user","nameLocation":"2334:4:26","nodeType":"VariableDeclaration","scope":8889,"src":"2326:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8848,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8851,"mutability":"mutable","name":"shares","nameLocation":"2348:6:26","nodeType":"VariableDeclaration","scope":8889,"src":"2340:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8850,"name":"uint256","nodeType":"ElementaryTypeName","src":"2340:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8861,"initialValue":{"arguments":[{"id":8854,"name":"signedReceipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8843,"src":"2369:13:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":8856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2385:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8855,"name":"address","nodeType":"ElementaryTypeName","src":"2385:7:26","typeDescriptions":{}}},{"id":8858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2394:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8857,"name":"uint256","nodeType":"ElementaryTypeName","src":"2394:7:26","typeDescriptions":{}}}],"id":8859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2384:18:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(address),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(address),type(uint256))"}],"expression":{"id":8852,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2358:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2362:6:26","memberName":"decode","nodeType":"MemberAccess","src":"2358:10:26","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":8860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2358:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_payable_$_t_uint256_$","typeString":"tuple(address payable,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"2325:78:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8863,"name":"pendingWithdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8669,"src":"2421:18:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8865,"indexExpression":{"id":8864,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8849,"src":"2440:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2421:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8866,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8851,"src":"2449:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2421:34:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2070656e64696e67207769746864726177616c","id":8868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2457:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40","typeString":"literal_string \"No pending withdrawal\""},"value":"No pending withdrawal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40","typeString":"literal_string \"No pending withdrawal\""}],"id":8862,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2413:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2413:68:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8870,"nodeType":"ExpressionStatement","src":"2413:68:26"},{"expression":{"id":8875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8871,"name":"pendingWithdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8669,"src":"2491:18:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8873,"indexExpression":{"id":8872,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8849,"src":"2510:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2491:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":8874,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8851,"src":"2519:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2491:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8876,"nodeType":"ExpressionStatement","src":"2491:34:26"},{"expression":{"arguments":[{"id":8880,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8849,"src":"2555:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8881,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8851,"src":"2561:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8877,"name":"shareToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8652,"src":"2535:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_ShareToken_$8636","typeString":"contract ShareToken"}},"id":8879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2546:8:26","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":434,"src":"2535:19:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2535:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8883,"nodeType":"ExpressionStatement","src":"2535:33:26"},{"eventCall":{"arguments":[{"id":8885,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8849,"src":"2601:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8886,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8851,"src":"2607:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8884,"name":"WithdrawFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"2583:17:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2583:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8888,"nodeType":"EmitStatement","src":"2578:36:26"}]},"functionSelector":"bc493fd6","id":8890,"implemented":true,"kind":"function","modifiers":[{"id":8846,"kind":"modifierInvocation","modifierName":{"id":8845,"name":"onlyOwner","nameLocations":["2243:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2243:9:26"},"nodeType":"ModifierInvocation","src":"2243:9:26"}],"name":"settleWithdrawal","nameLocation":"2189:16:26","nodeType":"FunctionDefinition","parameters":{"id":8844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8843,"mutability":"mutable","name":"signedReceipt","nameLocation":"2219:13:26","nodeType":"VariableDeclaration","scope":8890,"src":"2206:26:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8842,"name":"bytes","nodeType":"ElementaryTypeName","src":"2206:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2205:28:26"},"returnParameters":{"id":8847,"nodeType":"ParameterList","parameters":[],"src":"2253:0:26"},"scope":8891,"src":"2180:441:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8892,"src":"261:2362:26","usedErrors":[13,18],"usedEvents":[24,8675,8681,8687]}],"src":"32:2591:26"},"id":26},"contracts/YieldDistributor.sol":{"ast":{"absolutePath":"contracts/YieldDistributor.sol","exportedSymbols":{"Context":[1148],"ERC20":[824],"Hashes":[3626],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1082],"MerkleProof":[4699],"Ownable":[147],"YieldDistributor":[9008]},"id":9009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8893,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:27"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9009,"sourceUnit":825,"src":"58:55:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8895,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9009,"sourceUnit":148,"src":"114:52:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":8896,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9009,"sourceUnit":4700,"src":"167:68:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8897,"name":"Ownable","nameLocations":["266:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"266:7:27"},"id":8898,"nodeType":"InheritanceSpecifier","src":"266:7:27"}],"canonicalName":"YieldDistributor","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9008,"linearizedBaseContracts":[9008,147,1148],"name":"YieldDistributor","nameLocation":"246:16:27","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"f7c618c1","id":8901,"mutability":"mutable","name":"rewardToken","nameLocation":"293:11:27","nodeType":"VariableDeclaration","scope":9008,"src":"280:24:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$824","typeString":"contract ERC20"},"typeName":{"id":8900,"nodeType":"UserDefinedTypeName","pathNode":{"id":8899,"name":"ERC20","nameLocations":["280:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"280:5:27"},"referencedDeclaration":824,"src":"280:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$824","typeString":"contract ERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"2eb4a7ab","id":8903,"mutability":"mutable","name":"merkleRoot","nameLocation":"325:10:27","nodeType":"VariableDeclaration","scope":9008,"src":"310:25:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"310:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"120aa877","id":8909,"mutability":"mutable","name":"claimed","nameLocation":"393:7:27","nodeType":"VariableDeclaration","scope":9008,"src":"341:59:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":8908,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8904,"name":"uint256","nodeType":"ElementaryTypeName","src":"349:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"341:44:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8907,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8905,"name":"address","nodeType":"ElementaryTypeName","src":"368:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"360:24:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8906,"name":"bool","nodeType":"ElementaryTypeName","src":"379:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"d72b4167ddee98b03fa0464106eecc202a58cd62dc5b9079b75ad44321497fc4","id":8915,"name":"YieldDistributed","nameLocation":"413:16:27","nodeType":"EventDefinition","parameters":{"id":8914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8911,"indexed":true,"mutability":"mutable","name":"period","nameLocation":"446:6:27","nodeType":"VariableDeclaration","scope":8915,"src":"430:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8910,"name":"uint256","nodeType":"ElementaryTypeName","src":"430:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8913,"indexed":false,"mutability":"mutable","name":"merkleRoot","nameLocation":"462:10:27","nodeType":"VariableDeclaration","scope":8915,"src":"454:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"454:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"429:44:27"},"src":"407:67:27"},{"body":{"id":8929,"nodeType":"Block","src":"532:43:27","statements":[{"expression":{"id":8927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8925,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8901,"src":"542:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$824","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8926,"name":"_rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8918,"src":"556:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$824","typeString":"contract ERC20"}},"src":"542:26:27","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$824","typeString":"contract ERC20"}},"id":8928,"nodeType":"ExpressionStatement","src":"542:26:27"}]},"id":8930,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":8921,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"520:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"524:6:27","memberName":"sender","nodeType":"MemberAccess","src":"520:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8923,"kind":"baseConstructorSpecifier","modifierName":{"id":8920,"name":"Ownable","nameLocations":["512:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"512:7:27"},"nodeType":"ModifierInvocation","src":"512:19:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8918,"mutability":"mutable","name":"_rewardToken","nameLocation":"498:12:27","nodeType":"VariableDeclaration","scope":8930,"src":"492:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$824","typeString":"contract ERC20"},"typeName":{"id":8917,"nodeType":"UserDefinedTypeName","pathNode":{"id":8916,"name":"ERC20","nameLocations":["492:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"492:5:27"},"referencedDeclaration":824,"src":"492:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$824","typeString":"contract ERC20"}},"visibility":"internal"}],"src":"491:20:27"},"returnParameters":{"id":8924,"nodeType":"ParameterList","parameters":[],"src":"532:0:27"},"scope":9008,"src":"480:95:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8948,"nodeType":"Block","src":"662:93:27","statements":[{"expression":{"id":8941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8939,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"672:10:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8940,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8934,"src":"685:11:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"672:24:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8942,"nodeType":"ExpressionStatement","src":"672:24:27"},{"eventCall":{"arguments":[{"id":8944,"name":"period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"728:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8945,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8934,"src":"736:11:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8943,"name":"YieldDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8915,"src":"711:16:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,bytes32)"}},"id":8946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"711:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8947,"nodeType":"EmitStatement","src":"706:42:27"}]},"functionSelector":"b282d002","id":8949,"implemented":true,"kind":"function","modifiers":[{"id":8937,"kind":"modifierInvocation","modifierName":{"id":8936,"name":"onlyOwner","nameLocations":["652:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"652:9:27"},"nodeType":"ModifierInvocation","src":"652:9:27"}],"name":"distributeYield","nameLocation":"590:15:27","nodeType":"FunctionDefinition","parameters":{"id":8935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8932,"mutability":"mutable","name":"period","nameLocation":"614:6:27","nodeType":"VariableDeclaration","scope":8949,"src":"606:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8931,"name":"uint256","nodeType":"ElementaryTypeName","src":"606:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8934,"mutability":"mutable","name":"_merkleRoot","nameLocation":"630:11:27","nodeType":"VariableDeclaration","scope":8949,"src":"622:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"622:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"605:37:27"},"returnParameters":{"id":8938,"nodeType":"ParameterList","parameters":[],"src":"662:0:27"},"scope":9008,"src":"581:174:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9006,"nodeType":"Block","src":"865:306:27","statements":[{"expression":{"arguments":[{"id":8967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"883:25:27","subExpression":{"baseExpression":{"baseExpression":{"id":8962,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8909,"src":"884:7:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":8964,"indexExpression":{"id":8963,"name":"period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"892:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"884:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8966,"indexExpression":{"id":8965,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8953,"src":"900:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"884:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920636c61696d6564","id":8968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","typeString":"literal_string \"Already claimed\""},"value":"Already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","typeString":"literal_string \"Already claimed\""}],"id":8961,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"875:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"875:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8970,"nodeType":"ExpressionStatement","src":"875:53:27"},{"assignments":[8972],"declarations":[{"constant":false,"id":8972,"mutability":"mutable","name":"leaf","nameLocation":"946:4:27","nodeType":"VariableDeclaration","scope":9006,"src":"938:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"938:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8980,"initialValue":{"arguments":[{"arguments":[{"id":8976,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8953,"src":"980:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8977,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"989:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8974,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"963:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"967:12:27","memberName":"encodePacked","nodeType":"MemberAccess","src":"963:16:27","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"963:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8973,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"953:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"953:44:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"938:59:27"},{"expression":{"arguments":[{"arguments":[{"id":8984,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8958,"src":"1034:5:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":8985,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"1041:10:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8986,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8972,"src":"1053:4:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8982,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"1015:11:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$4699_$","typeString":"type(library MerkleProof)"}},"id":8983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1027:6:27","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":3655,"src":"1015:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":8987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1015:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f6f66","id":8988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1060:15:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639","typeString":"literal_string \"Invalid proof\""},"value":"Invalid proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639","typeString":"literal_string \"Invalid proof\""}],"id":8981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1007:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1007:69:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8990,"nodeType":"ExpressionStatement","src":"1007:69:27"},{"expression":{"id":8997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8991,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8909,"src":"1086:7:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":8994,"indexExpression":{"id":8992,"name":"period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"1094:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1086:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8995,"indexExpression":{"id":8993,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8953,"src":"1102:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1086:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1113:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1086:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8998,"nodeType":"ExpressionStatement","src":"1086:31:27"},{"expression":{"arguments":[{"id":9002,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8953,"src":"1148:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9003,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"1157:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8999,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8901,"src":"1127:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$824","typeString":"contract ERC20"}},"id":9001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1139:8:27","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":434,"src":"1127:20:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":9004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1127:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9005,"nodeType":"ExpressionStatement","src":"1127:37:27"}]},"functionSelector":"de14bdd8","id":9007,"implemented":true,"kind":"function","modifiers":[],"name":"claimYield","nameLocation":"770:10:27","nodeType":"FunctionDefinition","parameters":{"id":8959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8951,"mutability":"mutable","name":"period","nameLocation":"789:6:27","nodeType":"VariableDeclaration","scope":9007,"src":"781:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8950,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8953,"mutability":"mutable","name":"account","nameLocation":"805:7:27","nodeType":"VariableDeclaration","scope":9007,"src":"797:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8952,"name":"address","nodeType":"ElementaryTypeName","src":"797:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8955,"mutability":"mutable","name":"amount","nameLocation":"822:6:27","nodeType":"VariableDeclaration","scope":9007,"src":"814:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8954,"name":"uint256","nodeType":"ElementaryTypeName","src":"814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8958,"mutability":"mutable","name":"proof","nameLocation":"849:5:27","nodeType":"VariableDeclaration","scope":9007,"src":"830:24:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"830:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8957,"nodeType":"ArrayTypeName","src":"830:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"780:75:27"},"returnParameters":{"id":8960,"nodeType":"ParameterList","parameters":[],"src":"865:0:27"},"scope":9008,"src":"761:410:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9009,"src":"237:936:27","usedErrors":[13,18],"usedEvents":[24,8915]}],"src":"32:1141:27"},"id":27},"contracts/ZKModule.sol":{"ast":{"absolutePath":"contracts/ZKModule.sol","exportedSymbols":{"Context":[1148],"Ownable":[147],"ZKModule":[9056]},"id":9057,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9010,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:28"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9011,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9057,"sourceUnit":148,"src":"58:52:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9012,"name":"Ownable","nameLocations":["133:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"133:7:28"},"id":9013,"nodeType":"InheritanceSpecifier","src":"133:7:28"}],"canonicalName":"ZKModule","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9056,"linearizedBaseContracts":[9056,147,1148],"name":"ZKModule","nameLocation":"121:8:28","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"6001ac408879869d65636618cd8495cce3026445823e6de88d46ade8a9c81c79","id":9019,"name":"ProofSubmitted","nameLocation":"153:14:28","nodeType":"EventDefinition","parameters":{"id":9018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9015,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"184:4:28","nodeType":"VariableDeclaration","scope":9019,"src":"168:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9014,"name":"address","nodeType":"ElementaryTypeName","src":"168:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9017,"indexed":false,"mutability":"mutable","name":"proofHash","nameLocation":"198:9:28","nodeType":"VariableDeclaration","scope":9019,"src":"190:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"190:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"167:41:28"},"src":"147:62:28"},{"body":{"id":9026,"nodeType":"Block","src":"249:2:28","statements":[]},"id":9027,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":9022,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"237:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"241:6:28","memberName":"sender","nodeType":"MemberAccess","src":"237:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9024,"kind":"baseConstructorSpecifier","modifierName":{"id":9021,"name":"Ownable","nameLocations":["229:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"229:7:28"},"nodeType":"ModifierInvocation","src":"229:19:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9020,"nodeType":"ParameterList","parameters":[],"src":"226:2:28"},"returnParameters":{"id":9025,"nodeType":"ParameterList","parameters":[],"src":"249:0:28"},"scope":9056,"src":"215:36:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9054,"nodeType":"Block","src":"349:298:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9036,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9029,"src":"502:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"508:6:28","memberName":"length","nodeType":"MemberAccess","src":"502:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"517:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"502:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9051,"nodeType":"IfStatement","src":"498:121:28","trueBody":{"id":9050,"nodeType":"Block","src":"520:99:28","statements":[{"eventCall":{"arguments":[{"expression":{"id":9041,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"554:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"558:6:28","memberName":"sender","nodeType":"MemberAccess","src":"554:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":9044,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9029,"src":"576:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9043,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"566:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"566:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9040,"name":"ProofSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9019,"src":"539:14:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":9046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"539:44:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9047,"nodeType":"EmitStatement","src":"534:49:28"},{"expression":{"hexValue":"74727565","id":9048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"604:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":9035,"id":9049,"nodeType":"Return","src":"597:11:28"}]}},{"expression":{"hexValue":"66616c7365","id":9052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"635:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":9035,"id":9053,"nodeType":"Return","src":"628:12:28"}]},"functionSelector":"b8e72af6","id":9055,"implemented":true,"kind":"function","modifiers":[],"name":"verifyProof","nameLocation":"266:11:28","nodeType":"FunctionDefinition","parameters":{"id":9032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9029,"mutability":"mutable","name":"proof","nameLocation":"291:5:28","nodeType":"VariableDeclaration","scope":9055,"src":"278:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9028,"name":"bytes","nodeType":"ElementaryTypeName","src":"278:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9031,"mutability":"mutable","name":"publicInputs","nameLocation":"311:12:28","nodeType":"VariableDeclaration","scope":9055,"src":"298:25:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9030,"name":"bytes","nodeType":"ElementaryTypeName","src":"298:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"277:47:28"},"returnParameters":{"id":9035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9055,"src":"343:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9033,"name":"bool","nodeType":"ElementaryTypeName","src":"343:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"342:6:28"},"scope":9056,"src":"257:390:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9057,"src":"112:537:28","usedErrors":[13,18],"usedEvents":[24,9019]}],"src":"32:617:28"},"id":28}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099d0b5f366a78872590dac246cf99b97c37167f78d60be5c3afe67987d15111164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xD0 0xB5 RETURN PUSH7 0xA78872590DAC24 PUSH13 0xF99B97C37167F78D60BE5C3AFE PUSH8 0x987D15111164736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1255:3046:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099d0b5f366a78872590dac246cf99b97c37167f78d60be5c3afe67987d15111164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xD0 0xB5 RETURN PUSH7 0xA78872590DAC24 PUSH13 0xF99B97C37167F78D60BE5C3AFE PUSH8 0x987D15111164736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1255:3046:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cdfc0f4896bddb25e6dbaa67bf1eb0e65a8304d29a2184c6bb257d077c9490e664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xFC 0xF BASEFEE SWAP7 0xBD 0xDB 0x25 0xE6 0xDB 0xAA PUSH8 0xBF1EB0E65A8304D2 SWAP11 0x21 DUP5 0xC6 0xBB 0x25 PUSH30 0x77C9490E664736F6C634300081400330000000000000000000000000000 ","sourceMap":"297:18982:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cdfc0f4896bddb25e6dbaa67bf1eb0e65a8304d29a2184c6bb257d077c9490e664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xFC 0xF BASEFEE SWAP7 0xBD 0xDB 0x25 0xE6 0xDB 0xAA PUSH8 0xBF1EB0E65A8304D2 SWAP11 0x21 DUP5 0xC6 0xBB 0x25 PUSH30 0x77C9490E664736F6C634300081400330000000000000000000000000000 ","sourceMap":"297:18982:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"Hashes":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b66bf6dcab31c139255fde1eecd03ea719c1beed635de0ae2a3d4b07c85591cf64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 PUSH12 0xF6DCAB31C139255FDE1EECD0 RETURNDATACOPY 0xA7 NOT 0xC1 0xBE 0xED PUSH4 0x5DE0AE2A RETURNDATASIZE 0x4B SMOD 0xC8 SSTORE SWAP2 0xCF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"221:811:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b66bf6dcab31c139255fde1eecd03ea719c1beed635de0ae2a3d4b07c85591cf64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 PUSH12 0xF6DCAB31C139255FDE1EECD0 RETURNDATACOPY 0xA7 NOT 0xC1 0xBE 0xED PUSH4 0x5DE0AE2A RETURNDATASIZE 0x4B SMOD 0xC8 SSTORE SWAP2 0xCF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"221:811:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library of standard hash functions. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":\"Hashes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[{"inputs":[],"name":"MerkleProofInvalidMultiproof","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ae1901d992abdc86968fb5627205ea48fbadc0c9023c476a9e977183b11fedd964736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE NOT ADD 0xD9 SWAP3 0xAB 0xDC DUP7 SWAP7 DUP16 0xB5 PUSH3 0x7205EA BASEFEE 0xFB 0xAD 0xC0 0xC9 MUL EXTCODECOPY SELFBALANCE PUSH11 0x9E977183B11FEDD964736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1353:22982:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ae1901d992abdc86968fb5627205ea48fbadc0c9023c476a9e977183b11fedd964736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE NOT ADD 0xD9 SWAP3 0xAB 0xDC DUP7 SWAP7 DUP16 0xB5 PUSH3 0x7205EA BASEFEE 0xFB 0xAD 0xC0 0xC9 MUL EXTCODECOPY SELFBALANCE PUSH11 0x9E977183B11FEDD964736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1353:22982:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box. IMPORTANT: Consider memory side-effects when using custom hashing functions that access memory in an unsafe way. NOTE: This library supports proof verification for merkle trees built using custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving leaf inclusion in trees built using non-commutative hashing functions requires additional logic that is not supported by this library.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026c48870ae02959cbf0acbe21bcfca73b8ad9bf6c86e24aa9d844ab7355d9d6564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xC4 DUP9 PUSH17 0xAE02959CBF0ACBE21BCFCA73B8AD9BF6C8 PUSH15 0x24AA9D844AB7355D9D6564736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026c48870ae02959cbf0acbe21bcfca73b8ad9bf6c86e24aa9d844ab7355d9d6564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xC4 DUP9 PUSH17 0xAE02959CBF0ACBE21BCFCA73B8AD9BF6C8 PUSH15 0x24AA9D844AB7355D9D6564736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/AssetTokenizer.sol":{"AssetTokenizer":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"assetId","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"AssetMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"assets","outputs":[{"internalType":"string","name":"uri","type":"string"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes32","name":"proofHash","type":"bytes32"},{"internalType":"uint256","name":"valuation","type":"uint256"},{"internalType":"uint256","name":"maturity","type":"uint256"},{"internalType":"bool","name":"locked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"getAsset","outputs":[{"components":[{"internalType":"string","name":"uri","type":"string"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes32","name":"proofHash","type":"bytes32"},{"internalType":"uint256","name":"valuation","type":"uint256"},{"internalType":"uint256","name":"maturity","type":"uint256"},{"internalType":"bool","name":"locked","type":"bool"}],"internalType":"struct AssetTokenizer.Asset","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"address","name":"vault","type":"address"}],"name":"lockAssetForVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"uri","type":"string"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes32","name":"proofHash","type":"bytes32"},{"internalType":"uint256","name":"valuation","type":"uint256"},{"internalType":"uint256","name":"maturity","type":"uint256"}],"name":"mintAsset","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8356":{"entryPoint":null,"id":8356,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":160,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":408,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":425,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":388,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":356,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:590:29","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:29","statements":[{"nodeType":"YulAssignment","src":"62:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:29"},"nodeType":"YulFunctionCall","src":"73:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:29","type":""}],"src":"7:126:29"},{"body":{"nodeType":"YulBlock","src":"184:51:29","statements":[{"nodeType":"YulAssignment","src":"194:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:29"},"nodeType":"YulFunctionCall","src":"205:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:29","type":""}],"src":"139:96:29"},{"body":{"nodeType":"YulBlock","src":"306:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:29"},"nodeType":"YulFunctionCall","src":"328:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:29"},"nodeType":"YulFunctionCall","src":"316:37:29"},"nodeType":"YulExpressionStatement","src":"316:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:29","type":""}],"src":"241:118:29"},{"body":{"nodeType":"YulBlock","src":"463:124:29","statements":[{"nodeType":"YulAssignment","src":"473:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:29"},"nodeType":"YulFunctionCall","src":"481:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:29"},"nodeType":"YulFunctionCall","src":"562:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:29"},"nodeType":"YulFunctionCall","src":"509:71:29"},"nodeType":"YulExpressionStatement","src":"509:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:29","type":""}],"src":"365:222:29"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000885760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200007f9190620001a9565b60405180910390fd5b6200009981620000a060201b60201c565b50620001c6565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001918262000164565b9050919050565b620001a38162000184565b82525050565b6000602082019050620001c0600083018462000198565b92915050565b6112ad80620001d66000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063bd2a58a21161005b578063bd2a58a2146100da578063cf35bdd0146100f6578063eac8f5b81461012b578063f2fde38b1461015b5761007d565b8063715018a6146100825780638da5cb5b1461008c578063b473cd54146100aa575b600080fd5b61008a610177565b005b61009461018b565b6040516100a191906108ea565b60405180910390f35b6100c460048036038101906100bf9190610af7565b6101b4565b6040516100d19190610b9d565b60405180910390f35b6100f460048036038101906100ef9190610bb8565b61032c565b005b610110600480360381019061010b9190610bf8565b610440565b60405161012296959493929190610cce565b60405180910390f35b61014560048036038101906101409190610bf8565b610531565b6040516101529190610e45565b60405180910390f35b61017560048036038101906101709190610e67565b61067f565b005b61017f610705565b610189600061078c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006101be610705565b6000600160008154809291906101d390610ec3565b9190505590506040518060c001604052808881526020018773ffffffffffffffffffffffffffffffffffffffff168152602001868152602001858152602001848152602001600015158152506002600083815260200190815260200160002060008201518160000190816102479190611117565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055509050508573ffffffffffffffffffffffffffffffffffffffff16817fa30dd43fc057b356acd774161b6c8743df78c9bd58d7f492dd56d00121dda6b58960405161031791906111e9565b60405180910390a38091505095945050505050565b6002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806103ce575061039f61018b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61040d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040490611257565b60405180910390fd5b60016002600084815260200190815260200160002060050160006101000a81548160ff0219169083151502179055505050565b600260205280600052604060002060009150905080600001805461046390610f3a565b80601f016020809104026020016040519081016040528092919081815260200182805461048f90610f3a565b80156104dc5780601f106104b1576101008083540402835291602001916104dc565b820191906000526020600020905b8154815290600101906020018083116104bf57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b610539610858565b600260008381526020019081526020016000206040518060c001604052908160008201805461056790610f3a565b80601f016020809104026020016040519081016040528092919081815260200182805461059390610f3a565b80156105e05780601f106105b5576101008083540402835291602001916105e0565b820191906000526020600020905b8154815290600101906020018083116105c357829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250509050919050565b610687610705565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106f95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106f091906108ea565b60405180910390fd5b6107028161078c565b50565b61070d610850565b73ffffffffffffffffffffffffffffffffffffffff1661072b61018b565b73ffffffffffffffffffffffffffffffffffffffff161461078a5761074e610850565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161078191906108ea565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060c0016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000801916815260200160008152602001600081526020016000151581525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108d4826108a9565b9050919050565b6108e4816108c9565b82525050565b60006020820190506108ff60008301846108db565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61096c82610923565b810181811067ffffffffffffffff8211171561098b5761098a610934565b5b80604052505050565b600061099e610905565b90506109aa8282610963565b919050565b600067ffffffffffffffff8211156109ca576109c9610934565b5b6109d382610923565b9050602081019050919050565b82818337600083830152505050565b6000610a026109fd846109af565b610994565b905082815260208101848484011115610a1e57610a1d61091e565b5b610a298482856109e0565b509392505050565b600082601f830112610a4657610a45610919565b5b8135610a568482602086016109ef565b91505092915050565b610a68816108c9565b8114610a7357600080fd5b50565b600081359050610a8581610a5f565b92915050565b6000819050919050565b610a9e81610a8b565b8114610aa957600080fd5b50565b600081359050610abb81610a95565b92915050565b6000819050919050565b610ad481610ac1565b8114610adf57600080fd5b50565b600081359050610af181610acb565b92915050565b600080600080600060a08688031215610b1357610b1261090f565b5b600086013567ffffffffffffffff811115610b3157610b30610914565b5b610b3d88828901610a31565b9550506020610b4e88828901610a76565b9450506040610b5f88828901610aac565b9350506060610b7088828901610ae2565b9250506080610b8188828901610ae2565b9150509295509295909350565b610b9781610ac1565b82525050565b6000602082019050610bb26000830184610b8e565b92915050565b60008060408385031215610bcf57610bce61090f565b5b6000610bdd85828601610ae2565b9250506020610bee85828601610a76565b9150509250929050565b600060208284031215610c0e57610c0d61090f565b5b6000610c1c84828501610ae2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c5f578082015181840152602081019050610c44565b60008484015250505050565b6000610c7682610c25565b610c808185610c30565b9350610c90818560208601610c41565b610c9981610923565b840191505092915050565b610cad81610a8b565b82525050565b60008115159050919050565b610cc881610cb3565b82525050565b600060c0820190508181036000830152610ce88189610c6b565b9050610cf760208301886108db565b610d046040830187610ca4565b610d116060830186610b8e565b610d1e6080830185610b8e565b610d2b60a0830184610cbf565b979650505050505050565b600082825260208201905092915050565b6000610d5282610c25565b610d5c8185610d36565b9350610d6c818560208601610c41565b610d7581610923565b840191505092915050565b610d89816108c9565b82525050565b610d9881610a8b565b82525050565b610da781610ac1565b82525050565b610db681610cb3565b82525050565b600060c0830160008301518482036000860152610dd98282610d47565b9150506020830151610dee6020860182610d80565b506040830151610e016040860182610d8f565b506060830151610e146060860182610d9e565b506080830151610e276080860182610d9e565b5060a0830151610e3a60a0860182610dad565b508091505092915050565b60006020820190508181036000830152610e5f8184610dbc565b905092915050565b600060208284031215610e7d57610e7c61090f565b5b6000610e8b84828501610a76565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ece82610ac1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f0057610eff610e94565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f5257607f821691505b602082108103610f6557610f64610f0b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610fcd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610f90565b610fd78683610f90565b95508019841693508086168417925050509392505050565b6000819050919050565b600061101461100f61100a84610ac1565b610fef565b610ac1565b9050919050565b6000819050919050565b61102e83610ff9565b61104261103a8261101b565b848454610f9d565b825550505050565b600090565b61105761104a565b611062818484611025565b505050565b5b818110156110865761107b60008261104f565b600181019050611068565b5050565b601f8211156110cb5761109c81610f6b565b6110a584610f80565b810160208510156110b4578190505b6110c86110c085610f80565b830182611067565b50505b505050565b600082821c905092915050565b60006110ee600019846008026110d0565b1980831691505092915050565b600061110783836110dd565b9150826002028217905092915050565b61112082610c25565b67ffffffffffffffff81111561113957611138610934565b5b6111438254610f3a565b61114e82828561108a565b600060209050601f831160018114611181576000841561116f578287015190505b61117985826110fb565b8655506111e1565b601f19841661118f86610f6b565b60005b828110156111b757848901518255600182019150602085019450602081019050611192565b868310156111d457848901516111d0601f8916826110dd565b8355505b6001600288020188555050505b505050505050565b600060208201905081810360008301526112038184610c6b565b905092915050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000611241600e83610c30565b915061124c8261120b565b602082019050919050565b6000602082019050818103600083015261127081611234565b905091905056fea2646970667358221220aad5471082f7eb9bfe18d9350160a7e50763e66ece09f59d38b5182cbff3cefc64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x88 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7F SWAP2 SWAP1 PUSH3 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x99 DUP2 PUSH3 0xA0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1C6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x191 DUP3 PUSH3 0x164 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1A3 DUP2 PUSH3 0x184 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1C0 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x198 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12AD DUP1 PUSH3 0x1D6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBD2A58A2 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBD2A58A2 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xCF35BDD0 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xEAC8F5B8 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15B JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xB473CD54 EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x94 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0xBF8 JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xBF8 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH2 0x705 JUMP JUMPDEST PUSH2 0x189 PUSH1 0x0 PUSH2 0x78C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE PUSH2 0x705 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3 SWAP1 PUSH2 0xEC3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1117 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0xA30DD43FC057B356ACD774161B6C8743DF78C9BD58D7F492DD56D00121DDA6B5 DUP10 PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3CE JUMPI POP PUSH2 0x39F PUSH2 0x18B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x40D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x404 SWAP1 PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x463 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x48F SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0x539 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x567 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x593 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x687 PUSH2 0x705 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x702 DUP2 PUSH2 0x78C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x70D PUSH2 0x850 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x72B PUSH2 0x18B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78A JUMPI PUSH2 0x74E PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x781 SWAP2 SWAP1 PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D4 DUP3 PUSH2 0x8A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E4 DUP2 PUSH2 0x8C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x96C DUP3 PUSH2 0x923 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x98B JUMPI PUSH2 0x98A PUSH2 0x934 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99E PUSH2 0x905 JUMP JUMPDEST SWAP1 POP PUSH2 0x9AA DUP3 DUP3 PUSH2 0x963 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x9CA JUMPI PUSH2 0x9C9 PUSH2 0x934 JUMP JUMPDEST JUMPDEST PUSH2 0x9D3 DUP3 PUSH2 0x923 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA02 PUSH2 0x9FD DUP5 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA1E JUMPI PUSH2 0xA1D PUSH2 0x91E JUMP JUMPDEST JUMPDEST PUSH2 0xA29 DUP5 DUP3 DUP6 PUSH2 0x9E0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA46 JUMPI PUSH2 0xA45 PUSH2 0x919 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA56 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x9EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA68 DUP2 PUSH2 0x8C9 JUMP JUMPDEST DUP2 EQ PUSH2 0xA73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA85 DUP2 PUSH2 0xA5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9E DUP2 PUSH2 0xA8B JUMP JUMPDEST DUP2 EQ PUSH2 0xAA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xABB DUP2 PUSH2 0xA95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD4 DUP2 PUSH2 0xAC1 JUMP JUMPDEST DUP2 EQ PUSH2 0xADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF1 DUP2 PUSH2 0xACB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB13 JUMPI PUSH2 0xB12 PUSH2 0x90F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB31 JUMPI PUSH2 0xB30 PUSH2 0x914 JUMP JUMPDEST JUMPDEST PUSH2 0xB3D DUP9 DUP3 DUP10 ADD PUSH2 0xA31 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xB4E DUP9 DUP3 DUP10 ADD PUSH2 0xA76 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xB5F DUP9 DUP3 DUP10 ADD PUSH2 0xAAC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xB70 DUP9 DUP3 DUP10 ADD PUSH2 0xAE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xB81 DUP9 DUP3 DUP10 ADD PUSH2 0xAE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xB97 DUP2 PUSH2 0xAC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBCF JUMPI PUSH2 0xBCE PUSH2 0x90F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBDD DUP6 DUP3 DUP7 ADD PUSH2 0xAE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBEE DUP6 DUP3 DUP7 ADD PUSH2 0xA76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC0E JUMPI PUSH2 0xC0D PUSH2 0x90F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC1C DUP5 DUP3 DUP6 ADD PUSH2 0xAE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC5F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC76 DUP3 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0xC80 DUP2 DUP6 PUSH2 0xC30 JUMP JUMPDEST SWAP4 POP PUSH2 0xC90 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC41 JUMP JUMPDEST PUSH2 0xC99 DUP2 PUSH2 0x923 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCAD DUP2 PUSH2 0xA8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC8 DUP2 PUSH2 0xCB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCE8 DUP2 DUP10 PUSH2 0xC6B JUMP JUMPDEST SWAP1 POP PUSH2 0xCF7 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x8DB JUMP JUMPDEST PUSH2 0xD04 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0xD11 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xD1E PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xD2B PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xCBF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD52 DUP3 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0xD5C DUP2 DUP6 PUSH2 0xD36 JUMP JUMPDEST SWAP4 POP PUSH2 0xD6C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC41 JUMP JUMPDEST PUSH2 0xD75 DUP2 PUSH2 0x923 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD89 DUP2 PUSH2 0x8C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD98 DUP2 PUSH2 0xA8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xDA7 DUP2 PUSH2 0xAC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xDB6 DUP2 PUSH2 0xCB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0xDD9 DUP3 DUP3 PUSH2 0xD47 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xDEE PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xD80 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0xE01 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0xD8F JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xE14 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0xD9E JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xE27 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0xD9E JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0xE3A PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0xDAD JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE5F DUP2 DUP5 PUSH2 0xDBC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7D JUMPI PUSH2 0xE7C PUSH2 0x90F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE8B DUP5 DUP3 DUP6 ADD PUSH2 0xA76 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xECE DUP3 PUSH2 0xAC1 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xF00 JUMPI PUSH2 0xEFF PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF52 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF65 JUMPI PUSH2 0xF64 PUSH2 0xF0B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0xFCD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0xFD7 DUP7 DUP4 PUSH2 0xF90 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1014 PUSH2 0x100F PUSH2 0x100A DUP5 PUSH2 0xAC1 JUMP JUMPDEST PUSH2 0xFEF JUMP JUMPDEST PUSH2 0xAC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102E DUP4 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x1042 PUSH2 0x103A DUP3 PUSH2 0x101B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xF9D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1057 PUSH2 0x104A JUMP JUMPDEST PUSH2 0x1062 DUP2 DUP5 DUP5 PUSH2 0x1025 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1086 JUMPI PUSH2 0x107B PUSH1 0x0 DUP3 PUSH2 0x104F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1068 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x10CB JUMPI PUSH2 0x109C DUP2 PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x10A5 DUP5 PUSH2 0xF80 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x10B4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x10C8 PUSH2 0x10C0 DUP6 PUSH2 0xF80 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1067 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x10D0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1107 DUP4 DUP4 PUSH2 0x10DD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1120 DUP3 PUSH2 0xC25 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1139 JUMPI PUSH2 0x1138 PUSH2 0x934 JUMP JUMPDEST JUMPDEST PUSH2 0x1143 DUP3 SLOAD PUSH2 0xF3A JUMP JUMPDEST PUSH2 0x114E DUP3 DUP3 DUP6 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1181 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x116F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1179 DUP6 DUP3 PUSH2 0x10FB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x118F DUP7 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x11B7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1192 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x11D4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x11D0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x10DD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1203 DUP2 DUP5 PUSH2 0xC6B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1241 PUSH1 0xE DUP4 PUSH2 0xC30 JUMP JUMPDEST SWAP2 POP PUSH2 0x124C DUP3 PUSH2 0x120B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1270 DUP2 PUSH2 0x1234 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xD5 SELFBALANCE LT DUP3 0xF7 0xEB SWAP12 INVALID XOR 0xD9 CALLDATALOAD ADD PUSH1 0xA7 0xE5 SMOD PUSH4 0xE66ECE09 CREATE2 SWAP14 CODESIZE 0xB5 XOR 0x2C 0xBF RETURN 0xCE 0xFC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"112:1294:22:-:0;;;490:36;;;;;;;;;;512:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;112:1294:22;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:29:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;112:1294:22:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":1797,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1130":{"entryPoint":2128,"id":1130,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":1932,"id":146,"parameterSlots":1,"returnSlots":0},"@assets_8340":{"entryPoint":1088,"id":8340,"parameterSlots":0,"returnSlots":0},"@getAsset_8445":{"entryPoint":1329,"id":8445,"parameterSlots":1,"returnSlots":1},"@lockAssetForVault_8432":{"entryPoint":812,"id":8432,"parameterSlots":2,"returnSlots":0},"@mintAsset_8400":{"entryPoint":436,"id":8400,"parameterSlots":5,"returnSlots":1},"@owner_67":{"entryPoint":395,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":375,"id":98,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1663,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":2543,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":2732,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":2609,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2786,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3687,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_addresst_bytes32t_uint256t_uint256":{"entryPoint":2807,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":3064,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":3000,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address":{"entryPoint":3456,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2267,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool":{"entryPoint":3501,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3263,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":3471,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3236,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":3399,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3179,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack":{"entryPoint":4660,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Asset_$8335_memory_ptr_to_t_struct$_Asset_$8335_memory_ptr_fromStack":{"entryPoint":3516,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":3486,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2958,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2282,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4585,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_address_t_bytes32_t_uint256_t_uint256_t_bool__to_t_string_memory_ptr_t_address_t_bytes32_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":3278,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4695,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Asset_$8335_memory_ptr__to_t_struct$_Asset_$8335_memory_ptr__fromStack_reversed":{"entryPoint":3653,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2973,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":2452,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2309,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":2479,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":3947,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3109,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":3382,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3120,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":4234,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2249,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3251,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2699,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2217,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2753,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":4199,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":4089,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":4375,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":2528,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3137,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":3968,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3898,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":4347,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2403,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":4079,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":3779,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":4317,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3732,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3851,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2356,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":4123,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2329,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2334,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2324,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2319,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2339,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":3984,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":4304,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":4175,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36":{"entryPoint":4619,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":3997,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":4133,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2655,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":2709,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2763,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":4170,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:18121:29","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:29","statements":[{"nodeType":"YulAssignment","src":"62:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:29"},"nodeType":"YulFunctionCall","src":"73:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:29","type":""}],"src":"7:126:29"},{"body":{"nodeType":"YulBlock","src":"184:51:29","statements":[{"nodeType":"YulAssignment","src":"194:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:29"},"nodeType":"YulFunctionCall","src":"205:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:29","type":""}],"src":"139:96:29"},{"body":{"nodeType":"YulBlock","src":"306:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:29"},"nodeType":"YulFunctionCall","src":"328:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:29"},"nodeType":"YulFunctionCall","src":"316:37:29"},"nodeType":"YulExpressionStatement","src":"316:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:29","type":""}],"src":"241:118:29"},{"body":{"nodeType":"YulBlock","src":"463:124:29","statements":[{"nodeType":"YulAssignment","src":"473:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:29"},"nodeType":"YulFunctionCall","src":"481:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:29"},"nodeType":"YulFunctionCall","src":"562:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:29"},"nodeType":"YulFunctionCall","src":"509:71:29"},"nodeType":"YulExpressionStatement","src":"509:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:29","type":""}],"src":"365:222:29"},{"body":{"nodeType":"YulBlock","src":"633:35:29","statements":[{"nodeType":"YulAssignment","src":"643:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:29"},"nodeType":"YulFunctionCall","src":"653:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:29","type":""}],"src":"593:75:29"},{"body":{"nodeType":"YulBlock","src":"763:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:29"},"nodeType":"YulFunctionCall","src":"773:12:29"},"nodeType":"YulExpressionStatement","src":"773:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:29"},{"body":{"nodeType":"YulBlock","src":"886:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:29"},"nodeType":"YulFunctionCall","src":"896:12:29"},"nodeType":"YulExpressionStatement","src":"896:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:29"},{"body":{"nodeType":"YulBlock","src":"1009:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1026:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1029:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1019:6:29"},"nodeType":"YulFunctionCall","src":"1019:12:29"},"nodeType":"YulExpressionStatement","src":"1019:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"920:117:29"},{"body":{"nodeType":"YulBlock","src":"1132:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1149:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1152:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1142:6:29"},"nodeType":"YulFunctionCall","src":"1142:12:29"},"nodeType":"YulExpressionStatement","src":"1142:12:29"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"1043:117:29"},{"body":{"nodeType":"YulBlock","src":"1214:54:29","statements":[{"nodeType":"YulAssignment","src":"1224:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1242:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1249:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1238:3:29"},"nodeType":"YulFunctionCall","src":"1238:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1258:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1254:3:29"},"nodeType":"YulFunctionCall","src":"1254:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1234:3:29"},"nodeType":"YulFunctionCall","src":"1234:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1224:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1197:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1207:6:29","type":""}],"src":"1166:102:29"},{"body":{"nodeType":"YulBlock","src":"1302:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1319:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1322:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1312:6:29"},"nodeType":"YulFunctionCall","src":"1312:88:29"},"nodeType":"YulExpressionStatement","src":"1312:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1416:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1419:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1409:6:29"},"nodeType":"YulFunctionCall","src":"1409:15:29"},"nodeType":"YulExpressionStatement","src":"1409:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1440:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1443:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1433:6:29"},"nodeType":"YulFunctionCall","src":"1433:15:29"},"nodeType":"YulExpressionStatement","src":"1433:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1274:180:29"},{"body":{"nodeType":"YulBlock","src":"1503:238:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1513:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1535:6:29"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1565:4:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1543:21:29"},"nodeType":"YulFunctionCall","src":"1543:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1531:3:29"},"nodeType":"YulFunctionCall","src":"1531:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1517:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1682:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1684:16:29"},"nodeType":"YulFunctionCall","src":"1684:18:29"},"nodeType":"YulExpressionStatement","src":"1684:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1625:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1637:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1622:2:29"},"nodeType":"YulFunctionCall","src":"1622:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1661:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1673:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1658:2:29"},"nodeType":"YulFunctionCall","src":"1658:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1619:2:29"},"nodeType":"YulFunctionCall","src":"1619:62:29"},"nodeType":"YulIf","src":"1616:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1720:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1724:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1713:6:29"},"nodeType":"YulFunctionCall","src":"1713:22:29"},"nodeType":"YulExpressionStatement","src":"1713:22:29"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1489:6:29","type":""},{"name":"size","nodeType":"YulTypedName","src":"1497:4:29","type":""}],"src":"1460:281:29"},{"body":{"nodeType":"YulBlock","src":"1788:88:29","statements":[{"nodeType":"YulAssignment","src":"1798:30:29","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1808:18:29"},"nodeType":"YulFunctionCall","src":"1808:20:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1798:6:29"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1857:6:29"},{"name":"size","nodeType":"YulIdentifier","src":"1865:4:29"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1837:19:29"},"nodeType":"YulFunctionCall","src":"1837:33:29"},"nodeType":"YulExpressionStatement","src":"1837:33:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1772:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1781:6:29","type":""}],"src":"1747:129:29"},{"body":{"nodeType":"YulBlock","src":"1949:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"2054:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2056:16:29"},"nodeType":"YulFunctionCall","src":"2056:18:29"},"nodeType":"YulExpressionStatement","src":"2056:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2026:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2034:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2023:2:29"},"nodeType":"YulFunctionCall","src":"2023:30:29"},"nodeType":"YulIf","src":"2020:56:29"},{"nodeType":"YulAssignment","src":"2086:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2116:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2094:21:29"},"nodeType":"YulFunctionCall","src":"2094:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2086:4:29"}]},{"nodeType":"YulAssignment","src":"2160:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2172:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"2178:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2168:3:29"},"nodeType":"YulFunctionCall","src":"2168:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2160:4:29"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1933:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1944:4:29","type":""}],"src":"1882:308:29"},{"body":{"nodeType":"YulBlock","src":"2260:82:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2283:3:29"},{"name":"src","nodeType":"YulIdentifier","src":"2288:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2293:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2270:12:29"},"nodeType":"YulFunctionCall","src":"2270:30:29"},"nodeType":"YulExpressionStatement","src":"2270:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2320:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2325:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2316:3:29"},"nodeType":"YulFunctionCall","src":"2316:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"2334:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2309:6:29"},"nodeType":"YulFunctionCall","src":"2309:27:29"},"nodeType":"YulExpressionStatement","src":"2309:27:29"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2242:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2247:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"2252:6:29","type":""}],"src":"2196:146:29"},{"body":{"nodeType":"YulBlock","src":"2432:341:29","statements":[{"nodeType":"YulAssignment","src":"2442:75:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2509:6:29"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2467:41:29"},"nodeType":"YulFunctionCall","src":"2467:49:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2451:15:29"},"nodeType":"YulFunctionCall","src":"2451:66:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2442:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2533:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"2540:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2526:6:29"},"nodeType":"YulFunctionCall","src":"2526:21:29"},"nodeType":"YulExpressionStatement","src":"2526:21:29"},{"nodeType":"YulVariableDeclaration","src":"2556:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2571:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2578:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2567:3:29"},"nodeType":"YulFunctionCall","src":"2567:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2560:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2621:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2623:77:29"},"nodeType":"YulFunctionCall","src":"2623:79:29"},"nodeType":"YulExpressionStatement","src":"2623:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2602:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2607:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2598:3:29"},"nodeType":"YulFunctionCall","src":"2598:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"2616:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2595:2:29"},"nodeType":"YulFunctionCall","src":"2595:25:29"},"nodeType":"YulIf","src":"2592:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2750:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"2755:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2760:6:29"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2713:36:29"},"nodeType":"YulFunctionCall","src":"2713:54:29"},"nodeType":"YulExpressionStatement","src":"2713:54:29"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2405:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"2410:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2418:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2426:5:29","type":""}],"src":"2348:425:29"},{"body":{"nodeType":"YulBlock","src":"2855:278:29","statements":[{"body":{"nodeType":"YulBlock","src":"2904:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2906:77:29"},"nodeType":"YulFunctionCall","src":"2906:79:29"},"nodeType":"YulExpressionStatement","src":"2906:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2883:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2891:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2879:3:29"},"nodeType":"YulFunctionCall","src":"2879:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"2898:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2875:3:29"},"nodeType":"YulFunctionCall","src":"2875:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2868:6:29"},"nodeType":"YulFunctionCall","src":"2868:35:29"},"nodeType":"YulIf","src":"2865:122:29"},{"nodeType":"YulVariableDeclaration","src":"2996:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3023:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3010:12:29"},"nodeType":"YulFunctionCall","src":"3010:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3000:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3039:88:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3100:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3108:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3096:3:29"},"nodeType":"YulFunctionCall","src":"3096:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"3115:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"3123:3:29"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3048:47:29"},"nodeType":"YulFunctionCall","src":"3048:79:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3039:5:29"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2833:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2841:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2849:5:29","type":""}],"src":"2793:340:29"},{"body":{"nodeType":"YulBlock","src":"3182:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"3239:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3248:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3251:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3241:6:29"},"nodeType":"YulFunctionCall","src":"3241:12:29"},"nodeType":"YulExpressionStatement","src":"3241:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3205:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3230:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3212:17:29"},"nodeType":"YulFunctionCall","src":"3212:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3202:2:29"},"nodeType":"YulFunctionCall","src":"3202:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3195:6:29"},"nodeType":"YulFunctionCall","src":"3195:43:29"},"nodeType":"YulIf","src":"3192:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3175:5:29","type":""}],"src":"3139:122:29"},{"body":{"nodeType":"YulBlock","src":"3319:87:29","statements":[{"nodeType":"YulAssignment","src":"3329:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3351:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3338:12:29"},"nodeType":"YulFunctionCall","src":"3338:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3329:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3394:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3367:26:29"},"nodeType":"YulFunctionCall","src":"3367:33:29"},"nodeType":"YulExpressionStatement","src":"3367:33:29"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3297:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3305:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3313:5:29","type":""}],"src":"3267:139:29"},{"body":{"nodeType":"YulBlock","src":"3457:32:29","statements":[{"nodeType":"YulAssignment","src":"3467:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3478:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3467:7:29"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3439:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3449:7:29","type":""}],"src":"3412:77:29"},{"body":{"nodeType":"YulBlock","src":"3538:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"3595:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3604:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3607:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3597:6:29"},"nodeType":"YulFunctionCall","src":"3597:12:29"},"nodeType":"YulExpressionStatement","src":"3597:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3561:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3586:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3568:17:29"},"nodeType":"YulFunctionCall","src":"3568:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3558:2:29"},"nodeType":"YulFunctionCall","src":"3558:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3551:6:29"},"nodeType":"YulFunctionCall","src":"3551:43:29"},"nodeType":"YulIf","src":"3548:63:29"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3531:5:29","type":""}],"src":"3495:122:29"},{"body":{"nodeType":"YulBlock","src":"3675:87:29","statements":[{"nodeType":"YulAssignment","src":"3685:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3707:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3694:12:29"},"nodeType":"YulFunctionCall","src":"3694:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3685:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3750:5:29"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"3723:26:29"},"nodeType":"YulFunctionCall","src":"3723:33:29"},"nodeType":"YulExpressionStatement","src":"3723:33:29"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3653:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3661:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3669:5:29","type":""}],"src":"3623:139:29"},{"body":{"nodeType":"YulBlock","src":"3813:32:29","statements":[{"nodeType":"YulAssignment","src":"3823:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3834:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3823:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3795:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3805:7:29","type":""}],"src":"3768:77:29"},{"body":{"nodeType":"YulBlock","src":"3894:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"3951:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3960:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3963:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3953:6:29"},"nodeType":"YulFunctionCall","src":"3953:12:29"},"nodeType":"YulExpressionStatement","src":"3953:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3917:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3942:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3924:17:29"},"nodeType":"YulFunctionCall","src":"3924:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3914:2:29"},"nodeType":"YulFunctionCall","src":"3914:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3907:6:29"},"nodeType":"YulFunctionCall","src":"3907:43:29"},"nodeType":"YulIf","src":"3904:63:29"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3887:5:29","type":""}],"src":"3851:122:29"},{"body":{"nodeType":"YulBlock","src":"4031:87:29","statements":[{"nodeType":"YulAssignment","src":"4041:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4063:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4050:12:29"},"nodeType":"YulFunctionCall","src":"4050:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4041:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4106:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"4079:26:29"},"nodeType":"YulFunctionCall","src":"4079:33:29"},"nodeType":"YulExpressionStatement","src":"4079:33:29"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4009:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"4017:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4025:5:29","type":""}],"src":"3979:139:29"},{"body":{"nodeType":"YulBlock","src":"4268:947:29","statements":[{"body":{"nodeType":"YulBlock","src":"4315:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4317:77:29"},"nodeType":"YulFunctionCall","src":"4317:79:29"},"nodeType":"YulExpressionStatement","src":"4317:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4289:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4298:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4285:3:29"},"nodeType":"YulFunctionCall","src":"4285:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4310:3:29","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4281:3:29"},"nodeType":"YulFunctionCall","src":"4281:33:29"},"nodeType":"YulIf","src":"4278:120:29"},{"nodeType":"YulBlock","src":"4408:287:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4423:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4454:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4465:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4450:3:29"},"nodeType":"YulFunctionCall","src":"4450:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4437:12:29"},"nodeType":"YulFunctionCall","src":"4437:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4427:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4515:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4517:77:29"},"nodeType":"YulFunctionCall","src":"4517:79:29"},"nodeType":"YulExpressionStatement","src":"4517:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4487:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4495:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4484:2:29"},"nodeType":"YulFunctionCall","src":"4484:30:29"},"nodeType":"YulIf","src":"4481:117:29"},{"nodeType":"YulAssignment","src":"4612:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4657:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4668:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4653:3:29"},"nodeType":"YulFunctionCall","src":"4653:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4677:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4622:30:29"},"nodeType":"YulFunctionCall","src":"4622:63:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4612:6:29"}]}]},{"nodeType":"YulBlock","src":"4705:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4720:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4734:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4724:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4750:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4785:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4796:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4781:3:29"},"nodeType":"YulFunctionCall","src":"4781:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4805:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4760:20:29"},"nodeType":"YulFunctionCall","src":"4760:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4750:6:29"}]}]},{"nodeType":"YulBlock","src":"4833:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4848:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4862:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4852:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4878:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4913:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4924:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4909:3:29"},"nodeType":"YulFunctionCall","src":"4909:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4933:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4888:20:29"},"nodeType":"YulFunctionCall","src":"4888:53:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4878:6:29"}]}]},{"nodeType":"YulBlock","src":"4961:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4976:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4990:2:29","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4980:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5006:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5041:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5052:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5037:3:29"},"nodeType":"YulFunctionCall","src":"5037:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5061:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5016:20:29"},"nodeType":"YulFunctionCall","src":"5016:53:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5006:6:29"}]}]},{"nodeType":"YulBlock","src":"5089:119:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5104:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5118:3:29","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5108:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5135:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5170:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5181:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5166:3:29"},"nodeType":"YulFunctionCall","src":"5166:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5190:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5145:20:29"},"nodeType":"YulFunctionCall","src":"5145:53:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5135:6:29"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_addresst_bytes32t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4206:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4217:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4229:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4237:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4245:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4253:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4261:6:29","type":""}],"src":"4124:1091:29"},{"body":{"nodeType":"YulBlock","src":"5286:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5303:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5326:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5308:17:29"},"nodeType":"YulFunctionCall","src":"5308:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5296:6:29"},"nodeType":"YulFunctionCall","src":"5296:37:29"},"nodeType":"YulExpressionStatement","src":"5296:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5274:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5281:3:29","type":""}],"src":"5221:118:29"},{"body":{"nodeType":"YulBlock","src":"5443:124:29","statements":[{"nodeType":"YulAssignment","src":"5453:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5465:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5476:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5461:3:29"},"nodeType":"YulFunctionCall","src":"5461:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5453:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5533:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5546:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5557:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5542:3:29"},"nodeType":"YulFunctionCall","src":"5542:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5489:43:29"},"nodeType":"YulFunctionCall","src":"5489:71:29"},"nodeType":"YulExpressionStatement","src":"5489:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5415:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5427:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5438:4:29","type":""}],"src":"5345:222:29"},{"body":{"nodeType":"YulBlock","src":"5656:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"5702:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5704:77:29"},"nodeType":"YulFunctionCall","src":"5704:79:29"},"nodeType":"YulExpressionStatement","src":"5704:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5677:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5686:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5673:3:29"},"nodeType":"YulFunctionCall","src":"5673:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"5698:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5669:3:29"},"nodeType":"YulFunctionCall","src":"5669:32:29"},"nodeType":"YulIf","src":"5666:119:29"},{"nodeType":"YulBlock","src":"5795:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5810:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5824:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5814:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5839:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5874:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5885:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5870:3:29"},"nodeType":"YulFunctionCall","src":"5870:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5894:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5849:20:29"},"nodeType":"YulFunctionCall","src":"5849:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5839:6:29"}]}]},{"nodeType":"YulBlock","src":"5922:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5937:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5951:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5941:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5967:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6002:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6013:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5998:3:29"},"nodeType":"YulFunctionCall","src":"5998:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6022:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5977:20:29"},"nodeType":"YulFunctionCall","src":"5977:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5967:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5618:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5629:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5641:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5649:6:29","type":""}],"src":"5573:474:29"},{"body":{"nodeType":"YulBlock","src":"6119:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"6165:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6167:77:29"},"nodeType":"YulFunctionCall","src":"6167:79:29"},"nodeType":"YulExpressionStatement","src":"6167:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6140:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"6149:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6136:3:29"},"nodeType":"YulFunctionCall","src":"6136:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"6161:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6132:3:29"},"nodeType":"YulFunctionCall","src":"6132:32:29"},"nodeType":"YulIf","src":"6129:119:29"},{"nodeType":"YulBlock","src":"6258:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6273:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6287:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6277:6:29","type":""}]},{"nodeType":"YulAssignment","src":"6302:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6337:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6348:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6333:3:29"},"nodeType":"YulFunctionCall","src":"6333:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6357:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6312:20:29"},"nodeType":"YulFunctionCall","src":"6312:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6302:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6089:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6100:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6112:6:29","type":""}],"src":"6053:329:29"},{"body":{"nodeType":"YulBlock","src":"6447:40:29","statements":[{"nodeType":"YulAssignment","src":"6458:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6474:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6468:5:29"},"nodeType":"YulFunctionCall","src":"6468:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6458:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6430:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6440:6:29","type":""}],"src":"6388:99:29"},{"body":{"nodeType":"YulBlock","src":"6589:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6606:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"6611:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6599:6:29"},"nodeType":"YulFunctionCall","src":"6599:19:29"},"nodeType":"YulExpressionStatement","src":"6599:19:29"},{"nodeType":"YulAssignment","src":"6627:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6646:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"6651:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6642:3:29"},"nodeType":"YulFunctionCall","src":"6642:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6627:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6561:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"6566:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6577:11:29","type":""}],"src":"6493:169:29"},{"body":{"nodeType":"YulBlock","src":"6730:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6740:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6749:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6744:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6809:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6834:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"6839:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6830:3:29"},"nodeType":"YulFunctionCall","src":"6830:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6853:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"6858:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6849:3:29"},"nodeType":"YulFunctionCall","src":"6849:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6843:5:29"},"nodeType":"YulFunctionCall","src":"6843:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6823:6:29"},"nodeType":"YulFunctionCall","src":"6823:39:29"},"nodeType":"YulExpressionStatement","src":"6823:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6770:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"6773:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6767:2:29"},"nodeType":"YulFunctionCall","src":"6767:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6781:19:29","statements":[{"nodeType":"YulAssignment","src":"6783:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6792:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"6795:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6788:3:29"},"nodeType":"YulFunctionCall","src":"6788:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6783:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"6763:3:29","statements":[]},"src":"6759:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6892:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"6897:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6888:3:29"},"nodeType":"YulFunctionCall","src":"6888:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"6906:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6881:6:29"},"nodeType":"YulFunctionCall","src":"6881:27:29"},"nodeType":"YulExpressionStatement","src":"6881:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6712:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6717:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"6722:6:29","type":""}],"src":"6668:246:29"},{"body":{"nodeType":"YulBlock","src":"7012:285:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7022:53:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7069:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7036:32:29"},"nodeType":"YulFunctionCall","src":"7036:39:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7026:6:29","type":""}]},{"nodeType":"YulAssignment","src":"7084:78:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7150:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7155:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7091:58:29"},"nodeType":"YulFunctionCall","src":"7091:71:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7084:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7210:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"7217:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7206:3:29"},"nodeType":"YulFunctionCall","src":"7206:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"7224:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7229:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7171:34:29"},"nodeType":"YulFunctionCall","src":"7171:65:29"},"nodeType":"YulExpressionStatement","src":"7171:65:29"},{"nodeType":"YulAssignment","src":"7245:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7256:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7283:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7261:21:29"},"nodeType":"YulFunctionCall","src":"7261:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7252:3:29"},"nodeType":"YulFunctionCall","src":"7252:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7245:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6993:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7000:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7008:3:29","type":""}],"src":"6920:377:29"},{"body":{"nodeType":"YulBlock","src":"7368:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7385:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7408:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"7390:17:29"},"nodeType":"YulFunctionCall","src":"7390:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7378:6:29"},"nodeType":"YulFunctionCall","src":"7378:37:29"},"nodeType":"YulExpressionStatement","src":"7378:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7356:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7363:3:29","type":""}],"src":"7303:118:29"},{"body":{"nodeType":"YulBlock","src":"7469:48:29","statements":[{"nodeType":"YulAssignment","src":"7479:32:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7504:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7497:6:29"},"nodeType":"YulFunctionCall","src":"7497:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7490:6:29"},"nodeType":"YulFunctionCall","src":"7490:21:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7479:7:29"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7451:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7461:7:29","type":""}],"src":"7427:90:29"},{"body":{"nodeType":"YulBlock","src":"7582:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7599:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7619:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"7604:14:29"},"nodeType":"YulFunctionCall","src":"7604:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7592:6:29"},"nodeType":"YulFunctionCall","src":"7592:34:29"},"nodeType":"YulExpressionStatement","src":"7592:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7570:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7577:3:29","type":""}],"src":"7523:109:29"},{"body":{"nodeType":"YulBlock","src":"7890:602:29","statements":[{"nodeType":"YulAssignment","src":"7900:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7912:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7923:3:29","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7908:3:29"},"nodeType":"YulFunctionCall","src":"7908:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7900:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7948:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7959:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7944:3:29"},"nodeType":"YulFunctionCall","src":"7944:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7967:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7973:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7963:3:29"},"nodeType":"YulFunctionCall","src":"7963:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7937:6:29"},"nodeType":"YulFunctionCall","src":"7937:47:29"},"nodeType":"YulExpressionStatement","src":"7937:47:29"},{"nodeType":"YulAssignment","src":"7993:86:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8065:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"8074:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8001:63:29"},"nodeType":"YulFunctionCall","src":"8001:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7993:4:29"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8133:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8146:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8157:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8142:3:29"},"nodeType":"YulFunctionCall","src":"8142:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8089:43:29"},"nodeType":"YulFunctionCall","src":"8089:72:29"},"nodeType":"YulExpressionStatement","src":"8089:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8215:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8228:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8239:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:29"},"nodeType":"YulFunctionCall","src":"8224:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"8171:43:29"},"nodeType":"YulFunctionCall","src":"8171:72:29"},"nodeType":"YulExpressionStatement","src":"8171:72:29"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"8297:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8310:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8321:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8306:3:29"},"nodeType":"YulFunctionCall","src":"8306:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8253:43:29"},"nodeType":"YulFunctionCall","src":"8253:72:29"},"nodeType":"YulExpressionStatement","src":"8253:72:29"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"8379:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8392:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8403:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8388:3:29"},"nodeType":"YulFunctionCall","src":"8388:19:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8335:43:29"},"nodeType":"YulFunctionCall","src":"8335:73:29"},"nodeType":"YulExpressionStatement","src":"8335:73:29"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"8456:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8469:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8480:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8465:3:29"},"nodeType":"YulFunctionCall","src":"8465:19:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"8418:37:29"},"nodeType":"YulFunctionCall","src":"8418:67:29"},"nodeType":"YulExpressionStatement","src":"8418:67:29"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_address_t_bytes32_t_uint256_t_uint256_t_bool__to_t_string_memory_ptr_t_address_t_bytes32_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7822:9:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7834:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7842:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7850:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7858:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7866:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7874:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7885:4:29","type":""}],"src":"7638:854:29"},{"body":{"nodeType":"YulBlock","src":"8584:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8601:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"8606:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8594:6:29"},"nodeType":"YulFunctionCall","src":"8594:19:29"},"nodeType":"YulExpressionStatement","src":"8594:19:29"},{"nodeType":"YulAssignment","src":"8622:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8641:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"8646:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8637:3:29"},"nodeType":"YulFunctionCall","src":"8637:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8622:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8556:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"8561:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8572:11:29","type":""}],"src":"8498:159:29"},{"body":{"nodeType":"YulBlock","src":"8745:275:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8755:53:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8802:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8769:32:29"},"nodeType":"YulFunctionCall","src":"8769:39:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8759:6:29","type":""}]},{"nodeType":"YulAssignment","src":"8817:68:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8873:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"8878:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8824:48:29"},"nodeType":"YulFunctionCall","src":"8824:61:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8817:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8933:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"8940:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8929:3:29"},"nodeType":"YulFunctionCall","src":"8929:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"8947:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"8952:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8894:34:29"},"nodeType":"YulFunctionCall","src":"8894:65:29"},"nodeType":"YulExpressionStatement","src":"8894:65:29"},{"nodeType":"YulAssignment","src":"8968:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8979:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9006:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8984:21:29"},"nodeType":"YulFunctionCall","src":"8984:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8975:3:29"},"nodeType":"YulFunctionCall","src":"8975:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8968:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8726:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8733:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8741:3:29","type":""}],"src":"8663:357:29"},{"body":{"nodeType":"YulBlock","src":"9081:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9098:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9121:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9103:17:29"},"nodeType":"YulFunctionCall","src":"9103:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9091:6:29"},"nodeType":"YulFunctionCall","src":"9091:37:29"},"nodeType":"YulExpressionStatement","src":"9091:37:29"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9069:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9076:3:29","type":""}],"src":"9026:108:29"},{"body":{"nodeType":"YulBlock","src":"9195:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9212:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9235:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"9217:17:29"},"nodeType":"YulFunctionCall","src":"9217:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9205:6:29"},"nodeType":"YulFunctionCall","src":"9205:37:29"},"nodeType":"YulExpressionStatement","src":"9205:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9183:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9190:3:29","type":""}],"src":"9140:108:29"},{"body":{"nodeType":"YulBlock","src":"9309:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9326:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9349:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9331:17:29"},"nodeType":"YulFunctionCall","src":"9331:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9319:6:29"},"nodeType":"YulFunctionCall","src":"9319:37:29"},"nodeType":"YulExpressionStatement","src":"9319:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9297:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9304:3:29","type":""}],"src":"9254:108:29"},{"body":{"nodeType":"YulBlock","src":"9417:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9434:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9454:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9439:14:29"},"nodeType":"YulFunctionCall","src":"9439:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9427:6:29"},"nodeType":"YulFunctionCall","src":"9427:34:29"},"nodeType":"YulExpressionStatement","src":"9427:34:29"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9405:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9412:3:29","type":""}],"src":"9368:99:29"},{"body":{"nodeType":"YulBlock","src":"9659:1189:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9669:26:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9685:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9690:4:29","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9681:3:29"},"nodeType":"YulFunctionCall","src":"9681:14:29"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"9673:4:29","type":""}]},{"nodeType":"YulBlock","src":"9705:234:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9739:43:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9769:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"9776:4:29","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9765:3:29"},"nodeType":"YulFunctionCall","src":"9765:16:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9759:5:29"},"nodeType":"YulFunctionCall","src":"9759:23:29"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9743:12:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9807:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9812:4:29","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9803:3:29"},"nodeType":"YulFunctionCall","src":"9803:14:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9823:4:29"},{"name":"pos","nodeType":"YulIdentifier","src":"9829:3:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9819:3:29"},"nodeType":"YulFunctionCall","src":"9819:14:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9796:6:29"},"nodeType":"YulFunctionCall","src":"9796:38:29"},"nodeType":"YulExpressionStatement","src":"9796:38:29"},{"nodeType":"YulAssignment","src":"9847:81:29","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9909:12:29"},{"name":"tail","nodeType":"YulIdentifier","src":"9923:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9855:53:29"},"nodeType":"YulFunctionCall","src":"9855:73:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9847:4:29"}]}]},{"nodeType":"YulBlock","src":"9949:166:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9986:43:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10016:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"10023:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10012:3:29"},"nodeType":"YulFunctionCall","src":"10012:16:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10006:5:29"},"nodeType":"YulFunctionCall","src":"10006:23:29"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9990:12:29","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10076:12:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10094:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"10099:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10090:3:29"},"nodeType":"YulFunctionCall","src":"10090:14:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"10042:33:29"},"nodeType":"YulFunctionCall","src":"10042:63:29"},"nodeType":"YulExpressionStatement","src":"10042:63:29"}]},{"nodeType":"YulBlock","src":"10125:169:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10165:43:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10195:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"10202:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10191:3:29"},"nodeType":"YulFunctionCall","src":"10191:16:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10185:5:29"},"nodeType":"YulFunctionCall","src":"10185:23:29"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10169:12:29","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10255:12:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10273:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"10278:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10269:3:29"},"nodeType":"YulFunctionCall","src":"10269:14:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"10221:33:29"},"nodeType":"YulFunctionCall","src":"10221:63:29"},"nodeType":"YulExpressionStatement","src":"10221:63:29"}]},{"nodeType":"YulBlock","src":"10304:169:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10344:43:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10374:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"10381:4:29","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10370:3:29"},"nodeType":"YulFunctionCall","src":"10370:16:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10364:5:29"},"nodeType":"YulFunctionCall","src":"10364:23:29"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10348:12:29","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10434:12:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10452:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"10457:4:29","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10448:3:29"},"nodeType":"YulFunctionCall","src":"10448:14:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10400:33:29"},"nodeType":"YulFunctionCall","src":"10400:63:29"},"nodeType":"YulExpressionStatement","src":"10400:63:29"}]},{"nodeType":"YulBlock","src":"10483:168:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10522:43:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10552:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"10559:4:29","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10548:3:29"},"nodeType":"YulFunctionCall","src":"10548:16:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10542:5:29"},"nodeType":"YulFunctionCall","src":"10542:23:29"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10526:12:29","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10612:12:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10630:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"10635:4:29","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10626:3:29"},"nodeType":"YulFunctionCall","src":"10626:14:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10578:33:29"},"nodeType":"YulFunctionCall","src":"10578:63:29"},"nodeType":"YulExpressionStatement","src":"10578:63:29"}]},{"nodeType":"YulBlock","src":"10661:160:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10698:43:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10728:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"10735:4:29","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10724:3:29"},"nodeType":"YulFunctionCall","src":"10724:16:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10718:5:29"},"nodeType":"YulFunctionCall","src":"10718:23:29"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10702:12:29","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10782:12:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10800:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"10805:4:29","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10796:3:29"},"nodeType":"YulFunctionCall","src":"10796:14:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"10754:27:29"},"nodeType":"YulFunctionCall","src":"10754:57:29"},"nodeType":"YulExpressionStatement","src":"10754:57:29"}]},{"nodeType":"YulAssignment","src":"10831:11:29","value":{"name":"tail","nodeType":"YulIdentifier","src":"10838:4:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10831:3:29"}]}]},"name":"abi_encode_t_struct$_Asset_$8335_memory_ptr_to_t_struct$_Asset_$8335_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9638:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9645:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9654:3:29","type":""}],"src":"9539:1309:29"},{"body":{"nodeType":"YulBlock","src":"10998:221:29","statements":[{"nodeType":"YulAssignment","src":"11008:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11020:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11031:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11016:3:29"},"nodeType":"YulFunctionCall","src":"11016:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11008:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11055:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11066:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11051:3:29"},"nodeType":"YulFunctionCall","src":"11051:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11074:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11080:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11070:3:29"},"nodeType":"YulFunctionCall","src":"11070:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11044:6:29"},"nodeType":"YulFunctionCall","src":"11044:47:29"},"nodeType":"YulExpressionStatement","src":"11044:47:29"},{"nodeType":"YulAssignment","src":"11100:112:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11198:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"11207:4:29"}],"functionName":{"name":"abi_encode_t_struct$_Asset_$8335_memory_ptr_to_t_struct$_Asset_$8335_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11108:89:29"},"nodeType":"YulFunctionCall","src":"11108:104:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11100:4:29"}]}]},"name":"abi_encode_tuple_t_struct$_Asset_$8335_memory_ptr__to_t_struct$_Asset_$8335_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10970:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10982:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10993:4:29","type":""}],"src":"10854:365:29"},{"body":{"nodeType":"YulBlock","src":"11291:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"11337:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11339:77:29"},"nodeType":"YulFunctionCall","src":"11339:79:29"},"nodeType":"YulExpressionStatement","src":"11339:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11312:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11321:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11308:3:29"},"nodeType":"YulFunctionCall","src":"11308:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"11333:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11304:3:29"},"nodeType":"YulFunctionCall","src":"11304:32:29"},"nodeType":"YulIf","src":"11301:119:29"},{"nodeType":"YulBlock","src":"11430:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11445:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11459:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11449:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11474:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11509:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11520:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11505:3:29"},"nodeType":"YulFunctionCall","src":"11505:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11529:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11484:20:29"},"nodeType":"YulFunctionCall","src":"11484:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11474:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11261:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11272:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11284:6:29","type":""}],"src":"11225:329:29"},{"body":{"nodeType":"YulBlock","src":"11588:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11605:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11608:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11598:6:29"},"nodeType":"YulFunctionCall","src":"11598:88:29"},"nodeType":"YulExpressionStatement","src":"11598:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11702:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11705:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11695:6:29"},"nodeType":"YulFunctionCall","src":"11695:15:29"},"nodeType":"YulExpressionStatement","src":"11695:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11726:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11729:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11719:6:29"},"nodeType":"YulFunctionCall","src":"11719:15:29"},"nodeType":"YulExpressionStatement","src":"11719:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11560:180:29"},{"body":{"nodeType":"YulBlock","src":"11789:190:29","statements":[{"nodeType":"YulAssignment","src":"11799:33:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11826:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11808:17:29"},"nodeType":"YulFunctionCall","src":"11808:24:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11799:5:29"}]},{"body":{"nodeType":"YulBlock","src":"11922:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11924:16:29"},"nodeType":"YulFunctionCall","src":"11924:18:29"},"nodeType":"YulExpressionStatement","src":"11924:18:29"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11847:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"11854:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11844:2:29"},"nodeType":"YulFunctionCall","src":"11844:77:29"},"nodeType":"YulIf","src":"11841:103:29"},{"nodeType":"YulAssignment","src":"11953:20:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11964:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"11971:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11960:3:29"},"nodeType":"YulFunctionCall","src":"11960:13:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11953:3:29"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11775:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11785:3:29","type":""}],"src":"11746:233:29"},{"body":{"nodeType":"YulBlock","src":"12013:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12030:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12033:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12023:6:29"},"nodeType":"YulFunctionCall","src":"12023:88:29"},"nodeType":"YulExpressionStatement","src":"12023:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12127:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12130:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12120:6:29"},"nodeType":"YulFunctionCall","src":"12120:15:29"},"nodeType":"YulExpressionStatement","src":"12120:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12151:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12154:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12144:6:29"},"nodeType":"YulFunctionCall","src":"12144:15:29"},"nodeType":"YulExpressionStatement","src":"12144:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"11985:180:29"},{"body":{"nodeType":"YulBlock","src":"12222:269:29","statements":[{"nodeType":"YulAssignment","src":"12232:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12246:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"12252:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12242:3:29"},"nodeType":"YulFunctionCall","src":"12242:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12232:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"12263:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12293:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"12299:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12289:3:29"},"nodeType":"YulFunctionCall","src":"12289:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12267:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"12340:51:29","statements":[{"nodeType":"YulAssignment","src":"12354:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12368:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12376:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12364:3:29"},"nodeType":"YulFunctionCall","src":"12364:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12354:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12320:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12313:6:29"},"nodeType":"YulFunctionCall","src":"12313:26:29"},"nodeType":"YulIf","src":"12310:81:29"},{"body":{"nodeType":"YulBlock","src":"12443:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"12457:16:29"},"nodeType":"YulFunctionCall","src":"12457:18:29"},"nodeType":"YulExpressionStatement","src":"12457:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12407:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12430:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12438:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12427:2:29"},"nodeType":"YulFunctionCall","src":"12427:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12404:2:29"},"nodeType":"YulFunctionCall","src":"12404:38:29"},"nodeType":"YulIf","src":"12401:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12206:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12215:6:29","type":""}],"src":"12171:320:29"},{"body":{"nodeType":"YulBlock","src":"12551:87:29","statements":[{"nodeType":"YulAssignment","src":"12561:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"12569:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12561:4:29"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12589:1:29","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"12592:3:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12582:6:29"},"nodeType":"YulFunctionCall","src":"12582:14:29"},"nodeType":"YulExpressionStatement","src":"12582:14:29"},{"nodeType":"YulAssignment","src":"12605:26:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12623:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12626:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"12613:9:29"},"nodeType":"YulFunctionCall","src":"12613:18:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12605:4:29"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12538:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12546:4:29","type":""}],"src":"12497:141:29"},{"body":{"nodeType":"YulBlock","src":"12688:49:29","statements":[{"nodeType":"YulAssignment","src":"12698:33:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12716:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"12723:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12712:3:29"},"nodeType":"YulFunctionCall","src":"12712:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"12728:2:29","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12708:3:29"},"nodeType":"YulFunctionCall","src":"12708:23:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12698:6:29"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12671:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"12681:6:29","type":""}],"src":"12644:93:29"},{"body":{"nodeType":"YulBlock","src":"12796:54:29","statements":[{"nodeType":"YulAssignment","src":"12806:37:29","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"12831:4:29"},{"name":"value","nodeType":"YulIdentifier","src":"12837:5:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12827:3:29"},"nodeType":"YulFunctionCall","src":"12827:16:29"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"12806:8:29"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"12771:4:29","type":""},{"name":"value","nodeType":"YulTypedName","src":"12777:5:29","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"12787:8:29","type":""}],"src":"12743:107:29"},{"body":{"nodeType":"YulBlock","src":"12932:317:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12942:35:29","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"12963:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"12975:1:29","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12959:3:29"},"nodeType":"YulFunctionCall","src":"12959:18:29"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"12946:9:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12986:109:29","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"13017:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13028:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"12998:18:29"},"nodeType":"YulFunctionCall","src":"12998:97:29"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"12990:4:29","type":""}]},{"nodeType":"YulAssignment","src":"13104:51:29","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"13135:9:29"},{"name":"toInsert","nodeType":"YulIdentifier","src":"13146:8:29"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"13116:18:29"},"nodeType":"YulFunctionCall","src":"13116:39:29"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"13104:8:29"}]},{"nodeType":"YulAssignment","src":"13164:30:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13177:5:29"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"13188:4:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13184:3:29"},"nodeType":"YulFunctionCall","src":"13184:9:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13173:3:29"},"nodeType":"YulFunctionCall","src":"13173:21:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13164:5:29"}]},{"nodeType":"YulAssignment","src":"13203:40:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13216:5:29"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"13227:8:29"},{"name":"mask","nodeType":"YulIdentifier","src":"13237:4:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13223:3:29"},"nodeType":"YulFunctionCall","src":"13223:19:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"13213:2:29"},"nodeType":"YulFunctionCall","src":"13213:30:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13203:6:29"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12893:5:29","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"12900:10:29","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"12912:8:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"12925:6:29","type":""}],"src":"12856:393:29"},{"body":{"nodeType":"YulBlock","src":"13287:28:29","statements":[{"nodeType":"YulAssignment","src":"13297:12:29","value":{"name":"value","nodeType":"YulIdentifier","src":"13304:5:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13297:3:29"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13273:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13283:3:29","type":""}],"src":"13255:60:29"},{"body":{"nodeType":"YulBlock","src":"13381:82:29","statements":[{"nodeType":"YulAssignment","src":"13391:66:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13449:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13431:17:29"},"nodeType":"YulFunctionCall","src":"13431:24:29"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"13422:8:29"},"nodeType":"YulFunctionCall","src":"13422:34:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13404:17:29"},"nodeType":"YulFunctionCall","src":"13404:53:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13391:9:29"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13361:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13371:9:29","type":""}],"src":"13321:142:29"},{"body":{"nodeType":"YulBlock","src":"13516:28:29","statements":[{"nodeType":"YulAssignment","src":"13526:12:29","value":{"name":"value","nodeType":"YulIdentifier","src":"13533:5:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13526:3:29"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13502:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13512:3:29","type":""}],"src":"13469:75:29"},{"body":{"nodeType":"YulBlock","src":"13626:193:29","statements":[{"nodeType":"YulVariableDeclaration","src":"13636:63:29","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"13691:7:29"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13660:30:29"},"nodeType":"YulFunctionCall","src":"13660:39:29"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"13640:16:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13715:4:29"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13755:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"13749:5:29"},"nodeType":"YulFunctionCall","src":"13749:11:29"},{"name":"offset","nodeType":"YulIdentifier","src":"13762:6:29"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"13794:16:29"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"13770:23:29"},"nodeType":"YulFunctionCall","src":"13770:41:29"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"13721:27:29"},"nodeType":"YulFunctionCall","src":"13721:91:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13708:6:29"},"nodeType":"YulFunctionCall","src":"13708:105:29"},"nodeType":"YulExpressionStatement","src":"13708:105:29"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"13603:4:29","type":""},{"name":"offset","nodeType":"YulTypedName","src":"13609:6:29","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"13617:7:29","type":""}],"src":"13550:269:29"},{"body":{"nodeType":"YulBlock","src":"13874:24:29","statements":[{"nodeType":"YulAssignment","src":"13884:8:29","value":{"kind":"number","nodeType":"YulLiteral","src":"13891:1:29","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13884:3:29"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13870:3:29","type":""}],"src":"13825:73:29"},{"body":{"nodeType":"YulBlock","src":"13957:136:29","statements":[{"nodeType":"YulVariableDeclaration","src":"13967:46:29","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"13981:30:29"},"nodeType":"YulFunctionCall","src":"13981:32:29"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"13971:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14066:4:29"},{"name":"offset","nodeType":"YulIdentifier","src":"14072:6:29"},{"name":"zero_0","nodeType":"YulIdentifier","src":"14080:6:29"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14022:43:29"},"nodeType":"YulFunctionCall","src":"14022:65:29"},"nodeType":"YulExpressionStatement","src":"14022:65:29"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"13943:4:29","type":""},{"name":"offset","nodeType":"YulTypedName","src":"13949:6:29","type":""}],"src":"13904:189:29"},{"body":{"nodeType":"YulBlock","src":"14149:136:29","statements":[{"body":{"nodeType":"YulBlock","src":"14216:63:29","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"14260:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"14267:1:29","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"14230:29:29"},"nodeType":"YulFunctionCall","src":"14230:39:29"},"nodeType":"YulExpressionStatement","src":"14230:39:29"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"14169:5:29"},{"name":"end","nodeType":"YulIdentifier","src":"14176:3:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14166:2:29"},"nodeType":"YulFunctionCall","src":"14166:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14181:26:29","statements":[{"nodeType":"YulAssignment","src":"14183:22:29","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"14196:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"14203:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14192:3:29"},"nodeType":"YulFunctionCall","src":"14192:13:29"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"14183:5:29"}]}]},"pre":{"nodeType":"YulBlock","src":"14163:2:29","statements":[]},"src":"14159:120:29"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"14137:5:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"14144:3:29","type":""}],"src":"14099:186:29"},{"body":{"nodeType":"YulBlock","src":"14370:464:29","statements":[{"body":{"nodeType":"YulBlock","src":"14396:431:29","statements":[{"nodeType":"YulVariableDeclaration","src":"14410:54:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"14458:5:29"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"14426:31:29"},"nodeType":"YulFunctionCall","src":"14426:38:29"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"14414:8:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14477:63:29","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"14500:8:29"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"14528:10:29"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"14510:17:29"},"nodeType":"YulFunctionCall","src":"14510:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14496:3:29"},"nodeType":"YulFunctionCall","src":"14496:44:29"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"14481:11:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"14697:27:29","statements":[{"nodeType":"YulAssignment","src":"14699:23:29","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"14714:8:29"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"14699:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"14681:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"14693:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14678:2:29"},"nodeType":"YulFunctionCall","src":"14678:18:29"},"nodeType":"YulIf","src":"14675:49:29"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"14766:11:29"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"14783:8:29"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"14811:3:29"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"14793:17:29"},"nodeType":"YulFunctionCall","src":"14793:22:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14779:3:29"},"nodeType":"YulFunctionCall","src":"14779:37:29"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"14737:28:29"},"nodeType":"YulFunctionCall","src":"14737:80:29"},"nodeType":"YulExpressionStatement","src":"14737:80:29"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"14387:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"14392:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14384:2:29"},"nodeType":"YulFunctionCall","src":"14384:11:29"},"nodeType":"YulIf","src":"14381:446:29"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"14346:5:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"14353:3:29","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"14358:10:29","type":""}],"src":"14291:543:29"},{"body":{"nodeType":"YulBlock","src":"14903:54:29","statements":[{"nodeType":"YulAssignment","src":"14913:37:29","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"14938:4:29"},{"name":"value","nodeType":"YulIdentifier","src":"14944:5:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14934:3:29"},"nodeType":"YulFunctionCall","src":"14934:16:29"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"14913:8:29"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"14878:4:29","type":""},{"name":"value","nodeType":"YulTypedName","src":"14884:5:29","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"14894:8:29","type":""}],"src":"14840:117:29"},{"body":{"nodeType":"YulBlock","src":"15014:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"15024:68:29","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15073:1:29","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"15076:5:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15069:3:29"},"nodeType":"YulFunctionCall","src":"15069:13:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15088:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15084:3:29"},"nodeType":"YulFunctionCall","src":"15084:6:29"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"15040:28:29"},"nodeType":"YulFunctionCall","src":"15040:51:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15036:3:29"},"nodeType":"YulFunctionCall","src":"15036:56:29"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"15028:4:29","type":""}]},{"nodeType":"YulAssignment","src":"15101:25:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15115:4:29"},{"name":"mask","nodeType":"YulIdentifier","src":"15121:4:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15111:3:29"},"nodeType":"YulFunctionCall","src":"15111:15:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15101:6:29"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14991:4:29","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"14997:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"15007:6:29","type":""}],"src":"14963:169:29"},{"body":{"nodeType":"YulBlock","src":"15218:214:29","statements":[{"nodeType":"YulAssignment","src":"15351:37:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15378:4:29"},{"name":"len","nodeType":"YulIdentifier","src":"15384:3:29"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"15359:18:29"},"nodeType":"YulFunctionCall","src":"15359:29:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15351:4:29"}]},{"nodeType":"YulAssignment","src":"15397:29:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15408:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15418:1:29","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"15421:3:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15414:3:29"},"nodeType":"YulFunctionCall","src":"15414:11:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"15405:2:29"},"nodeType":"YulFunctionCall","src":"15405:21:29"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"15397:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15199:4:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"15205:3:29","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"15213:4:29","type":""}],"src":"15137:295:29"},{"body":{"nodeType":"YulBlock","src":"15529:1303:29","statements":[{"nodeType":"YulVariableDeclaration","src":"15540:51:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15587:3:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15554:32:29"},"nodeType":"YulFunctionCall","src":"15554:37:29"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"15544:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"15676:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"15678:16:29"},"nodeType":"YulFunctionCall","src":"15678:18:29"},"nodeType":"YulExpressionStatement","src":"15678:18:29"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15648:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"15656:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15645:2:29"},"nodeType":"YulFunctionCall","src":"15645:30:29"},"nodeType":"YulIf","src":"15642:56:29"},{"nodeType":"YulVariableDeclaration","src":"15708:52:29","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15754:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"15748:5:29"},"nodeType":"YulFunctionCall","src":"15748:11:29"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"15722:25:29"},"nodeType":"YulFunctionCall","src":"15722:38:29"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"15712:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15853:4:29"},{"name":"oldLen","nodeType":"YulIdentifier","src":"15859:6:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"15867:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"15807:45:29"},"nodeType":"YulFunctionCall","src":"15807:67:29"},"nodeType":"YulExpressionStatement","src":"15807:67:29"},{"nodeType":"YulVariableDeclaration","src":"15884:18:29","value":{"kind":"number","nodeType":"YulLiteral","src":"15901:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"15888:9:29","type":""}]},{"nodeType":"YulAssignment","src":"15912:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"15925:4:29","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"15912:9:29"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"15976:611:29","statements":[{"nodeType":"YulVariableDeclaration","src":"15990:37:29","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16009:6:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16021:4:29","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16017:3:29"},"nodeType":"YulFunctionCall","src":"16017:9:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16005:3:29"},"nodeType":"YulFunctionCall","src":"16005:22:29"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"15994:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16041:51:29","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16087:4:29"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"16055:31:29"},"nodeType":"YulFunctionCall","src":"16055:37:29"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"16045:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16105:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"16114:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16109:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"16173:163:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16198:6:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16216:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"16221:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16212:3:29"},"nodeType":"YulFunctionCall","src":"16212:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16206:5:29"},"nodeType":"YulFunctionCall","src":"16206:26:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16191:6:29"},"nodeType":"YulFunctionCall","src":"16191:42:29"},"nodeType":"YulExpressionStatement","src":"16191:42:29"},{"nodeType":"YulAssignment","src":"16250:24:29","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16264:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"16272:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16260:3:29"},"nodeType":"YulFunctionCall","src":"16260:14:29"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16250:6:29"}]},{"nodeType":"YulAssignment","src":"16291:31:29","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"16308:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16319:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16304:3:29"},"nodeType":"YulFunctionCall","src":"16304:18:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"16291:9:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16139:1:29"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"16142:7:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16136:2:29"},"nodeType":"YulFunctionCall","src":"16136:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16151:21:29","statements":[{"nodeType":"YulAssignment","src":"16153:17:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16162:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"16165:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16158:3:29"},"nodeType":"YulFunctionCall","src":"16158:12:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16153:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"16132:3:29","statements":[]},"src":"16128:208:29"},{"body":{"nodeType":"YulBlock","src":"16372:156:29","statements":[{"nodeType":"YulVariableDeclaration","src":"16390:43:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16417:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"16422:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16413:3:29"},"nodeType":"YulFunctionCall","src":"16413:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16407:5:29"},"nodeType":"YulFunctionCall","src":"16407:26:29"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"16394:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16457:6:29"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"16484:9:29"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16499:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"16507:4:29","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16495:3:29"},"nodeType":"YulFunctionCall","src":"16495:17:29"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"16465:18:29"},"nodeType":"YulFunctionCall","src":"16465:48:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16450:6:29"},"nodeType":"YulFunctionCall","src":"16450:64:29"},"nodeType":"YulExpressionStatement","src":"16450:64:29"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"16355:7:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"16364:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16352:2:29"},"nodeType":"YulFunctionCall","src":"16352:19:29"},"nodeType":"YulIf","src":"16349:179:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16548:4:29"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16562:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"16570:1:29","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16558:3:29"},"nodeType":"YulFunctionCall","src":"16558:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"16574:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16554:3:29"},"nodeType":"YulFunctionCall","src":"16554:22:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16541:6:29"},"nodeType":"YulFunctionCall","src":"16541:36:29"},"nodeType":"YulExpressionStatement","src":"16541:36:29"}]},"nodeType":"YulCase","src":"15969:618:29","value":{"kind":"number","nodeType":"YulLiteral","src":"15974:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"16604:222:29","statements":[{"nodeType":"YulVariableDeclaration","src":"16618:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"16631:1:29","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"16622:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"16655:67:29","statements":[{"nodeType":"YulAssignment","src":"16673:35:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16692:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"16697:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16688:3:29"},"nodeType":"YulFunctionCall","src":"16688:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16682:5:29"},"nodeType":"YulFunctionCall","src":"16682:26:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16673:5:29"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"16648:6:29"},"nodeType":"YulIf","src":"16645:77:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16742:4:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16801:5:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"16808:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"16748:52:29"},"nodeType":"YulFunctionCall","src":"16748:67:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16735:6:29"},"nodeType":"YulFunctionCall","src":"16735:81:29"},"nodeType":"YulExpressionStatement","src":"16735:81:29"}]},"nodeType":"YulCase","src":"16596:230:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15949:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"15957:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15946:2:29"},"nodeType":"YulFunctionCall","src":"15946:14:29"},"nodeType":"YulSwitch","src":"15939:887:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"15518:4:29","type":""},{"name":"src","nodeType":"YulTypedName","src":"15524:3:29","type":""}],"src":"15437:1395:29"},{"body":{"nodeType":"YulBlock","src":"16956:195:29","statements":[{"nodeType":"YulAssignment","src":"16966:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16978:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16989:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16974:3:29"},"nodeType":"YulFunctionCall","src":"16974:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16966:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17013:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17024:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17009:3:29"},"nodeType":"YulFunctionCall","src":"17009:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17032:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"17038:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17028:3:29"},"nodeType":"YulFunctionCall","src":"17028:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17002:6:29"},"nodeType":"YulFunctionCall","src":"17002:47:29"},"nodeType":"YulExpressionStatement","src":"17002:47:29"},{"nodeType":"YulAssignment","src":"17058:86:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17130:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"17139:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17066:63:29"},"nodeType":"YulFunctionCall","src":"17066:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17058:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16928:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16940:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16951:4:29","type":""}],"src":"16838:313:29"},{"body":{"nodeType":"YulBlock","src":"17263:58:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17285:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"17293:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17281:3:29"},"nodeType":"YulFunctionCall","src":"17281:14:29"},{"hexValue":"4e6f7420617574686f72697a6564","kind":"string","nodeType":"YulLiteral","src":"17297:16:29","type":"","value":"Not authorized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17274:6:29"},"nodeType":"YulFunctionCall","src":"17274:40:29"},"nodeType":"YulExpressionStatement","src":"17274:40:29"}]},"name":"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17255:6:29","type":""}],"src":"17157:164:29"},{"body":{"nodeType":"YulBlock","src":"17473:220:29","statements":[{"nodeType":"YulAssignment","src":"17483:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17549:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"17554:2:29","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17490:58:29"},"nodeType":"YulFunctionCall","src":"17490:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17483:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17655:3:29"}],"functionName":{"name":"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","nodeType":"YulIdentifier","src":"17566:88:29"},"nodeType":"YulFunctionCall","src":"17566:93:29"},"nodeType":"YulExpressionStatement","src":"17566:93:29"},{"nodeType":"YulAssignment","src":"17668:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17679:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"17684:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17675:3:29"},"nodeType":"YulFunctionCall","src":"17675:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17668:3:29"}]}]},"name":"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17461:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17469:3:29","type":""}],"src":"17327:366:29"},{"body":{"nodeType":"YulBlock","src":"17870:248:29","statements":[{"nodeType":"YulAssignment","src":"17880:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17892:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17903:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17888:3:29"},"nodeType":"YulFunctionCall","src":"17888:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17880:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17927:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17938:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17923:3:29"},"nodeType":"YulFunctionCall","src":"17923:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17946:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"17952:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17942:3:29"},"nodeType":"YulFunctionCall","src":"17942:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17916:6:29"},"nodeType":"YulFunctionCall","src":"17916:47:29"},"nodeType":"YulExpressionStatement","src":"17916:47:29"},{"nodeType":"YulAssignment","src":"17972:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18106:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17980:124:29"},"nodeType":"YulFunctionCall","src":"17980:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17972:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17850:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17865:4:29","type":""}],"src":"17699:419:29"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_bytes32t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_bytes32_t_uint256_t_uint256_t_bool__to_t_string_memory_ptr_t_address_t_bytes32_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct AssetTokenizer.Asset -> struct AssetTokenizer.Asset\n    function abi_encode_t_struct$_Asset_$8335_memory_ptr_to_t_struct$_Asset_$8335_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // uri\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // issuer\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // proofHash\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // valuation\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // maturity\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // locked\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Asset_$8335_memory_ptr__to_t_struct$_Asset_$8335_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Asset_$8335_memory_ptr_to_t_struct$_Asset_$8335_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c8063bd2a58a21161005b578063bd2a58a2146100da578063cf35bdd0146100f6578063eac8f5b81461012b578063f2fde38b1461015b5761007d565b8063715018a6146100825780638da5cb5b1461008c578063b473cd54146100aa575b600080fd5b61008a610177565b005b61009461018b565b6040516100a191906108ea565b60405180910390f35b6100c460048036038101906100bf9190610af7565b6101b4565b6040516100d19190610b9d565b60405180910390f35b6100f460048036038101906100ef9190610bb8565b61032c565b005b610110600480360381019061010b9190610bf8565b610440565b60405161012296959493929190610cce565b60405180910390f35b61014560048036038101906101409190610bf8565b610531565b6040516101529190610e45565b60405180910390f35b61017560048036038101906101709190610e67565b61067f565b005b61017f610705565b610189600061078c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006101be610705565b6000600160008154809291906101d390610ec3565b9190505590506040518060c001604052808881526020018773ffffffffffffffffffffffffffffffffffffffff168152602001868152602001858152602001848152602001600015158152506002600083815260200190815260200160002060008201518160000190816102479190611117565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055509050508573ffffffffffffffffffffffffffffffffffffffff16817fa30dd43fc057b356acd774161b6c8743df78c9bd58d7f492dd56d00121dda6b58960405161031791906111e9565b60405180910390a38091505095945050505050565b6002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806103ce575061039f61018b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61040d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040490611257565b60405180910390fd5b60016002600084815260200190815260200160002060050160006101000a81548160ff0219169083151502179055505050565b600260205280600052604060002060009150905080600001805461046390610f3a565b80601f016020809104026020016040519081016040528092919081815260200182805461048f90610f3a565b80156104dc5780601f106104b1576101008083540402835291602001916104dc565b820191906000526020600020905b8154815290600101906020018083116104bf57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b610539610858565b600260008381526020019081526020016000206040518060c001604052908160008201805461056790610f3a565b80601f016020809104026020016040519081016040528092919081815260200182805461059390610f3a565b80156105e05780601f106105b5576101008083540402835291602001916105e0565b820191906000526020600020905b8154815290600101906020018083116105c357829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250509050919050565b610687610705565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106f95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106f091906108ea565b60405180910390fd5b6107028161078c565b50565b61070d610850565b73ffffffffffffffffffffffffffffffffffffffff1661072b61018b565b73ffffffffffffffffffffffffffffffffffffffff161461078a5761074e610850565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161078191906108ea565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060c0016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000801916815260200160008152602001600081526020016000151581525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108d4826108a9565b9050919050565b6108e4816108c9565b82525050565b60006020820190506108ff60008301846108db565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61096c82610923565b810181811067ffffffffffffffff8211171561098b5761098a610934565b5b80604052505050565b600061099e610905565b90506109aa8282610963565b919050565b600067ffffffffffffffff8211156109ca576109c9610934565b5b6109d382610923565b9050602081019050919050565b82818337600083830152505050565b6000610a026109fd846109af565b610994565b905082815260208101848484011115610a1e57610a1d61091e565b5b610a298482856109e0565b509392505050565b600082601f830112610a4657610a45610919565b5b8135610a568482602086016109ef565b91505092915050565b610a68816108c9565b8114610a7357600080fd5b50565b600081359050610a8581610a5f565b92915050565b6000819050919050565b610a9e81610a8b565b8114610aa957600080fd5b50565b600081359050610abb81610a95565b92915050565b6000819050919050565b610ad481610ac1565b8114610adf57600080fd5b50565b600081359050610af181610acb565b92915050565b600080600080600060a08688031215610b1357610b1261090f565b5b600086013567ffffffffffffffff811115610b3157610b30610914565b5b610b3d88828901610a31565b9550506020610b4e88828901610a76565b9450506040610b5f88828901610aac565b9350506060610b7088828901610ae2565b9250506080610b8188828901610ae2565b9150509295509295909350565b610b9781610ac1565b82525050565b6000602082019050610bb26000830184610b8e565b92915050565b60008060408385031215610bcf57610bce61090f565b5b6000610bdd85828601610ae2565b9250506020610bee85828601610a76565b9150509250929050565b600060208284031215610c0e57610c0d61090f565b5b6000610c1c84828501610ae2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c5f578082015181840152602081019050610c44565b60008484015250505050565b6000610c7682610c25565b610c808185610c30565b9350610c90818560208601610c41565b610c9981610923565b840191505092915050565b610cad81610a8b565b82525050565b60008115159050919050565b610cc881610cb3565b82525050565b600060c0820190508181036000830152610ce88189610c6b565b9050610cf760208301886108db565b610d046040830187610ca4565b610d116060830186610b8e565b610d1e6080830185610b8e565b610d2b60a0830184610cbf565b979650505050505050565b600082825260208201905092915050565b6000610d5282610c25565b610d5c8185610d36565b9350610d6c818560208601610c41565b610d7581610923565b840191505092915050565b610d89816108c9565b82525050565b610d9881610a8b565b82525050565b610da781610ac1565b82525050565b610db681610cb3565b82525050565b600060c0830160008301518482036000860152610dd98282610d47565b9150506020830151610dee6020860182610d80565b506040830151610e016040860182610d8f565b506060830151610e146060860182610d9e565b506080830151610e276080860182610d9e565b5060a0830151610e3a60a0860182610dad565b508091505092915050565b60006020820190508181036000830152610e5f8184610dbc565b905092915050565b600060208284031215610e7d57610e7c61090f565b5b6000610e8b84828501610a76565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ece82610ac1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f0057610eff610e94565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f5257607f821691505b602082108103610f6557610f64610f0b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610fcd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610f90565b610fd78683610f90565b95508019841693508086168417925050509392505050565b6000819050919050565b600061101461100f61100a84610ac1565b610fef565b610ac1565b9050919050565b6000819050919050565b61102e83610ff9565b61104261103a8261101b565b848454610f9d565b825550505050565b600090565b61105761104a565b611062818484611025565b505050565b5b818110156110865761107b60008261104f565b600181019050611068565b5050565b601f8211156110cb5761109c81610f6b565b6110a584610f80565b810160208510156110b4578190505b6110c86110c085610f80565b830182611067565b50505b505050565b600082821c905092915050565b60006110ee600019846008026110d0565b1980831691505092915050565b600061110783836110dd565b9150826002028217905092915050565b61112082610c25565b67ffffffffffffffff81111561113957611138610934565b5b6111438254610f3a565b61114e82828561108a565b600060209050601f831160018114611181576000841561116f578287015190505b61117985826110fb565b8655506111e1565b601f19841661118f86610f6b565b60005b828110156111b757848901518255600182019150602085019450602081019050611192565b868310156111d457848901516111d0601f8916826110dd565b8355505b6001600288020188555050505b505050505050565b600060208201905081810360008301526112038184610c6b565b905092915050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000611241600e83610c30565b915061124c8261120b565b602082019050919050565b6000602082019050818103600083015261127081611234565b905091905056fea2646970667358221220aad5471082f7eb9bfe18d9350160a7e50763e66ece09f59d38b5182cbff3cefc64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBD2A58A2 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBD2A58A2 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xCF35BDD0 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xEAC8F5B8 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15B JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xB473CD54 EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x94 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0xBF8 JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xBF8 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH2 0x705 JUMP JUMPDEST PUSH2 0x189 PUSH1 0x0 PUSH2 0x78C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE PUSH2 0x705 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3 SWAP1 PUSH2 0xEC3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1117 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0xA30DD43FC057B356ACD774161B6C8743DF78C9BD58D7F492DD56D00121DDA6B5 DUP10 PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3CE JUMPI POP PUSH2 0x39F PUSH2 0x18B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x40D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x404 SWAP1 PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x463 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x48F SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0x539 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x567 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x593 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x687 PUSH2 0x705 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x702 DUP2 PUSH2 0x78C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x70D PUSH2 0x850 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x72B PUSH2 0x18B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78A JUMPI PUSH2 0x74E PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x781 SWAP2 SWAP1 PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D4 DUP3 PUSH2 0x8A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E4 DUP2 PUSH2 0x8C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x96C DUP3 PUSH2 0x923 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x98B JUMPI PUSH2 0x98A PUSH2 0x934 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99E PUSH2 0x905 JUMP JUMPDEST SWAP1 POP PUSH2 0x9AA DUP3 DUP3 PUSH2 0x963 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x9CA JUMPI PUSH2 0x9C9 PUSH2 0x934 JUMP JUMPDEST JUMPDEST PUSH2 0x9D3 DUP3 PUSH2 0x923 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA02 PUSH2 0x9FD DUP5 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA1E JUMPI PUSH2 0xA1D PUSH2 0x91E JUMP JUMPDEST JUMPDEST PUSH2 0xA29 DUP5 DUP3 DUP6 PUSH2 0x9E0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA46 JUMPI PUSH2 0xA45 PUSH2 0x919 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA56 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x9EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA68 DUP2 PUSH2 0x8C9 JUMP JUMPDEST DUP2 EQ PUSH2 0xA73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA85 DUP2 PUSH2 0xA5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9E DUP2 PUSH2 0xA8B JUMP JUMPDEST DUP2 EQ PUSH2 0xAA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xABB DUP2 PUSH2 0xA95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD4 DUP2 PUSH2 0xAC1 JUMP JUMPDEST DUP2 EQ PUSH2 0xADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF1 DUP2 PUSH2 0xACB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB13 JUMPI PUSH2 0xB12 PUSH2 0x90F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB31 JUMPI PUSH2 0xB30 PUSH2 0x914 JUMP JUMPDEST JUMPDEST PUSH2 0xB3D DUP9 DUP3 DUP10 ADD PUSH2 0xA31 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xB4E DUP9 DUP3 DUP10 ADD PUSH2 0xA76 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xB5F DUP9 DUP3 DUP10 ADD PUSH2 0xAAC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xB70 DUP9 DUP3 DUP10 ADD PUSH2 0xAE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xB81 DUP9 DUP3 DUP10 ADD PUSH2 0xAE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xB97 DUP2 PUSH2 0xAC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBCF JUMPI PUSH2 0xBCE PUSH2 0x90F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBDD DUP6 DUP3 DUP7 ADD PUSH2 0xAE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBEE DUP6 DUP3 DUP7 ADD PUSH2 0xA76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC0E JUMPI PUSH2 0xC0D PUSH2 0x90F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC1C DUP5 DUP3 DUP6 ADD PUSH2 0xAE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC5F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC76 DUP3 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0xC80 DUP2 DUP6 PUSH2 0xC30 JUMP JUMPDEST SWAP4 POP PUSH2 0xC90 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC41 JUMP JUMPDEST PUSH2 0xC99 DUP2 PUSH2 0x923 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCAD DUP2 PUSH2 0xA8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC8 DUP2 PUSH2 0xCB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCE8 DUP2 DUP10 PUSH2 0xC6B JUMP JUMPDEST SWAP1 POP PUSH2 0xCF7 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x8DB JUMP JUMPDEST PUSH2 0xD04 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0xD11 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xD1E PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xD2B PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xCBF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD52 DUP3 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0xD5C DUP2 DUP6 PUSH2 0xD36 JUMP JUMPDEST SWAP4 POP PUSH2 0xD6C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC41 JUMP JUMPDEST PUSH2 0xD75 DUP2 PUSH2 0x923 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD89 DUP2 PUSH2 0x8C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD98 DUP2 PUSH2 0xA8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xDA7 DUP2 PUSH2 0xAC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xDB6 DUP2 PUSH2 0xCB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0xDD9 DUP3 DUP3 PUSH2 0xD47 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xDEE PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xD80 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0xE01 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0xD8F JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xE14 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0xD9E JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xE27 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0xD9E JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0xE3A PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0xDAD JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE5F DUP2 DUP5 PUSH2 0xDBC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7D JUMPI PUSH2 0xE7C PUSH2 0x90F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE8B DUP5 DUP3 DUP6 ADD PUSH2 0xA76 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xECE DUP3 PUSH2 0xAC1 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xF00 JUMPI PUSH2 0xEFF PUSH2 0xE94 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF52 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF65 JUMPI PUSH2 0xF64 PUSH2 0xF0B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0xFCD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0xFD7 DUP7 DUP4 PUSH2 0xF90 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1014 PUSH2 0x100F PUSH2 0x100A DUP5 PUSH2 0xAC1 JUMP JUMPDEST PUSH2 0xFEF JUMP JUMPDEST PUSH2 0xAC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102E DUP4 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x1042 PUSH2 0x103A DUP3 PUSH2 0x101B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xF9D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1057 PUSH2 0x104A JUMP JUMPDEST PUSH2 0x1062 DUP2 DUP5 DUP5 PUSH2 0x1025 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1086 JUMPI PUSH2 0x107B PUSH1 0x0 DUP3 PUSH2 0x104F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1068 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x10CB JUMPI PUSH2 0x109C DUP2 PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x10A5 DUP5 PUSH2 0xF80 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x10B4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x10C8 PUSH2 0x10C0 DUP6 PUSH2 0xF80 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1067 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x10D0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1107 DUP4 DUP4 PUSH2 0x10DD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1120 DUP3 PUSH2 0xC25 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1139 JUMPI PUSH2 0x1138 PUSH2 0x934 JUMP JUMPDEST JUMPDEST PUSH2 0x1143 DUP3 SLOAD PUSH2 0xF3A JUMP JUMPDEST PUSH2 0x114E DUP3 DUP3 DUP6 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1181 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x116F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1179 DUP6 DUP3 PUSH2 0x10FB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x118F DUP7 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x11B7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1192 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x11D4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x11D0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x10DD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1203 DUP2 DUP5 PUSH2 0xC6B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1241 PUSH1 0xE DUP4 PUSH2 0xC30 JUMP JUMPDEST SWAP2 POP PUSH2 0x124C DUP3 PUSH2 0x120B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1270 DUP2 PUSH2 0x1234 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xD5 SELFBALANCE LT DUP3 0xF7 0xEB SWAP12 INVALID XOR 0xD9 CALLDATALOAD ADD PUSH1 0xA7 0xE5 SMOD PUSH4 0xE66ECE09 CREATE2 SWAP14 CODESIZE 0xB5 XOR 0x2C 0xBF RETURN 0xCE 0xFC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"112:1294:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;532:537:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1075:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;359:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;1293:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;532:537:22:-;716:7;1531:13:0;:11;:13::i;:::-;735:15:22::1;753:12;;:14;;;;;;;;;:::i;:::-;;;;;735:32;;795:194;;;;;;;;820:3;795:194;;;;845:6;795:194;;;;;;876:9;795:194;;;;910:9;795:194;;;;943:8;795:194;;;;973:5;795:194;;;;::::0;777:6:::1;:15;784:7;777:15;;;;;;;;;;;:212;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:6;1005:33;;1017:7;1005:33;1034:3;1005:33;;;;;;:::i;:::-;;;;;;;;1055:7;1048:14;;;532:537:::0;;;;;;;:::o;1075:212::-;1175:6;:15;1182:7;1175:15;;;;;;;;;;;:22;;;;;;;;;;;;1161:36;;:10;:36;;;:61;;;;1215:7;:5;:7::i;:::-;1201:21;;:10;:21;;;1161:61;1153:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;1276:4;1251:6;:15;1258:7;1251:15;;;;;;;;;;;:22;;;:29;;;;;;;;;;;;;;;;;;1075:212;;:::o;359:39::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1293:111::-;1351:12;;:::i;:::-;1382:6;:15;1389:7;1382:15;;;;;;;;;;;1375:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1293:111;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:126:29:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:75::-;626:6;659:2;653:9;643:19;;593:75;:::o;674:117::-;783:1;780;773:12;797:117;906:1;903;896:12;920:117;1029:1;1026;1019:12;1043:117;1152:1;1149;1142:12;1166:102;1207:6;1258:2;1254:7;1249:2;1242:5;1238:14;1234:28;1224:38;;1166:102;;;:::o;1274:180::-;1322:77;1319:1;1312:88;1419:4;1416:1;1409:15;1443:4;1440:1;1433:15;1460:281;1543:27;1565:4;1543:27;:::i;:::-;1535:6;1531:40;1673:6;1661:10;1658:22;1637:18;1625:10;1622:34;1619:62;1616:88;;;1684:18;;:::i;:::-;1616:88;1724:10;1720:2;1713:22;1503:238;1460:281;;:::o;1747:129::-;1781:6;1808:20;;:::i;:::-;1798:30;;1837:33;1865:4;1857:6;1837:33;:::i;:::-;1747:129;;;:::o;1882:308::-;1944:4;2034:18;2026:6;2023:30;2020:56;;;2056:18;;:::i;:::-;2020:56;2094:29;2116:6;2094:29;:::i;:::-;2086:37;;2178:4;2172;2168:15;2160:23;;1882:308;;;:::o;2196:146::-;2293:6;2288:3;2283;2270:30;2334:1;2325:6;2320:3;2316:16;2309:27;2196:146;;;:::o;2348:425::-;2426:5;2451:66;2467:49;2509:6;2467:49;:::i;:::-;2451:66;:::i;:::-;2442:75;;2540:6;2533:5;2526:21;2578:4;2571:5;2567:16;2616:3;2607:6;2602:3;2598:16;2595:25;2592:112;;;2623:79;;:::i;:::-;2592:112;2713:54;2760:6;2755:3;2750;2713:54;:::i;:::-;2432:341;2348:425;;;;;:::o;2793:340::-;2849:5;2898:3;2891:4;2883:6;2879:17;2875:27;2865:122;;2906:79;;:::i;:::-;2865:122;3023:6;3010:20;3048:79;3123:3;3115:6;3108:4;3100:6;3096:17;3048:79;:::i;:::-;3039:88;;2855:278;2793:340;;;;:::o;3139:122::-;3212:24;3230:5;3212:24;:::i;:::-;3205:5;3202:35;3192:63;;3251:1;3248;3241:12;3192:63;3139:122;:::o;3267:139::-;3313:5;3351:6;3338:20;3329:29;;3367:33;3394:5;3367:33;:::i;:::-;3267:139;;;;:::o;3412:77::-;3449:7;3478:5;3467:16;;3412:77;;;:::o;3495:122::-;3568:24;3586:5;3568:24;:::i;:::-;3561:5;3558:35;3548:63;;3607:1;3604;3597:12;3548:63;3495:122;:::o;3623:139::-;3669:5;3707:6;3694:20;3685:29;;3723:33;3750:5;3723:33;:::i;:::-;3623:139;;;;:::o;3768:77::-;3805:7;3834:5;3823:16;;3768:77;;;:::o;3851:122::-;3924:24;3942:5;3924:24;:::i;:::-;3917:5;3914:35;3904:63;;3963:1;3960;3953:12;3904:63;3851:122;:::o;3979:139::-;4025:5;4063:6;4050:20;4041:29;;4079:33;4106:5;4079:33;:::i;:::-;3979:139;;;;:::o;4124:1091::-;4229:6;4237;4245;4253;4261;4310:3;4298:9;4289:7;4285:23;4281:33;4278:120;;;4317:79;;:::i;:::-;4278:120;4465:1;4454:9;4450:17;4437:31;4495:18;4487:6;4484:30;4481:117;;;4517:79;;:::i;:::-;4481:117;4622:63;4677:7;4668:6;4657:9;4653:22;4622:63;:::i;:::-;4612:73;;4408:287;4734:2;4760:53;4805:7;4796:6;4785:9;4781:22;4760:53;:::i;:::-;4750:63;;4705:118;4862:2;4888:53;4933:7;4924:6;4913:9;4909:22;4888:53;:::i;:::-;4878:63;;4833:118;4990:2;5016:53;5061:7;5052:6;5041:9;5037:22;5016:53;:::i;:::-;5006:63;;4961:118;5118:3;5145:53;5190:7;5181:6;5170:9;5166:22;5145:53;:::i;:::-;5135:63;;5089:119;4124:1091;;;;;;;;:::o;5221:118::-;5308:24;5326:5;5308:24;:::i;:::-;5303:3;5296:37;5221:118;;:::o;5345:222::-;5438:4;5476:2;5465:9;5461:18;5453:26;;5489:71;5557:1;5546:9;5542:17;5533:6;5489:71;:::i;:::-;5345:222;;;;:::o;5573:474::-;5641:6;5649;5698:2;5686:9;5677:7;5673:23;5669:32;5666:119;;;5704:79;;:::i;:::-;5666:119;5824:1;5849:53;5894:7;5885:6;5874:9;5870:22;5849:53;:::i;:::-;5839:63;;5795:117;5951:2;5977:53;6022:7;6013:6;6002:9;5998:22;5977:53;:::i;:::-;5967:63;;5922:118;5573:474;;;;;:::o;6053:329::-;6112:6;6161:2;6149:9;6140:7;6136:23;6132:32;6129:119;;;6167:79;;:::i;:::-;6129:119;6287:1;6312:53;6357:7;6348:6;6337:9;6333:22;6312:53;:::i;:::-;6302:63;;6258:117;6053:329;;;;:::o;6388:99::-;6440:6;6474:5;6468:12;6458:22;;6388:99;;;:::o;6493:169::-;6577:11;6611:6;6606:3;6599:19;6651:4;6646:3;6642:14;6627:29;;6493:169;;;;:::o;6668:246::-;6749:1;6759:113;6773:6;6770:1;6767:13;6759:113;;;6858:1;6853:3;6849:11;6843:18;6839:1;6834:3;6830:11;6823:39;6795:2;6792:1;6788:10;6783:15;;6759:113;;;6906:1;6897:6;6892:3;6888:16;6881:27;6730:184;6668:246;;;:::o;6920:377::-;7008:3;7036:39;7069:5;7036:39;:::i;:::-;7091:71;7155:6;7150:3;7091:71;:::i;:::-;7084:78;;7171:65;7229:6;7224:3;7217:4;7210:5;7206:16;7171:65;:::i;:::-;7261:29;7283:6;7261:29;:::i;:::-;7256:3;7252:39;7245:46;;7012:285;6920:377;;;;:::o;7303:118::-;7390:24;7408:5;7390:24;:::i;:::-;7385:3;7378:37;7303:118;;:::o;7427:90::-;7461:7;7504:5;7497:13;7490:21;7479:32;;7427:90;;;:::o;7523:109::-;7604:21;7619:5;7604:21;:::i;:::-;7599:3;7592:34;7523:109;;:::o;7638:854::-;7885:4;7923:3;7912:9;7908:19;7900:27;;7973:9;7967:4;7963:20;7959:1;7948:9;7944:17;7937:47;8001:78;8074:4;8065:6;8001:78;:::i;:::-;7993:86;;8089:72;8157:2;8146:9;8142:18;8133:6;8089:72;:::i;:::-;8171;8239:2;8228:9;8224:18;8215:6;8171:72;:::i;:::-;8253;8321:2;8310:9;8306:18;8297:6;8253:72;:::i;:::-;8335:73;8403:3;8392:9;8388:19;8379:6;8335:73;:::i;:::-;8418:67;8480:3;8469:9;8465:19;8456:6;8418:67;:::i;:::-;7638:854;;;;;;;;;:::o;8498:159::-;8572:11;8606:6;8601:3;8594:19;8646:4;8641:3;8637:14;8622:29;;8498:159;;;;:::o;8663:357::-;8741:3;8769:39;8802:5;8769:39;:::i;:::-;8824:61;8878:6;8873:3;8824:61;:::i;:::-;8817:68;;8894:65;8952:6;8947:3;8940:4;8933:5;8929:16;8894:65;:::i;:::-;8984:29;9006:6;8984:29;:::i;:::-;8979:3;8975:39;8968:46;;8745:275;8663:357;;;;:::o;9026:108::-;9103:24;9121:5;9103:24;:::i;:::-;9098:3;9091:37;9026:108;;:::o;9140:::-;9217:24;9235:5;9217:24;:::i;:::-;9212:3;9205:37;9140:108;;:::o;9254:::-;9331:24;9349:5;9331:24;:::i;:::-;9326:3;9319:37;9254:108;;:::o;9368:99::-;9439:21;9454:5;9439:21;:::i;:::-;9434:3;9427:34;9368:99;;:::o;9539:1309::-;9654:3;9690:4;9685:3;9681:14;9776:4;9769:5;9765:16;9759:23;9829:3;9823:4;9819:14;9812:4;9807:3;9803:14;9796:38;9855:73;9923:4;9909:12;9855:73;:::i;:::-;9847:81;;9705:234;10023:4;10016:5;10012:16;10006:23;10042:63;10099:4;10094:3;10090:14;10076:12;10042:63;:::i;:::-;9949:166;10202:4;10195:5;10191:16;10185:23;10221:63;10278:4;10273:3;10269:14;10255:12;10221:63;:::i;:::-;10125:169;10381:4;10374:5;10370:16;10364:23;10400:63;10457:4;10452:3;10448:14;10434:12;10400:63;:::i;:::-;10304:169;10559:4;10552:5;10548:16;10542:23;10578:63;10635:4;10630:3;10626:14;10612:12;10578:63;:::i;:::-;10483:168;10735:4;10728:5;10724:16;10718:23;10754:57;10805:4;10800:3;10796:14;10782:12;10754:57;:::i;:::-;10661:160;10838:4;10831:11;;9659:1189;9539:1309;;;;:::o;10854:365::-;10993:4;11031:2;11020:9;11016:18;11008:26;;11080:9;11074:4;11070:20;11066:1;11055:9;11051:17;11044:47;11108:104;11207:4;11198:6;11108:104;:::i;:::-;11100:112;;10854:365;;;;:::o;11225:329::-;11284:6;11333:2;11321:9;11312:7;11308:23;11304:32;11301:119;;;11339:79;;:::i;:::-;11301:119;11459:1;11484:53;11529:7;11520:6;11509:9;11505:22;11484:53;:::i;:::-;11474:63;;11430:117;11225:329;;;;:::o;11560:180::-;11608:77;11605:1;11598:88;11705:4;11702:1;11695:15;11729:4;11726:1;11719:15;11746:233;11785:3;11808:24;11826:5;11808:24;:::i;:::-;11799:33;;11854:66;11847:5;11844:77;11841:103;;11924:18;;:::i;:::-;11841:103;11971:1;11964:5;11960:13;11953:20;;11746:233;;;:::o;11985:180::-;12033:77;12030:1;12023:88;12130:4;12127:1;12120:15;12154:4;12151:1;12144:15;12171:320;12215:6;12252:1;12246:4;12242:12;12232:22;;12299:1;12293:4;12289:12;12320:18;12310:81;;12376:4;12368:6;12364:17;12354:27;;12310:81;12438:2;12430:6;12427:14;12407:18;12404:38;12401:84;;12457:18;;:::i;:::-;12401:84;12222:269;12171:320;;;:::o;12497:141::-;12546:4;12569:3;12561:11;;12592:3;12589:1;12582:14;12626:4;12623:1;12613:18;12605:26;;12497:141;;;:::o;12644:93::-;12681:6;12728:2;12723;12716:5;12712:14;12708:23;12698:33;;12644:93;;;:::o;12743:107::-;12787:8;12837:5;12831:4;12827:16;12806:37;;12743:107;;;;:::o;12856:393::-;12925:6;12975:1;12963:10;12959:18;12998:97;13028:66;13017:9;12998:97;:::i;:::-;13116:39;13146:8;13135:9;13116:39;:::i;:::-;13104:51;;13188:4;13184:9;13177:5;13173:21;13164:30;;13237:4;13227:8;13223:19;13216:5;13213:30;13203:40;;12932:317;;12856:393;;;;;:::o;13255:60::-;13283:3;13304:5;13297:12;;13255:60;;;:::o;13321:142::-;13371:9;13404:53;13422:34;13431:24;13449:5;13431:24;:::i;:::-;13422:34;:::i;:::-;13404:53;:::i;:::-;13391:66;;13321:142;;;:::o;13469:75::-;13512:3;13533:5;13526:12;;13469:75;;;:::o;13550:269::-;13660:39;13691:7;13660:39;:::i;:::-;13721:91;13770:41;13794:16;13770:41;:::i;:::-;13762:6;13755:4;13749:11;13721:91;:::i;:::-;13715:4;13708:105;13626:193;13550:269;;;:::o;13825:73::-;13870:3;13825:73;:::o;13904:189::-;13981:32;;:::i;:::-;14022:65;14080:6;14072;14066:4;14022:65;:::i;:::-;13957:136;13904:189;;:::o;14099:186::-;14159:120;14176:3;14169:5;14166:14;14159:120;;;14230:39;14267:1;14260:5;14230:39;:::i;:::-;14203:1;14196:5;14192:13;14183:22;;14159:120;;;14099:186;;:::o;14291:543::-;14392:2;14387:3;14384:11;14381:446;;;14426:38;14458:5;14426:38;:::i;:::-;14510:29;14528:10;14510:29;:::i;:::-;14500:8;14496:44;14693:2;14681:10;14678:18;14675:49;;;14714:8;14699:23;;14675:49;14737:80;14793:22;14811:3;14793:22;:::i;:::-;14783:8;14779:37;14766:11;14737:80;:::i;:::-;14396:431;;14381:446;14291:543;;;:::o;14840:117::-;14894:8;14944:5;14938:4;14934:16;14913:37;;14840:117;;;;:::o;14963:169::-;15007:6;15040:51;15088:1;15084:6;15076:5;15073:1;15069:13;15040:51;:::i;:::-;15036:56;15121:4;15115;15111:15;15101:25;;15014:118;14963:169;;;;:::o;15137:295::-;15213:4;15359:29;15384:3;15378:4;15359:29;:::i;:::-;15351:37;;15421:3;15418:1;15414:11;15408:4;15405:21;15397:29;;15137:295;;;;:::o;15437:1395::-;15554:37;15587:3;15554:37;:::i;:::-;15656:18;15648:6;15645:30;15642:56;;;15678:18;;:::i;:::-;15642:56;15722:38;15754:4;15748:11;15722:38;:::i;:::-;15807:67;15867:6;15859;15853:4;15807:67;:::i;:::-;15901:1;15925:4;15912:17;;15957:2;15949:6;15946:14;15974:1;15969:618;;;;16631:1;16648:6;16645:77;;;16697:9;16692:3;16688:19;16682:26;16673:35;;16645:77;16748:67;16808:6;16801:5;16748:67;:::i;:::-;16742:4;16735:81;16604:222;15939:887;;15969:618;16021:4;16017:9;16009:6;16005:22;16055:37;16087:4;16055:37;:::i;:::-;16114:1;16128:208;16142:7;16139:1;16136:14;16128:208;;;16221:9;16216:3;16212:19;16206:26;16198:6;16191:42;16272:1;16264:6;16260:14;16250:24;;16319:2;16308:9;16304:18;16291:31;;16165:4;16162:1;16158:12;16153:17;;16128:208;;;16364:6;16355:7;16352:19;16349:179;;;16422:9;16417:3;16413:19;16407:26;16465:48;16507:4;16499:6;16495:17;16484:9;16465:48;:::i;:::-;16457:6;16450:64;16372:156;16349:179;16574:1;16570;16562:6;16558:14;16554:22;16548:4;16541:36;15976:611;;;15939:887;;15529:1303;;;15437:1395;;:::o;16838:313::-;16951:4;16989:2;16978:9;16974:18;16966:26;;17038:9;17032:4;17028:20;17024:1;17013:9;17009:17;17002:47;17066:78;17139:4;17130:6;17066:78;:::i;:::-;17058:86;;16838:313;;;;:::o;17157:164::-;17297:16;17293:1;17285:6;17281:14;17274:40;17157:164;:::o;17327:366::-;17469:3;17490:67;17554:2;17549:3;17490:67;:::i;:::-;17483:74;;17566:93;17655:3;17566:93;:::i;:::-;17684:2;17679:3;17675:12;17668:19;;17327:366;;;:::o;17699:419::-;17865:4;17903:2;17892:9;17888:18;17880:26;;17952:9;17946:4;17942:20;17938:1;17927:9;17923:17;17916:47;17980:131;18106:4;17980:131;:::i;:::-;17972:139;;17699:419;;;:::o"},"methodIdentifiers":{"assets(uint256)":"cf35bdd0","getAsset(uint256)":"eac8f5b8","lockAssetForVault(uint256,address)":"bd2a58a2","mintAsset(string,address,bytes32,uint256,uint256)":"b473cd54","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"AssetMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"getAsset\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"internalType\":\"struct AssetTokenizer.Asset\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"lockAssetForVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"}],\"name\":\"mintAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AssetTokenizer.sol\":\"AssetTokenizer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/AssetTokenizer.sol\":{\"keccak256\":\"0x6965b4021fdc67c5c654bce7e5b3cb3aa7c8fd9879fbd96ce59b6d0951635891\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2ee6c592eaab9772564d065549d709526154592f1fd8d3e017f2e6d7562d46c\",\"dweb:/ipfs/QmYCb2GucbK28b6QKJvJxPHQNFQz6JfUqdzXKwCZsEEbcj\"]}},\"version\":1}"}},"contracts/ComplianceModule.sol":{"ComplianceModule":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"wallet","type":"address"},{"indexed":false,"internalType":"bytes32","name":"attestationHash","type":"bytes32"}],"name":"KYCAttested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"},{"internalType":"bytes","name":"attestation","type":"bytes"}],"name":"attestKYC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"attestations","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"},{"internalType":"bytes","name":"attestation","type":"bytes"}],"name":"verifyAttestation","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8469":{"entryPoint":null,"id":8469,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":153,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":399,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":414,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":381,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":349,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:590:29","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:29","statements":[{"nodeType":"YulAssignment","src":"62:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:29"},"nodeType":"YulFunctionCall","src":"73:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:29","type":""}],"src":"7:126:29"},{"body":{"nodeType":"YulBlock","src":"184:51:29","statements":[{"nodeType":"YulAssignment","src":"194:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:29"},"nodeType":"YulFunctionCall","src":"205:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:29","type":""}],"src":"139:96:29"},{"body":{"nodeType":"YulBlock","src":"306:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:29"},"nodeType":"YulFunctionCall","src":"328:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:29"},"nodeType":"YulFunctionCall","src":"316:37:29"},"nodeType":"YulExpressionStatement","src":"316:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:29","type":""}],"src":"241:118:29"},{"body":{"nodeType":"YulBlock","src":"463:124:29","statements":[{"nodeType":"YulAssignment","src":"473:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:29"},"nodeType":"YulFunctionCall","src":"481:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:29"},"nodeType":"YulFunctionCall","src":"562:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:29"},"nodeType":"YulFunctionCall","src":"509:71:29"},"nodeType":"YulExpressionStatement","src":"509:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:29","type":""}],"src":"365:222:29"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007b919061019e565b60405180910390fd5b6100938161009960201b60201c565b506101b9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101888261015d565b9050919050565b6101988161017d565b82525050565b60006020820190506101b3600083018461018f565b92915050565b610b77806101c86000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632035704814610067578063715018a6146100975780638da5cb5b146100a1578063bad5b133146100bf578063d4d03f10146100ef578063f2fde38b1461010b575b600080fd5b610081600480360381019061007c9190610555565b610127565b60405161008e9190610612565b60405180910390f35b61009f6101c7565b005b6100a96101db565b6040516100b69190610643565b60405180910390f35b6100d960048036038101906100d49190610793565b610204565b6040516100e6919061080a565b60405180910390f35b61010960048036038101906101049190610793565b61025c565b005b61012560048036038101906101209190610555565b61030a565b005b6001602052806000526040600020600091509050805461014690610854565b80601f016020809104026020016040519081016040528092919081815260200182805461017290610854565b80156101bf5780601f10610194576101008083540402835291602001916101bf565b820191906000526020600020905b8154815290600101906020018083116101a257829003601f168201915b505050505081565b6101cf610390565b6101d96000610417565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461025190610854565b905011905092915050565b610264610390565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090816102b09190610a3b565b508173ffffffffffffffffffffffffffffffffffffffff167f2f52c77c79b4d2ef9a6bb1b4c15fa01856ecd7474893c9b9a681c8428cba279782805190602001206040516102fe9190610b26565b60405180910390a25050565b610312610390565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161037b9190610643565b60405180910390fd5b61038d81610417565b50565b6103986104db565b73ffffffffffffffffffffffffffffffffffffffff166103b66101db565b73ffffffffffffffffffffffffffffffffffffffff1614610415576103d96104db565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161040c9190610643565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610522826104f7565b9050919050565b61053281610517565b811461053d57600080fd5b50565b60008135905061054f81610529565b92915050565b60006020828403121561056b5761056a6104ed565b5b600061057984828501610540565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105bc5780820151818401526020810190506105a1565b60008484015250505050565b6000601f19601f8301169050919050565b60006105e482610582565b6105ee818561058d565b93506105fe81856020860161059e565b610607816105c8565b840191505092915050565b6000602082019050818103600083015261062c81846105d9565b905092915050565b61063d81610517565b82525050565b60006020820190506106586000830184610634565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106a0826105c8565b810181811067ffffffffffffffff821117156106bf576106be610668565b5b80604052505050565b60006106d26104e3565b90506106de8282610697565b919050565b600067ffffffffffffffff8211156106fe576106fd610668565b5b610707826105c8565b9050602081019050919050565b82818337600083830152505050565b6000610736610731846106e3565b6106c8565b90508281526020810184848401111561075257610751610663565b5b61075d848285610714565b509392505050565b600082601f83011261077a5761077961065e565b5b813561078a848260208601610723565b91505092915050565b600080604083850312156107aa576107a96104ed565b5b60006107b885828601610540565b925050602083013567ffffffffffffffff8111156107d9576107d86104f2565b5b6107e585828601610765565b9150509250929050565b60008115159050919050565b610804816107ef565b82525050565b600060208201905061081f60008301846107fb565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061086c57607f821691505b60208210810361087f5761087e610825565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826108aa565b6108f186836108aa565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061093861093361092e84610909565b610913565b610909565b9050919050565b6000819050919050565b6109528361091d565b61096661095e8261093f565b8484546108b7565b825550505050565b600090565b61097b61096e565b610986818484610949565b505050565b5b818110156109aa5761099f600082610973565b60018101905061098c565b5050565b601f8211156109ef576109c081610885565b6109c98461089a565b810160208510156109d8578190505b6109ec6109e48561089a565b83018261098b565b50505b505050565b600082821c905092915050565b6000610a12600019846008026109f4565b1980831691505092915050565b6000610a2b8383610a01565b9150826002028217905092915050565b610a4482610582565b67ffffffffffffffff811115610a5d57610a5c610668565b5b610a678254610854565b610a728282856109ae565b600060209050601f831160018114610aa55760008415610a93578287015190505b610a9d8582610a1f565b865550610b05565b601f198416610ab386610885565b60005b82811015610adb57848901518255600182019150602085019450602081019050610ab6565b86831015610af85784890151610af4601f891682610a01565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b610b2081610b0d565b82525050565b6000602082019050610b3b6000830184610b17565b9291505056fea2646970667358221220168d5cb742f6a49b7de4aa65eaf16009d06659d1a1b819777e7a63b0f619967764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93 DUP2 PUSH2 0x99 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x188 DUP3 PUSH2 0x15D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x198 DUP2 PUSH2 0x17D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB77 DUP1 PUSH2 0x1C8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20357048 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xBAD5B133 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0xD4D03F10 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x127 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x1C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x80A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x25C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x146 SWAP1 PUSH2 0x854 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x172 SWAP1 PUSH2 0x854 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x194 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x390 JUMP JUMPDEST PUSH2 0x1D9 PUSH1 0x0 PUSH2 0x417 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x251 SWAP1 PUSH2 0x854 JUMP JUMPDEST SWAP1 POP GT SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x264 PUSH2 0x390 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2F52C77C79B4D2EF9A6BB1B4C15FA01856ECD7474893C9B9A681C8428CBA2797 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x312 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x384 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38D DUP2 PUSH2 0x417 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x398 PUSH2 0x4DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B6 PUSH2 0x1DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x415 JUMPI PUSH2 0x3D9 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x522 DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x532 DUP2 PUSH2 0x517 JUMP JUMPDEST DUP2 EQ PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x54F DUP2 PUSH2 0x529 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56B JUMPI PUSH2 0x56A PUSH2 0x4ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x579 DUP5 DUP3 DUP6 ADD PUSH2 0x540 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5BC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E4 DUP3 PUSH2 0x582 JUMP JUMPDEST PUSH2 0x5EE DUP2 DUP6 PUSH2 0x58D JUMP JUMPDEST SWAP4 POP PUSH2 0x5FE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x59E JUMP JUMPDEST PUSH2 0x607 DUP2 PUSH2 0x5C8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x62C DUP2 DUP5 PUSH2 0x5D9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x63D DUP2 PUSH2 0x517 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x658 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x634 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x6A0 DUP3 PUSH2 0x5C8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x6BF JUMPI PUSH2 0x6BE PUSH2 0x668 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D2 PUSH2 0x4E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x6DE DUP3 DUP3 PUSH2 0x697 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6FE JUMPI PUSH2 0x6FD PUSH2 0x668 JUMP JUMPDEST JUMPDEST PUSH2 0x707 DUP3 PUSH2 0x5C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 PUSH2 0x731 DUP5 PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x752 JUMPI PUSH2 0x751 PUSH2 0x663 JUMP JUMPDEST JUMPDEST PUSH2 0x75D DUP5 DUP3 DUP6 PUSH2 0x714 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x77A JUMPI PUSH2 0x779 PUSH2 0x65E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x78A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x723 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7AA JUMPI PUSH2 0x7A9 PUSH2 0x4ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7B8 DUP6 DUP3 DUP7 ADD PUSH2 0x540 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7D9 JUMPI PUSH2 0x7D8 PUSH2 0x4F2 JUMP JUMPDEST JUMPDEST PUSH2 0x7E5 DUP6 DUP3 DUP7 ADD PUSH2 0x765 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x804 DUP2 PUSH2 0x7EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x81F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x86C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x87F JUMPI PUSH2 0x87E PUSH2 0x825 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x8E7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x8AA JUMP JUMPDEST PUSH2 0x8F1 DUP7 DUP4 PUSH2 0x8AA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x938 PUSH2 0x933 PUSH2 0x92E DUP5 PUSH2 0x909 JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x952 DUP4 PUSH2 0x91D JUMP JUMPDEST PUSH2 0x966 PUSH2 0x95E DUP3 PUSH2 0x93F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x8B7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x97B PUSH2 0x96E JUMP JUMPDEST PUSH2 0x986 DUP2 DUP5 DUP5 PUSH2 0x949 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9AA JUMPI PUSH2 0x99F PUSH1 0x0 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x98C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9EF JUMPI PUSH2 0x9C0 DUP2 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x9C9 DUP5 PUSH2 0x89A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x9D8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x9EC PUSH2 0x9E4 DUP6 PUSH2 0x89A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x98B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA12 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x9F4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2B DUP4 DUP4 PUSH2 0xA01 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA44 DUP3 PUSH2 0x582 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA5D JUMPI PUSH2 0xA5C PUSH2 0x668 JUMP JUMPDEST JUMPDEST PUSH2 0xA67 DUP3 SLOAD PUSH2 0x854 JUMP JUMPDEST PUSH2 0xA72 DUP3 DUP3 DUP6 PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xAA5 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xA93 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA9D DUP6 DUP3 PUSH2 0xA1F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xAB3 DUP7 PUSH2 0x885 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xADB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAB6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xAF8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xAF4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xA01 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB20 DUP2 PUSH2 0xB0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB3B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND DUP14 0x5C 0xB7 TIMESTAMP 0xF6 LOG4 SWAP12 PUSH30 0xE4AA65EAF16009D06659D1A1B819777E7A63B0F619967764736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"112:613:23:-:0;;;280:36;;;;;;;;;;302:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;112:613:23;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:29:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;112:613:23:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":912,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1130":{"entryPoint":1243,"id":1130,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":1047,"id":146,"parameterSlots":1,"returnSlots":0},"@attestKYC_8492":{"entryPoint":604,"id":8492,"parameterSlots":2,"returnSlots":0},"@attestations_8455":{"entryPoint":295,"id":8455,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":475,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":455,"id":98,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":778,"id":126,"parameterSlots":1,"returnSlots":0},"@verifyAttestation_8509":{"entryPoint":516,"id":8509,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":1827,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1344,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":1893,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1365,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":1939,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1588,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2043,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2839,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":1497,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1603,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2058,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":2854,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":1554,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1736,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1251,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":1763,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage":{"entryPoint":2181,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1410,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":1421,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_bytes_storage":{"entryPoint":2478,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1303,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2031,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2829,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1271,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2313,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2443,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":2333,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":2619,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":1812,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1438,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2202,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2132,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2591,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1687,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":2323,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2561,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":2085,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1640,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2367,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1630,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1635,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1266,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1261,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1480,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2218,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2548,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2419,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2231,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2377,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1321,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2414,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11410:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"379:81:29","statements":[{"nodeType":"YulAssignment","src":"389:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:29"},"nodeType":"YulFunctionCall","src":"400:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:29","type":""}],"src":"334:126:29"},{"body":{"nodeType":"YulBlock","src":"511:51:29","statements":[{"nodeType":"YulAssignment","src":"521:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:29"},"nodeType":"YulFunctionCall","src":"532:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:29","type":""}],"src":"466:96:29"},{"body":{"nodeType":"YulBlock","src":"611:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:29"},"nodeType":"YulFunctionCall","src":"670:12:29"},"nodeType":"YulExpressionStatement","src":"670:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:29"},"nodeType":"YulFunctionCall","src":"641:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:29"},"nodeType":"YulFunctionCall","src":"631:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:29"},"nodeType":"YulFunctionCall","src":"624:43:29"},"nodeType":"YulIf","src":"621:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:29","type":""}],"src":"568:122:29"},{"body":{"nodeType":"YulBlock","src":"748:87:29","statements":[{"nodeType":"YulAssignment","src":"758:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:29"},"nodeType":"YulFunctionCall","src":"767:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:29"},"nodeType":"YulFunctionCall","src":"796:33:29"},"nodeType":"YulExpressionStatement","src":"796:33:29"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:29","type":""}],"src":"696:139:29"},{"body":{"nodeType":"YulBlock","src":"907:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:29"},"nodeType":"YulFunctionCall","src":"955:79:29"},"nodeType":"YulExpressionStatement","src":"955:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:29"},"nodeType":"YulFunctionCall","src":"924:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:29"},"nodeType":"YulFunctionCall","src":"920:32:29"},"nodeType":"YulIf","src":"917:119:29"},{"nodeType":"YulBlock","src":"1046:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:29","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:29"},"nodeType":"YulFunctionCall","src":"1121:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:29"},"nodeType":"YulFunctionCall","src":"1100:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:29","type":""}],"src":"841:329:29"},{"body":{"nodeType":"YulBlock","src":"1234:40:29","statements":[{"nodeType":"YulAssignment","src":"1245:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1261:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1255:5:29"},"nodeType":"YulFunctionCall","src":"1255:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1245:6:29"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1217:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1227:6:29","type":""}],"src":"1176:98:29"},{"body":{"nodeType":"YulBlock","src":"1375:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1392:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1397:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1385:6:29"},"nodeType":"YulFunctionCall","src":"1385:19:29"},"nodeType":"YulExpressionStatement","src":"1385:19:29"},{"nodeType":"YulAssignment","src":"1413:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1432:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"1437:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1428:3:29"},"nodeType":"YulFunctionCall","src":"1428:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1413:11:29"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1347:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1352:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1363:11:29","type":""}],"src":"1280:168:29"},{"body":{"nodeType":"YulBlock","src":"1516:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1526:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1535:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1530:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1595:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1620:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1625:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1616:3:29"},"nodeType":"YulFunctionCall","src":"1616:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1639:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1644:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1635:3:29"},"nodeType":"YulFunctionCall","src":"1635:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1629:5:29"},"nodeType":"YulFunctionCall","src":"1629:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1609:6:29"},"nodeType":"YulFunctionCall","src":"1609:39:29"},"nodeType":"YulExpressionStatement","src":"1609:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1556:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"1559:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1553:2:29"},"nodeType":"YulFunctionCall","src":"1553:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1567:19:29","statements":[{"nodeType":"YulAssignment","src":"1569:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1578:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"1581:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1574:3:29"},"nodeType":"YulFunctionCall","src":"1574:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1569:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"1549:3:29","statements":[]},"src":"1545:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1678:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1683:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1674:3:29"},"nodeType":"YulFunctionCall","src":"1674:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"1692:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1667:6:29"},"nodeType":"YulFunctionCall","src":"1667:27:29"},"nodeType":"YulExpressionStatement","src":"1667:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1498:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1503:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1508:6:29","type":""}],"src":"1454:246:29"},{"body":{"nodeType":"YulBlock","src":"1754:54:29","statements":[{"nodeType":"YulAssignment","src":"1764:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1782:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1789:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:29"},"nodeType":"YulFunctionCall","src":"1778:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1798:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1794:3:29"},"nodeType":"YulFunctionCall","src":"1794:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1774:3:29"},"nodeType":"YulFunctionCall","src":"1774:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1764:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1737:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1747:6:29","type":""}],"src":"1706:102:29"},{"body":{"nodeType":"YulBlock","src":"1904:283:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1914:52:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1960:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1928:31:29"},"nodeType":"YulFunctionCall","src":"1928:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1918:6:29","type":""}]},{"nodeType":"YulAssignment","src":"1975:77:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2040:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2045:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1982:57:29"},"nodeType":"YulFunctionCall","src":"1982:70:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1975:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2107:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2096:3:29"},"nodeType":"YulFunctionCall","src":"2096:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"2114:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2119:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2061:34:29"},"nodeType":"YulFunctionCall","src":"2061:65:29"},"nodeType":"YulExpressionStatement","src":"2061:65:29"},{"nodeType":"YulAssignment","src":"2135:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2146:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2173:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2151:21:29"},"nodeType":"YulFunctionCall","src":"2151:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2142:3:29"},"nodeType":"YulFunctionCall","src":"2142:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2135:3:29"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1885:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1892:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1900:3:29","type":""}],"src":"1814:373:29"},{"body":{"nodeType":"YulBlock","src":"2309:193:29","statements":[{"nodeType":"YulAssignment","src":"2319:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2331:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2342:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2327:3:29"},"nodeType":"YulFunctionCall","src":"2327:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2319:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2366:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2377:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2362:3:29"},"nodeType":"YulFunctionCall","src":"2362:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2385:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2391:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2381:3:29"},"nodeType":"YulFunctionCall","src":"2381:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2355:6:29"},"nodeType":"YulFunctionCall","src":"2355:47:29"},"nodeType":"YulExpressionStatement","src":"2355:47:29"},{"nodeType":"YulAssignment","src":"2411:84:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2481:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"2490:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2419:61:29"},"nodeType":"YulFunctionCall","src":"2419:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2411:4:29"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2281:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2293:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2304:4:29","type":""}],"src":"2193:309:29"},{"body":{"nodeType":"YulBlock","src":"2573:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2590:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2613:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2595:17:29"},"nodeType":"YulFunctionCall","src":"2595:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2583:6:29"},"nodeType":"YulFunctionCall","src":"2583:37:29"},"nodeType":"YulExpressionStatement","src":"2583:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2561:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2568:3:29","type":""}],"src":"2508:118:29"},{"body":{"nodeType":"YulBlock","src":"2730:124:29","statements":[{"nodeType":"YulAssignment","src":"2740:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2752:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2763:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2748:3:29"},"nodeType":"YulFunctionCall","src":"2748:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2740:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2820:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2833:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2844:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2829:3:29"},"nodeType":"YulFunctionCall","src":"2829:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2776:43:29"},"nodeType":"YulFunctionCall","src":"2776:71:29"},"nodeType":"YulExpressionStatement","src":"2776:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2702:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2714:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2725:4:29","type":""}],"src":"2632:222:29"},{"body":{"nodeType":"YulBlock","src":"2949:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2966:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2969:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2959:6:29"},"nodeType":"YulFunctionCall","src":"2959:12:29"},"nodeType":"YulExpressionStatement","src":"2959:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2860:117:29"},{"body":{"nodeType":"YulBlock","src":"3072:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3089:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3092:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3082:6:29"},"nodeType":"YulFunctionCall","src":"3082:12:29"},"nodeType":"YulExpressionStatement","src":"3082:12:29"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"2983:117:29"},{"body":{"nodeType":"YulBlock","src":"3134:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3151:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3154:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3144:6:29"},"nodeType":"YulFunctionCall","src":"3144:88:29"},"nodeType":"YulExpressionStatement","src":"3144:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3248:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3251:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3241:6:29"},"nodeType":"YulFunctionCall","src":"3241:15:29"},"nodeType":"YulExpressionStatement","src":"3241:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3275:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3265:6:29"},"nodeType":"YulFunctionCall","src":"3265:15:29"},"nodeType":"YulExpressionStatement","src":"3265:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3106:180:29"},{"body":{"nodeType":"YulBlock","src":"3335:238:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3345:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3367:6:29"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3397:4:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3375:21:29"},"nodeType":"YulFunctionCall","src":"3375:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3363:3:29"},"nodeType":"YulFunctionCall","src":"3363:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3349:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3514:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3516:16:29"},"nodeType":"YulFunctionCall","src":"3516:18:29"},"nodeType":"YulExpressionStatement","src":"3516:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3457:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"3469:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3454:2:29"},"nodeType":"YulFunctionCall","src":"3454:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3493:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3505:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3490:2:29"},"nodeType":"YulFunctionCall","src":"3490:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3451:2:29"},"nodeType":"YulFunctionCall","src":"3451:62:29"},"nodeType":"YulIf","src":"3448:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3552:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3556:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3545:6:29"},"nodeType":"YulFunctionCall","src":"3545:22:29"},"nodeType":"YulExpressionStatement","src":"3545:22:29"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3321:6:29","type":""},{"name":"size","nodeType":"YulTypedName","src":"3329:4:29","type":""}],"src":"3292:281:29"},{"body":{"nodeType":"YulBlock","src":"3620:88:29","statements":[{"nodeType":"YulAssignment","src":"3630:30:29","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3640:18:29"},"nodeType":"YulFunctionCall","src":"3640:20:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3630:6:29"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3689:6:29"},{"name":"size","nodeType":"YulIdentifier","src":"3697:4:29"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3669:19:29"},"nodeType":"YulFunctionCall","src":"3669:33:29"},"nodeType":"YulExpressionStatement","src":"3669:33:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3604:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3613:6:29","type":""}],"src":"3579:129:29"},{"body":{"nodeType":"YulBlock","src":"3780:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"3885:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3887:16:29"},"nodeType":"YulFunctionCall","src":"3887:18:29"},"nodeType":"YulExpressionStatement","src":"3887:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3857:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3865:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3854:2:29"},"nodeType":"YulFunctionCall","src":"3854:30:29"},"nodeType":"YulIf","src":"3851:56:29"},{"nodeType":"YulAssignment","src":"3917:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3947:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3925:21:29"},"nodeType":"YulFunctionCall","src":"3925:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3917:4:29"}]},{"nodeType":"YulAssignment","src":"3991:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4003:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"4009:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3999:3:29"},"nodeType":"YulFunctionCall","src":"3999:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3991:4:29"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3764:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3775:4:29","type":""}],"src":"3714:307:29"},{"body":{"nodeType":"YulBlock","src":"4091:82:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4114:3:29"},{"name":"src","nodeType":"YulIdentifier","src":"4119:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"4124:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4101:12:29"},"nodeType":"YulFunctionCall","src":"4101:30:29"},"nodeType":"YulExpressionStatement","src":"4101:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4151:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"4156:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4147:3:29"},"nodeType":"YulFunctionCall","src":"4147:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"4165:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4140:6:29"},"nodeType":"YulFunctionCall","src":"4140:27:29"},"nodeType":"YulExpressionStatement","src":"4140:27:29"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4073:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4078:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"4083:6:29","type":""}],"src":"4027:146:29"},{"body":{"nodeType":"YulBlock","src":"4262:340:29","statements":[{"nodeType":"YulAssignment","src":"4272:74:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4338:6:29"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4297:40:29"},"nodeType":"YulFunctionCall","src":"4297:48:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4281:15:29"},"nodeType":"YulFunctionCall","src":"4281:65:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4272:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4362:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"4369:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4355:6:29"},"nodeType":"YulFunctionCall","src":"4355:21:29"},"nodeType":"YulExpressionStatement","src":"4355:21:29"},{"nodeType":"YulVariableDeclaration","src":"4385:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4400:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"4407:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4396:3:29"},"nodeType":"YulFunctionCall","src":"4396:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4389:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4450:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4452:77:29"},"nodeType":"YulFunctionCall","src":"4452:79:29"},"nodeType":"YulExpressionStatement","src":"4452:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4431:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"4436:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4427:3:29"},"nodeType":"YulFunctionCall","src":"4427:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"4445:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4424:2:29"},"nodeType":"YulFunctionCall","src":"4424:25:29"},"nodeType":"YulIf","src":"4421:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4579:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"4584:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"4589:6:29"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4542:36:29"},"nodeType":"YulFunctionCall","src":"4542:54:29"},"nodeType":"YulExpressionStatement","src":"4542:54:29"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4235:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"4240:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"4248:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4256:5:29","type":""}],"src":"4179:423:29"},{"body":{"nodeType":"YulBlock","src":"4682:277:29","statements":[{"body":{"nodeType":"YulBlock","src":"4731:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4733:77:29"},"nodeType":"YulFunctionCall","src":"4733:79:29"},"nodeType":"YulExpressionStatement","src":"4733:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4710:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4718:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4706:3:29"},"nodeType":"YulFunctionCall","src":"4706:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"4725:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4702:3:29"},"nodeType":"YulFunctionCall","src":"4702:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4695:6:29"},"nodeType":"YulFunctionCall","src":"4695:35:29"},"nodeType":"YulIf","src":"4692:122:29"},{"nodeType":"YulVariableDeclaration","src":"4823:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4837:12:29"},"nodeType":"YulFunctionCall","src":"4837:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4827:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4866:87:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4926:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4934:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4922:3:29"},"nodeType":"YulFunctionCall","src":"4922:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"4941:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"4949:3:29"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4875:46:29"},"nodeType":"YulFunctionCall","src":"4875:78:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4866:5:29"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4660:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"4668:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4676:5:29","type":""}],"src":"4621:338:29"},{"body":{"nodeType":"YulBlock","src":"5057:560:29","statements":[{"body":{"nodeType":"YulBlock","src":"5103:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5105:77:29"},"nodeType":"YulFunctionCall","src":"5105:79:29"},"nodeType":"YulExpressionStatement","src":"5105:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5078:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5087:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5074:3:29"},"nodeType":"YulFunctionCall","src":"5074:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"5099:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5070:3:29"},"nodeType":"YulFunctionCall","src":"5070:32:29"},"nodeType":"YulIf","src":"5067:119:29"},{"nodeType":"YulBlock","src":"5196:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5211:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5225:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5215:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5240:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5275:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5286:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5271:3:29"},"nodeType":"YulFunctionCall","src":"5271:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5295:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5250:20:29"},"nodeType":"YulFunctionCall","src":"5250:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5240:6:29"}]}]},{"nodeType":"YulBlock","src":"5323:287:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5338:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5369:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5380:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5365:3:29"},"nodeType":"YulFunctionCall","src":"5365:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5352:12:29"},"nodeType":"YulFunctionCall","src":"5352:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5342:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"5431:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5433:77:29"},"nodeType":"YulFunctionCall","src":"5433:79:29"},"nodeType":"YulExpressionStatement","src":"5433:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5403:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5411:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5400:2:29"},"nodeType":"YulFunctionCall","src":"5400:30:29"},"nodeType":"YulIf","src":"5397:117:29"},{"nodeType":"YulAssignment","src":"5528:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5572:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5583:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:29"},"nodeType":"YulFunctionCall","src":"5568:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5592:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5538:29:29"},"nodeType":"YulFunctionCall","src":"5538:62:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5528:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5019:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5030:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5042:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5050:6:29","type":""}],"src":"4965:652:29"},{"body":{"nodeType":"YulBlock","src":"5665:48:29","statements":[{"nodeType":"YulAssignment","src":"5675:32:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5700:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5693:6:29"},"nodeType":"YulFunctionCall","src":"5693:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5686:6:29"},"nodeType":"YulFunctionCall","src":"5686:21:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5675:7:29"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5647:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5657:7:29","type":""}],"src":"5623:90:29"},{"body":{"nodeType":"YulBlock","src":"5778:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5795:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5815:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5800:14:29"},"nodeType":"YulFunctionCall","src":"5800:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5788:6:29"},"nodeType":"YulFunctionCall","src":"5788:34:29"},"nodeType":"YulExpressionStatement","src":"5788:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5766:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5773:3:29","type":""}],"src":"5719:109:29"},{"body":{"nodeType":"YulBlock","src":"5926:118:29","statements":[{"nodeType":"YulAssignment","src":"5936:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5948:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5959:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5944:3:29"},"nodeType":"YulFunctionCall","src":"5944:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5936:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6010:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6023:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6034:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6019:3:29"},"nodeType":"YulFunctionCall","src":"6019:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5972:37:29"},"nodeType":"YulFunctionCall","src":"5972:65:29"},"nodeType":"YulExpressionStatement","src":"5972:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5898:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5910:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5921:4:29","type":""}],"src":"5834:210:29"},{"body":{"nodeType":"YulBlock","src":"6078:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6095:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6098:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6088:6:29"},"nodeType":"YulFunctionCall","src":"6088:88:29"},"nodeType":"YulExpressionStatement","src":"6088:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6192:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6195:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6185:6:29"},"nodeType":"YulFunctionCall","src":"6185:15:29"},"nodeType":"YulExpressionStatement","src":"6185:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6216:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6219:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6209:6:29"},"nodeType":"YulFunctionCall","src":"6209:15:29"},"nodeType":"YulExpressionStatement","src":"6209:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6050:180:29"},{"body":{"nodeType":"YulBlock","src":"6287:269:29","statements":[{"nodeType":"YulAssignment","src":"6297:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6311:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"6317:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6307:3:29"},"nodeType":"YulFunctionCall","src":"6307:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6297:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"6328:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6358:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"6364:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6354:3:29"},"nodeType":"YulFunctionCall","src":"6354:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6332:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6405:51:29","statements":[{"nodeType":"YulAssignment","src":"6419:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6433:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6441:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6429:3:29"},"nodeType":"YulFunctionCall","src":"6429:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6419:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6385:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6378:6:29"},"nodeType":"YulFunctionCall","src":"6378:26:29"},"nodeType":"YulIf","src":"6375:81:29"},{"body":{"nodeType":"YulBlock","src":"6508:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6522:16:29"},"nodeType":"YulFunctionCall","src":"6522:18:29"},"nodeType":"YulExpressionStatement","src":"6522:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6472:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6495:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6503:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6492:2:29"},"nodeType":"YulFunctionCall","src":"6492:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6469:2:29"},"nodeType":"YulFunctionCall","src":"6469:38:29"},"nodeType":"YulIf","src":"6466:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6271:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6280:6:29","type":""}],"src":"6236:320:29"},{"body":{"nodeType":"YulBlock","src":"6615:87:29","statements":[{"nodeType":"YulAssignment","src":"6625:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"6633:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6625:4:29"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6653:1:29","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"6656:3:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6646:6:29"},"nodeType":"YulFunctionCall","src":"6646:14:29"},"nodeType":"YulExpressionStatement","src":"6646:14:29"},{"nodeType":"YulAssignment","src":"6669:26:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6687:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6690:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"6677:9:29"},"nodeType":"YulFunctionCall","src":"6677:18:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6669:4:29"}]}]},"name":"array_dataslot_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6602:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"6610:4:29","type":""}],"src":"6562:140:29"},{"body":{"nodeType":"YulBlock","src":"6752:49:29","statements":[{"nodeType":"YulAssignment","src":"6762:33:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6780:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"6787:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6776:3:29"},"nodeType":"YulFunctionCall","src":"6776:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"6792:2:29","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6772:3:29"},"nodeType":"YulFunctionCall","src":"6772:23:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6762:6:29"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6735:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6745:6:29","type":""}],"src":"6708:93:29"},{"body":{"nodeType":"YulBlock","src":"6860:54:29","statements":[{"nodeType":"YulAssignment","src":"6870:37:29","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6895:4:29"},{"name":"value","nodeType":"YulIdentifier","src":"6901:5:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6891:3:29"},"nodeType":"YulFunctionCall","src":"6891:16:29"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6870:8:29"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6835:4:29","type":""},{"name":"value","nodeType":"YulTypedName","src":"6841:5:29","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6851:8:29","type":""}],"src":"6807:107:29"},{"body":{"nodeType":"YulBlock","src":"6996:317:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7006:35:29","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"7027:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"7039:1:29","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7023:3:29"},"nodeType":"YulFunctionCall","src":"7023:18:29"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"7010:9:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7050:109:29","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"7081:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7092:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"7062:18:29"},"nodeType":"YulFunctionCall","src":"7062:97:29"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7054:4:29","type":""}]},{"nodeType":"YulAssignment","src":"7168:51:29","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"7199:9:29"},{"name":"toInsert","nodeType":"YulIdentifier","src":"7210:8:29"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"7180:18:29"},"nodeType":"YulFunctionCall","src":"7180:39:29"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"7168:8:29"}]},{"nodeType":"YulAssignment","src":"7228:30:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7241:5:29"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"7252:4:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7248:3:29"},"nodeType":"YulFunctionCall","src":"7248:9:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7237:3:29"},"nodeType":"YulFunctionCall","src":"7237:21:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7228:5:29"}]},{"nodeType":"YulAssignment","src":"7267:40:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7280:5:29"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"7291:8:29"},{"name":"mask","nodeType":"YulIdentifier","src":"7301:4:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7287:3:29"},"nodeType":"YulFunctionCall","src":"7287:19:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7277:2:29"},"nodeType":"YulFunctionCall","src":"7277:30:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7267:6:29"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6957:5:29","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"6964:10:29","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"6976:8:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6989:6:29","type":""}],"src":"6920:393:29"},{"body":{"nodeType":"YulBlock","src":"7364:32:29","statements":[{"nodeType":"YulAssignment","src":"7374:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"7385:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7374:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7346:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7356:7:29","type":""}],"src":"7319:77:29"},{"body":{"nodeType":"YulBlock","src":"7434:28:29","statements":[{"nodeType":"YulAssignment","src":"7444:12:29","value":{"name":"value","nodeType":"YulIdentifier","src":"7451:5:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7444:3:29"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7420:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7430:3:29","type":""}],"src":"7402:60:29"},{"body":{"nodeType":"YulBlock","src":"7528:82:29","statements":[{"nodeType":"YulAssignment","src":"7538:66:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7596:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7578:17:29"},"nodeType":"YulFunctionCall","src":"7578:24:29"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"7569:8:29"},"nodeType":"YulFunctionCall","src":"7569:34:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7551:17:29"},"nodeType":"YulFunctionCall","src":"7551:53:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7538:9:29"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7508:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7518:9:29","type":""}],"src":"7468:142:29"},{"body":{"nodeType":"YulBlock","src":"7663:28:29","statements":[{"nodeType":"YulAssignment","src":"7673:12:29","value":{"name":"value","nodeType":"YulIdentifier","src":"7680:5:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7673:3:29"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7649:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7659:3:29","type":""}],"src":"7616:75:29"},{"body":{"nodeType":"YulBlock","src":"7773:193:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7783:63:29","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"7838:7:29"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7807:30:29"},"nodeType":"YulFunctionCall","src":"7807:39:29"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"7787:16:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7862:4:29"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7902:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7896:5:29"},"nodeType":"YulFunctionCall","src":"7896:11:29"},{"name":"offset","nodeType":"YulIdentifier","src":"7909:6:29"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"7941:16:29"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"7917:23:29"},"nodeType":"YulFunctionCall","src":"7917:41:29"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"7868:27:29"},"nodeType":"YulFunctionCall","src":"7868:91:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7855:6:29"},"nodeType":"YulFunctionCall","src":"7855:105:29"},"nodeType":"YulExpressionStatement","src":"7855:105:29"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7750:4:29","type":""},{"name":"offset","nodeType":"YulTypedName","src":"7756:6:29","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"7764:7:29","type":""}],"src":"7697:269:29"},{"body":{"nodeType":"YulBlock","src":"8021:24:29","statements":[{"nodeType":"YulAssignment","src":"8031:8:29","value":{"kind":"number","nodeType":"YulLiteral","src":"8038:1:29","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8031:3:29"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8017:3:29","type":""}],"src":"7972:73:29"},{"body":{"nodeType":"YulBlock","src":"8104:136:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8114:46:29","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"8128:30:29"},"nodeType":"YulFunctionCall","src":"8128:32:29"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"8118:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8213:4:29"},{"name":"offset","nodeType":"YulIdentifier","src":"8219:6:29"},{"name":"zero_0","nodeType":"YulIdentifier","src":"8227:6:29"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8169:43:29"},"nodeType":"YulFunctionCall","src":"8169:65:29"},"nodeType":"YulExpressionStatement","src":"8169:65:29"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"8090:4:29","type":""},{"name":"offset","nodeType":"YulTypedName","src":"8096:6:29","type":""}],"src":"8051:189:29"},{"body":{"nodeType":"YulBlock","src":"8296:136:29","statements":[{"body":{"nodeType":"YulBlock","src":"8363:63:29","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8407:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"8414:1:29","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"8377:29:29"},"nodeType":"YulFunctionCall","src":"8377:39:29"},"nodeType":"YulExpressionStatement","src":"8377:39:29"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8316:5:29"},{"name":"end","nodeType":"YulIdentifier","src":"8323:3:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8313:2:29"},"nodeType":"YulFunctionCall","src":"8313:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8328:26:29","statements":[{"nodeType":"YulAssignment","src":"8330:22:29","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8343:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"8350:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8339:3:29"},"nodeType":"YulFunctionCall","src":"8339:13:29"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"8330:5:29"}]}]},"pre":{"nodeType":"YulBlock","src":"8310:2:29","statements":[]},"src":"8306:120:29"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"8284:5:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"8291:3:29","type":""}],"src":"8246:186:29"},{"body":{"nodeType":"YulBlock","src":"8516:463:29","statements":[{"body":{"nodeType":"YulBlock","src":"8542:430:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8556:53:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8603:5:29"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"8572:30:29"},"nodeType":"YulFunctionCall","src":"8572:37:29"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"8560:8:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8622:63:29","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8645:8:29"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8673:10:29"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"8655:17:29"},"nodeType":"YulFunctionCall","src":"8655:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8641:3:29"},"nodeType":"YulFunctionCall","src":"8641:44:29"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"8626:11:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8842:27:29","statements":[{"nodeType":"YulAssignment","src":"8844:23:29","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"8859:8:29"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"8844:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8826:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"8838:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8823:2:29"},"nodeType":"YulFunctionCall","src":"8823:18:29"},"nodeType":"YulIf","src":"8820:49:29"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"8911:11:29"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8928:8:29"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8956:3:29"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"8938:17:29"},"nodeType":"YulFunctionCall","src":"8938:22:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8924:3:29"},"nodeType":"YulFunctionCall","src":"8924:37:29"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"8882:28:29"},"nodeType":"YulFunctionCall","src":"8882:80:29"},"nodeType":"YulExpressionStatement","src":"8882:80:29"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8533:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"8538:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8530:2:29"},"nodeType":"YulFunctionCall","src":"8530:11:29"},"nodeType":"YulIf","src":"8527:445:29"}]},"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8492:5:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"8499:3:29","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"8504:10:29","type":""}],"src":"8438:541:29"},{"body":{"nodeType":"YulBlock","src":"9048:54:29","statements":[{"nodeType":"YulAssignment","src":"9058:37:29","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"9083:4:29"},{"name":"value","nodeType":"YulIdentifier","src":"9089:5:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9079:3:29"},"nodeType":"YulFunctionCall","src":"9079:16:29"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"9058:8:29"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"9023:4:29","type":""},{"name":"value","nodeType":"YulTypedName","src":"9029:5:29","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"9039:8:29","type":""}],"src":"8985:117:29"},{"body":{"nodeType":"YulBlock","src":"9159:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9169:68:29","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9218:1:29","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"9221:5:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9214:3:29"},"nodeType":"YulFunctionCall","src":"9214:13:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9233:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9229:3:29"},"nodeType":"YulFunctionCall","src":"9229:6:29"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"9185:28:29"},"nodeType":"YulFunctionCall","src":"9185:51:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9181:3:29"},"nodeType":"YulFunctionCall","src":"9181:56:29"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"9173:4:29","type":""}]},{"nodeType":"YulAssignment","src":"9246:25:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9260:4:29"},{"name":"mask","nodeType":"YulIdentifier","src":"9266:4:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9256:3:29"},"nodeType":"YulFunctionCall","src":"9256:15:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9246:6:29"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9136:4:29","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"9142:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"9152:6:29","type":""}],"src":"9108:169:29"},{"body":{"nodeType":"YulBlock","src":"9363:214:29","statements":[{"nodeType":"YulAssignment","src":"9496:37:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9523:4:29"},{"name":"len","nodeType":"YulIdentifier","src":"9529:3:29"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"9504:18:29"},"nodeType":"YulFunctionCall","src":"9504:29:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9496:4:29"}]},{"nodeType":"YulAssignment","src":"9542:29:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9553:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9563:1:29","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"9566:3:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9559:3:29"},"nodeType":"YulFunctionCall","src":"9559:11:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9550:2:29"},"nodeType":"YulFunctionCall","src":"9550:21:29"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"9542:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9344:4:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"9350:3:29","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"9358:4:29","type":""}],"src":"9282:295:29"},{"body":{"nodeType":"YulBlock","src":"9672:1300:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9683:50:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9729:3:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9697:31:29"},"nodeType":"YulFunctionCall","src":"9697:36:29"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"9687:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"9818:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9820:16:29"},"nodeType":"YulFunctionCall","src":"9820:18:29"},"nodeType":"YulExpressionStatement","src":"9820:18:29"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9790:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9798:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9787:2:29"},"nodeType":"YulFunctionCall","src":"9787:30:29"},"nodeType":"YulIf","src":"9784:56:29"},{"nodeType":"YulVariableDeclaration","src":"9850:52:29","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9896:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9890:5:29"},"nodeType":"YulFunctionCall","src":"9890:11:29"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"9864:25:29"},"nodeType":"YulFunctionCall","src":"9864:38:29"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"9854:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9994:4:29"},{"name":"oldLen","nodeType":"YulIdentifier","src":"10000:6:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"10008:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulIdentifier","src":"9949:44:29"},"nodeType":"YulFunctionCall","src":"9949:66:29"},"nodeType":"YulExpressionStatement","src":"9949:66:29"},{"nodeType":"YulVariableDeclaration","src":"10025:18:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10042:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"10029:9:29","type":""}]},{"nodeType":"YulAssignment","src":"10053:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10066:4:29","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10053:9:29"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"10117:610:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10131:37:29","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10150:6:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10162:4:29","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10158:3:29"},"nodeType":"YulFunctionCall","src":"10158:9:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10146:3:29"},"nodeType":"YulFunctionCall","src":"10146:22:29"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"10135:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10182:50:29","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10227:4:29"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"10196:30:29"},"nodeType":"YulFunctionCall","src":"10196:36:29"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"10186:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10245:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10254:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10249:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"10313:163:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10338:6:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10356:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10361:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10352:3:29"},"nodeType":"YulFunctionCall","src":"10352:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10346:5:29"},"nodeType":"YulFunctionCall","src":"10346:26:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10331:6:29"},"nodeType":"YulFunctionCall","src":"10331:42:29"},"nodeType":"YulExpressionStatement","src":"10331:42:29"},{"nodeType":"YulAssignment","src":"10390:24:29","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10404:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"10412:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10400:3:29"},"nodeType":"YulFunctionCall","src":"10400:14:29"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10390:6:29"}]},{"nodeType":"YulAssignment","src":"10431:31:29","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10448:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10459:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10444:3:29"},"nodeType":"YulFunctionCall","src":"10444:18:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10431:9:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10279:1:29"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"10282:7:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10276:2:29"},"nodeType":"YulFunctionCall","src":"10276:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10291:21:29","statements":[{"nodeType":"YulAssignment","src":"10293:17:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10302:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"10305:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10298:3:29"},"nodeType":"YulFunctionCall","src":"10298:12:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10293:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"10272:3:29","statements":[]},"src":"10268:208:29"},{"body":{"nodeType":"YulBlock","src":"10512:156:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10530:43:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10557:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10562:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10553:3:29"},"nodeType":"YulFunctionCall","src":"10553:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10547:5:29"},"nodeType":"YulFunctionCall","src":"10547:26:29"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"10534:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10597:6:29"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"10624:9:29"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10639:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"10647:4:29","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10635:3:29"},"nodeType":"YulFunctionCall","src":"10635:17:29"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"10605:18:29"},"nodeType":"YulFunctionCall","src":"10605:48:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10590:6:29"},"nodeType":"YulFunctionCall","src":"10590:64:29"},"nodeType":"YulExpressionStatement","src":"10590:64:29"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"10495:7:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"10504:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10492:2:29"},"nodeType":"YulFunctionCall","src":"10492:19:29"},"nodeType":"YulIf","src":"10489:179:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10688:4:29"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10702:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"10710:1:29","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10698:3:29"},"nodeType":"YulFunctionCall","src":"10698:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"10714:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10694:3:29"},"nodeType":"YulFunctionCall","src":"10694:22:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10681:6:29"},"nodeType":"YulFunctionCall","src":"10681:36:29"},"nodeType":"YulExpressionStatement","src":"10681:36:29"}]},"nodeType":"YulCase","src":"10110:617:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10115:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"10744:222:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10758:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10771:1:29","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10762:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"10795:67:29","statements":[{"nodeType":"YulAssignment","src":"10813:35:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10832:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10837:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10828:3:29"},"nodeType":"YulFunctionCall","src":"10828:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10822:5:29"},"nodeType":"YulFunctionCall","src":"10822:26:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10813:5:29"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"10788:6:29"},"nodeType":"YulIf","src":"10785:77:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10882:4:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10941:5:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"10948:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"10888:52:29"},"nodeType":"YulFunctionCall","src":"10888:67:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10875:6:29"},"nodeType":"YulFunctionCall","src":"10875:81:29"},"nodeType":"YulExpressionStatement","src":"10875:81:29"}]},"nodeType":"YulCase","src":"10736:230:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10090:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"10098:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10087:2:29"},"nodeType":"YulFunctionCall","src":"10087:14:29"},"nodeType":"YulSwitch","src":"10080:886:29"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9661:4:29","type":""},{"name":"src","nodeType":"YulTypedName","src":"9667:3:29","type":""}],"src":"9582:1390:29"},{"body":{"nodeType":"YulBlock","src":"11023:32:29","statements":[{"nodeType":"YulAssignment","src":"11033:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"11044:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11033:7:29"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11005:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11015:7:29","type":""}],"src":"10978:77:29"},{"body":{"nodeType":"YulBlock","src":"11126:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11143:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11166:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"11148:17:29"},"nodeType":"YulFunctionCall","src":"11148:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11136:6:29"},"nodeType":"YulFunctionCall","src":"11136:37:29"},"nodeType":"YulExpressionStatement","src":"11136:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11114:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11121:3:29","type":""}],"src":"11061:118:29"},{"body":{"nodeType":"YulBlock","src":"11283:124:29","statements":[{"nodeType":"YulAssignment","src":"11293:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11305:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11316:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11301:3:29"},"nodeType":"YulFunctionCall","src":"11301:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11293:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11373:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11386:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11397:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11382:3:29"},"nodeType":"YulFunctionCall","src":"11382:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11329:43:29"},"nodeType":"YulFunctionCall","src":"11329:71:29"},"nodeType":"YulExpressionStatement","src":"11329:71:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11255:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11267:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11278:4:29","type":""}],"src":"11185:222:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100625760003560e01c80632035704814610067578063715018a6146100975780638da5cb5b146100a1578063bad5b133146100bf578063d4d03f10146100ef578063f2fde38b1461010b575b600080fd5b610081600480360381019061007c9190610555565b610127565b60405161008e9190610612565b60405180910390f35b61009f6101c7565b005b6100a96101db565b6040516100b69190610643565b60405180910390f35b6100d960048036038101906100d49190610793565b610204565b6040516100e6919061080a565b60405180910390f35b61010960048036038101906101049190610793565b61025c565b005b61012560048036038101906101209190610555565b61030a565b005b6001602052806000526040600020600091509050805461014690610854565b80601f016020809104026020016040519081016040528092919081815260200182805461017290610854565b80156101bf5780601f10610194576101008083540402835291602001916101bf565b820191906000526020600020905b8154815290600101906020018083116101a257829003601f168201915b505050505081565b6101cf610390565b6101d96000610417565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461025190610854565b905011905092915050565b610264610390565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090816102b09190610a3b565b508173ffffffffffffffffffffffffffffffffffffffff167f2f52c77c79b4d2ef9a6bb1b4c15fa01856ecd7474893c9b9a681c8428cba279782805190602001206040516102fe9190610b26565b60405180910390a25050565b610312610390565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161037b9190610643565b60405180910390fd5b61038d81610417565b50565b6103986104db565b73ffffffffffffffffffffffffffffffffffffffff166103b66101db565b73ffffffffffffffffffffffffffffffffffffffff1614610415576103d96104db565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161040c9190610643565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610522826104f7565b9050919050565b61053281610517565b811461053d57600080fd5b50565b60008135905061054f81610529565b92915050565b60006020828403121561056b5761056a6104ed565b5b600061057984828501610540565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105bc5780820151818401526020810190506105a1565b60008484015250505050565b6000601f19601f8301169050919050565b60006105e482610582565b6105ee818561058d565b93506105fe81856020860161059e565b610607816105c8565b840191505092915050565b6000602082019050818103600083015261062c81846105d9565b905092915050565b61063d81610517565b82525050565b60006020820190506106586000830184610634565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106a0826105c8565b810181811067ffffffffffffffff821117156106bf576106be610668565b5b80604052505050565b60006106d26104e3565b90506106de8282610697565b919050565b600067ffffffffffffffff8211156106fe576106fd610668565b5b610707826105c8565b9050602081019050919050565b82818337600083830152505050565b6000610736610731846106e3565b6106c8565b90508281526020810184848401111561075257610751610663565b5b61075d848285610714565b509392505050565b600082601f83011261077a5761077961065e565b5b813561078a848260208601610723565b91505092915050565b600080604083850312156107aa576107a96104ed565b5b60006107b885828601610540565b925050602083013567ffffffffffffffff8111156107d9576107d86104f2565b5b6107e585828601610765565b9150509250929050565b60008115159050919050565b610804816107ef565b82525050565b600060208201905061081f60008301846107fb565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061086c57607f821691505b60208210810361087f5761087e610825565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826108aa565b6108f186836108aa565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061093861093361092e84610909565b610913565b610909565b9050919050565b6000819050919050565b6109528361091d565b61096661095e8261093f565b8484546108b7565b825550505050565b600090565b61097b61096e565b610986818484610949565b505050565b5b818110156109aa5761099f600082610973565b60018101905061098c565b5050565b601f8211156109ef576109c081610885565b6109c98461089a565b810160208510156109d8578190505b6109ec6109e48561089a565b83018261098b565b50505b505050565b600082821c905092915050565b6000610a12600019846008026109f4565b1980831691505092915050565b6000610a2b8383610a01565b9150826002028217905092915050565b610a4482610582565b67ffffffffffffffff811115610a5d57610a5c610668565b5b610a678254610854565b610a728282856109ae565b600060209050601f831160018114610aa55760008415610a93578287015190505b610a9d8582610a1f565b865550610b05565b601f198416610ab386610885565b60005b82811015610adb57848901518255600182019150602085019450602081019050610ab6565b86831015610af85784890151610af4601f891682610a01565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b610b2081610b0d565b82525050565b6000602082019050610b3b6000830184610b17565b9291505056fea2646970667358221220168d5cb742f6a49b7de4aa65eaf16009d06659d1a1b819777e7a63b0f619967764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20357048 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xBAD5B133 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0xD4D03F10 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x127 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x1C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x80A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x25C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x146 SWAP1 PUSH2 0x854 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x172 SWAP1 PUSH2 0x854 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x194 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x390 JUMP JUMPDEST PUSH2 0x1D9 PUSH1 0x0 PUSH2 0x417 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x251 SWAP1 PUSH2 0x854 JUMP JUMPDEST SWAP1 POP GT SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x264 PUSH2 0x390 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2F52C77C79B4D2EF9A6BB1B4C15FA01856ECD7474893C9B9A681C8428CBA2797 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x312 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x384 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38D DUP2 PUSH2 0x417 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x398 PUSH2 0x4DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B6 PUSH2 0x1DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x415 JUMPI PUSH2 0x3D9 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x522 DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x532 DUP2 PUSH2 0x517 JUMP JUMPDEST DUP2 EQ PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x54F DUP2 PUSH2 0x529 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56B JUMPI PUSH2 0x56A PUSH2 0x4ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x579 DUP5 DUP3 DUP6 ADD PUSH2 0x540 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5BC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E4 DUP3 PUSH2 0x582 JUMP JUMPDEST PUSH2 0x5EE DUP2 DUP6 PUSH2 0x58D JUMP JUMPDEST SWAP4 POP PUSH2 0x5FE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x59E JUMP JUMPDEST PUSH2 0x607 DUP2 PUSH2 0x5C8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x62C DUP2 DUP5 PUSH2 0x5D9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x63D DUP2 PUSH2 0x517 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x658 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x634 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x6A0 DUP3 PUSH2 0x5C8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x6BF JUMPI PUSH2 0x6BE PUSH2 0x668 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D2 PUSH2 0x4E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x6DE DUP3 DUP3 PUSH2 0x697 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6FE JUMPI PUSH2 0x6FD PUSH2 0x668 JUMP JUMPDEST JUMPDEST PUSH2 0x707 DUP3 PUSH2 0x5C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 PUSH2 0x731 DUP5 PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x752 JUMPI PUSH2 0x751 PUSH2 0x663 JUMP JUMPDEST JUMPDEST PUSH2 0x75D DUP5 DUP3 DUP6 PUSH2 0x714 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x77A JUMPI PUSH2 0x779 PUSH2 0x65E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x78A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x723 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7AA JUMPI PUSH2 0x7A9 PUSH2 0x4ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7B8 DUP6 DUP3 DUP7 ADD PUSH2 0x540 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7D9 JUMPI PUSH2 0x7D8 PUSH2 0x4F2 JUMP JUMPDEST JUMPDEST PUSH2 0x7E5 DUP6 DUP3 DUP7 ADD PUSH2 0x765 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x804 DUP2 PUSH2 0x7EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x81F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x86C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x87F JUMPI PUSH2 0x87E PUSH2 0x825 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x8E7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x8AA JUMP JUMPDEST PUSH2 0x8F1 DUP7 DUP4 PUSH2 0x8AA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x938 PUSH2 0x933 PUSH2 0x92E DUP5 PUSH2 0x909 JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x952 DUP4 PUSH2 0x91D JUMP JUMPDEST PUSH2 0x966 PUSH2 0x95E DUP3 PUSH2 0x93F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x8B7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x97B PUSH2 0x96E JUMP JUMPDEST PUSH2 0x986 DUP2 DUP5 DUP5 PUSH2 0x949 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9AA JUMPI PUSH2 0x99F PUSH1 0x0 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x98C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9EF JUMPI PUSH2 0x9C0 DUP2 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x9C9 DUP5 PUSH2 0x89A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x9D8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x9EC PUSH2 0x9E4 DUP6 PUSH2 0x89A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x98B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA12 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x9F4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2B DUP4 DUP4 PUSH2 0xA01 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA44 DUP3 PUSH2 0x582 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA5D JUMPI PUSH2 0xA5C PUSH2 0x668 JUMP JUMPDEST JUMPDEST PUSH2 0xA67 DUP3 SLOAD PUSH2 0x854 JUMP JUMPDEST PUSH2 0xA72 DUP3 DUP3 DUP6 PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xAA5 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xA93 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA9D DUP6 DUP3 PUSH2 0xA1F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xAB3 DUP7 PUSH2 0x885 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xADB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAB6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xAF8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xAF4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xA01 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB20 DUP2 PUSH2 0xB0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB3B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND DUP14 0x5C 0xB7 TIMESTAMP 0xF6 LOG4 SWAP12 PUSH30 0xE4AA65EAF16009D06659D1A1B819777E7A63B0F619967764736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"112:613:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;155:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;517:206:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;322:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;155:45:23;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;517:206:23:-;609:4;715:1;685:12;:20;698:6;685:20;;;;;;;;;;;;;;;:27;;;;;:::i;:::-;;;:31;678:38;;517:206;;;;:::o;322:189::-;1531:13:0;:11;:13::i;:::-;435:11:23::1;412:12;:20;425:6;412:20;;;;;;;;;;;;;;;:34;;;;;;:::i;:::-;;473:6;461:43;;;491:11;481:22;;;;;;461:43;;;;;;:::i;:::-;;;;;;;;322:189:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;7:75:29:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:98::-;1227:6;1261:5;1255:12;1245:22;;1176:98;;;:::o;1280:168::-;1363:11;1397:6;1392:3;1385:19;1437:4;1432:3;1428:14;1413:29;;1280:168;;;;:::o;1454:246::-;1535:1;1545:113;1559:6;1556:1;1553:13;1545:113;;;1644:1;1639:3;1635:11;1629:18;1625:1;1620:3;1616:11;1609:39;1581:2;1578:1;1574:10;1569:15;;1545:113;;;1692:1;1683:6;1678:3;1674:16;1667:27;1516:184;1454:246;;;:::o;1706:102::-;1747:6;1798:2;1794:7;1789:2;1782:5;1778:14;1774:28;1764:38;;1706:102;;;:::o;1814:373::-;1900:3;1928:38;1960:5;1928:38;:::i;:::-;1982:70;2045:6;2040:3;1982:70;:::i;:::-;1975:77;;2061:65;2119:6;2114:3;2107:4;2100:5;2096:16;2061:65;:::i;:::-;2151:29;2173:6;2151:29;:::i;:::-;2146:3;2142:39;2135:46;;1904:283;1814:373;;;;:::o;2193:309::-;2304:4;2342:2;2331:9;2327:18;2319:26;;2391:9;2385:4;2381:20;2377:1;2366:9;2362:17;2355:47;2419:76;2490:4;2481:6;2419:76;:::i;:::-;2411:84;;2193:309;;;;:::o;2508:118::-;2595:24;2613:5;2595:24;:::i;:::-;2590:3;2583:37;2508:118;;:::o;2632:222::-;2725:4;2763:2;2752:9;2748:18;2740:26;;2776:71;2844:1;2833:9;2829:17;2820:6;2776:71;:::i;:::-;2632:222;;;;:::o;2860:117::-;2969:1;2966;2959:12;2983:117;3092:1;3089;3082:12;3106:180;3154:77;3151:1;3144:88;3251:4;3248:1;3241:15;3275:4;3272:1;3265:15;3292:281;3375:27;3397:4;3375:27;:::i;:::-;3367:6;3363:40;3505:6;3493:10;3490:22;3469:18;3457:10;3454:34;3451:62;3448:88;;;3516:18;;:::i;:::-;3448:88;3556:10;3552:2;3545:22;3335:238;3292:281;;:::o;3579:129::-;3613:6;3640:20;;:::i;:::-;3630:30;;3669:33;3697:4;3689:6;3669:33;:::i;:::-;3579:129;;;:::o;3714:307::-;3775:4;3865:18;3857:6;3854:30;3851:56;;;3887:18;;:::i;:::-;3851:56;3925:29;3947:6;3925:29;:::i;:::-;3917:37;;4009:4;4003;3999:15;3991:23;;3714:307;;;:::o;4027:146::-;4124:6;4119:3;4114;4101:30;4165:1;4156:6;4151:3;4147:16;4140:27;4027:146;;;:::o;4179:423::-;4256:5;4281:65;4297:48;4338:6;4297:48;:::i;:::-;4281:65;:::i;:::-;4272:74;;4369:6;4362:5;4355:21;4407:4;4400:5;4396:16;4445:3;4436:6;4431:3;4427:16;4424:25;4421:112;;;4452:79;;:::i;:::-;4421:112;4542:54;4589:6;4584:3;4579;4542:54;:::i;:::-;4262:340;4179:423;;;;;:::o;4621:338::-;4676:5;4725:3;4718:4;4710:6;4706:17;4702:27;4692:122;;4733:79;;:::i;:::-;4692:122;4850:6;4837:20;4875:78;4949:3;4941:6;4934:4;4926:6;4922:17;4875:78;:::i;:::-;4866:87;;4682:277;4621:338;;;;:::o;4965:652::-;5042:6;5050;5099:2;5087:9;5078:7;5074:23;5070:32;5067:119;;;5105:79;;:::i;:::-;5067:119;5225:1;5250:53;5295:7;5286:6;5275:9;5271:22;5250:53;:::i;:::-;5240:63;;5196:117;5380:2;5369:9;5365:18;5352:32;5411:18;5403:6;5400:30;5397:117;;;5433:79;;:::i;:::-;5397:117;5538:62;5592:7;5583:6;5572:9;5568:22;5538:62;:::i;:::-;5528:72;;5323:287;4965:652;;;;;:::o;5623:90::-;5657:7;5700:5;5693:13;5686:21;5675:32;;5623:90;;;:::o;5719:109::-;5800:21;5815:5;5800:21;:::i;:::-;5795:3;5788:34;5719:109;;:::o;5834:210::-;5921:4;5959:2;5948:9;5944:18;5936:26;;5972:65;6034:1;6023:9;6019:17;6010:6;5972:65;:::i;:::-;5834:210;;;;:::o;6050:180::-;6098:77;6095:1;6088:88;6195:4;6192:1;6185:15;6219:4;6216:1;6209:15;6236:320;6280:6;6317:1;6311:4;6307:12;6297:22;;6364:1;6358:4;6354:12;6385:18;6375:81;;6441:4;6433:6;6429:17;6419:27;;6375:81;6503:2;6495:6;6492:14;6472:18;6469:38;6466:84;;6522:18;;:::i;:::-;6466:84;6287:269;6236:320;;;:::o;6562:140::-;6610:4;6633:3;6625:11;;6656:3;6653:1;6646:14;6690:4;6687:1;6677:18;6669:26;;6562:140;;;:::o;6708:93::-;6745:6;6792:2;6787;6780:5;6776:14;6772:23;6762:33;;6708:93;;;:::o;6807:107::-;6851:8;6901:5;6895:4;6891:16;6870:37;;6807:107;;;;:::o;6920:393::-;6989:6;7039:1;7027:10;7023:18;7062:97;7092:66;7081:9;7062:97;:::i;:::-;7180:39;7210:8;7199:9;7180:39;:::i;:::-;7168:51;;7252:4;7248:9;7241:5;7237:21;7228:30;;7301:4;7291:8;7287:19;7280:5;7277:30;7267:40;;6996:317;;6920:393;;;;;:::o;7319:77::-;7356:7;7385:5;7374:16;;7319:77;;;:::o;7402:60::-;7430:3;7451:5;7444:12;;7402:60;;;:::o;7468:142::-;7518:9;7551:53;7569:34;7578:24;7596:5;7578:24;:::i;:::-;7569:34;:::i;:::-;7551:53;:::i;:::-;7538:66;;7468:142;;;:::o;7616:75::-;7659:3;7680:5;7673:12;;7616:75;;;:::o;7697:269::-;7807:39;7838:7;7807:39;:::i;:::-;7868:91;7917:41;7941:16;7917:41;:::i;:::-;7909:6;7902:4;7896:11;7868:91;:::i;:::-;7862:4;7855:105;7773:193;7697:269;;;:::o;7972:73::-;8017:3;7972:73;:::o;8051:189::-;8128:32;;:::i;:::-;8169:65;8227:6;8219;8213:4;8169:65;:::i;:::-;8104:136;8051:189;;:::o;8246:186::-;8306:120;8323:3;8316:5;8313:14;8306:120;;;8377:39;8414:1;8407:5;8377:39;:::i;:::-;8350:1;8343:5;8339:13;8330:22;;8306:120;;;8246:186;;:::o;8438:541::-;8538:2;8533:3;8530:11;8527:445;;;8572:37;8603:5;8572:37;:::i;:::-;8655:29;8673:10;8655:29;:::i;:::-;8645:8;8641:44;8838:2;8826:10;8823:18;8820:49;;;8859:8;8844:23;;8820:49;8882:80;8938:22;8956:3;8938:22;:::i;:::-;8928:8;8924:37;8911:11;8882:80;:::i;:::-;8542:430;;8527:445;8438:541;;;:::o;8985:117::-;9039:8;9089:5;9083:4;9079:16;9058:37;;8985:117;;;;:::o;9108:169::-;9152:6;9185:51;9233:1;9229:6;9221:5;9218:1;9214:13;9185:51;:::i;:::-;9181:56;9266:4;9260;9256:15;9246:25;;9159:118;9108:169;;;;:::o;9282:295::-;9358:4;9504:29;9529:3;9523:4;9504:29;:::i;:::-;9496:37;;9566:3;9563:1;9559:11;9553:4;9550:21;9542:29;;9282:295;;;;:::o;9582:1390::-;9697:36;9729:3;9697:36;:::i;:::-;9798:18;9790:6;9787:30;9784:56;;;9820:18;;:::i;:::-;9784:56;9864:38;9896:4;9890:11;9864:38;:::i;:::-;9949:66;10008:6;10000;9994:4;9949:66;:::i;:::-;10042:1;10066:4;10053:17;;10098:2;10090:6;10087:14;10115:1;10110:617;;;;10771:1;10788:6;10785:77;;;10837:9;10832:3;10828:19;10822:26;10813:35;;10785:77;10888:67;10948:6;10941:5;10888:67;:::i;:::-;10882:4;10875:81;10744:222;10080:886;;10110:617;10162:4;10158:9;10150:6;10146:22;10196:36;10227:4;10196:36;:::i;:::-;10254:1;10268:208;10282:7;10279:1;10276:14;10268:208;;;10361:9;10356:3;10352:19;10346:26;10338:6;10331:42;10412:1;10404:6;10400:14;10390:24;;10459:2;10448:9;10444:18;10431:31;;10305:4;10302:1;10298:12;10293:17;;10268:208;;;10504:6;10495:7;10492:19;10489:179;;;10562:9;10557:3;10553:19;10547:26;10605:48;10647:4;10639:6;10635:17;10624:9;10605:48;:::i;:::-;10597:6;10590:64;10512:156;10489:179;10714:1;10710;10702:6;10698:14;10694:22;10688:4;10681:36;10117:610;;;10080:886;;9672:1300;;;9582:1390;;:::o;10978:77::-;11015:7;11044:5;11033:16;;10978:77;;;:::o;11061:118::-;11148:24;11166:5;11148:24;:::i;:::-;11143:3;11136:37;11061:118;;:::o;11185:222::-;11278:4;11316:2;11305:9;11301:18;11293:26;;11329:71;11397:1;11386:9;11382:17;11373:6;11329:71;:::i;:::-;11185:222;;;;:::o"},"methodIdentifiers":{"attestKYC(address,bytes)":"d4d03f10","attestations(address)":"20357048","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","verifyAttestation(address,bytes)":"bad5b133"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"attestationHash\",\"type\":\"bytes32\"}],\"name\":\"KYCAttested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"attestation\",\"type\":\"bytes\"}],\"name\":\"attestKYC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"attestations\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"attestation\",\"type\":\"bytes\"}],\"name\":\"verifyAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ComplianceModule.sol\":\"ComplianceModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/ComplianceModule.sol\":{\"keccak256\":\"0x101df4585a4760a8d01060ea524a0e0b4934c553fdc50050eb95f18e27801f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12a3bc46bb74db0ded4b53fdf8f9192944de960196ce27213908449e16b060d2\",\"dweb:/ipfs/QmYicxvZexNHi8vzKF3hEHy8sgLxSPcmmsdtPUm3Ujg4pq\"]}},\"version\":1}"}},"contracts/MockERC20.sol":{"MockERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_361":{"entryPoint":null,"id":361,"parameterSlots":2,"returnSlots":0},"@_8538":{"entryPoint":null,"id":8538,"parameterSlots":2,"returnSlots":0},"@_mint_664":{"entryPoint":175,"id":664,"parameterSlots":2,"returnSlots":0},"@_update_631":{"entryPoint":316,"id":631,"parameterSlots":3,"returnSlots":0},"@decimals_388":{"entryPoint":166,"id":388,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1153,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1228,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":1279,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2838,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2943,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2855,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2960,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3021,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1024,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":876,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1055,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1523,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1412,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2884,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":2290,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":2630,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":2381,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2711,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1844,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2818,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2786,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1659,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":2617,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1805,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1679,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1999,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1109,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1544,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1470,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1969,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":970,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1669,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1937,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2230,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1423,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":923,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1719,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":896,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":901,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":891,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":886,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":906,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1560,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":2277,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1924,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1777,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1573,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1729,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1772,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13179:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"423:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:29"},"nodeType":"YulFunctionCall","src":"433:12:29"},"nodeType":"YulExpressionStatement","src":"433:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:29"},{"body":{"nodeType":"YulBlock","src":"546:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:29"},"nodeType":"YulFunctionCall","src":"556:12:29"},"nodeType":"YulExpressionStatement","src":"556:12:29"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:29"},{"body":{"nodeType":"YulBlock","src":"628:54:29","statements":[{"nodeType":"YulAssignment","src":"638:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:29"},"nodeType":"YulFunctionCall","src":"652:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:29"},"nodeType":"YulFunctionCall","src":"668:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:29"},"nodeType":"YulFunctionCall","src":"648:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:29","type":""}],"src":"580:102:29"},{"body":{"nodeType":"YulBlock","src":"716:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:29"},"nodeType":"YulFunctionCall","src":"726:88:29"},"nodeType":"YulExpressionStatement","src":"726:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:29"},"nodeType":"YulFunctionCall","src":"823:15:29"},"nodeType":"YulExpressionStatement","src":"823:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:29"},"nodeType":"YulFunctionCall","src":"847:15:29"},"nodeType":"YulExpressionStatement","src":"847:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:29"},{"body":{"nodeType":"YulBlock","src":"917:238:29","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:29"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:29"},"nodeType":"YulFunctionCall","src":"957:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:29"},"nodeType":"YulFunctionCall","src":"945:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:29"},"nodeType":"YulFunctionCall","src":"1098:18:29"},"nodeType":"YulExpressionStatement","src":"1098:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:29"},"nodeType":"YulFunctionCall","src":"1036:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:29"},"nodeType":"YulFunctionCall","src":"1072:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:29"},"nodeType":"YulFunctionCall","src":"1033:62:29"},"nodeType":"YulIf","src":"1030:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:29"},"nodeType":"YulFunctionCall","src":"1127:22:29"},"nodeType":"YulExpressionStatement","src":"1127:22:29"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:29","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:29","type":""}],"src":"874:281:29"},{"body":{"nodeType":"YulBlock","src":"1202:88:29","statements":[{"nodeType":"YulAssignment","src":"1212:30:29","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:29"},"nodeType":"YulFunctionCall","src":"1222:20:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:29"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:29"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:29"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:29"},"nodeType":"YulFunctionCall","src":"1251:33:29"},"nodeType":"YulExpressionStatement","src":"1251:33:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:29","type":""}],"src":"1161:129:29"},{"body":{"nodeType":"YulBlock","src":"1363:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:29"},"nodeType":"YulFunctionCall","src":"1470:18:29"},"nodeType":"YulExpressionStatement","src":"1470:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:29"},"nodeType":"YulFunctionCall","src":"1437:30:29"},"nodeType":"YulIf","src":"1434:56:29"},{"nodeType":"YulAssignment","src":"1500:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:29"},"nodeType":"YulFunctionCall","src":"1508:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:29"}]},{"nodeType":"YulAssignment","src":"1574:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:29"},"nodeType":"YulFunctionCall","src":"1582:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:29"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:29","type":""}],"src":"1296:308:29"},{"body":{"nodeType":"YulBlock","src":"1672:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:29"},"nodeType":"YulFunctionCall","src":"1772:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:29"},"nodeType":"YulFunctionCall","src":"1791:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:29"},"nodeType":"YulFunctionCall","src":"1785:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:29"},"nodeType":"YulFunctionCall","src":"1765:39:29"},"nodeType":"YulExpressionStatement","src":"1765:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:29"},"nodeType":"YulFunctionCall","src":"1709:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:29","statements":[{"nodeType":"YulAssignment","src":"1725:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:29"},"nodeType":"YulFunctionCall","src":"1730:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:29","statements":[]},"src":"1701:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:29"},"nodeType":"YulFunctionCall","src":"1830:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:29"},"nodeType":"YulFunctionCall","src":"1823:27:29"},"nodeType":"YulExpressionStatement","src":"1823:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:29","type":""}],"src":"1610:246:29"},{"body":{"nodeType":"YulBlock","src":"1957:339:29","statements":[{"nodeType":"YulAssignment","src":"1967:75:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:29"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:29"},"nodeType":"YulFunctionCall","src":"1992:49:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:29"},"nodeType":"YulFunctionCall","src":"1976:66:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:29"},"nodeType":"YulFunctionCall","src":"2051:21:29"},"nodeType":"YulExpressionStatement","src":"2051:21:29"},{"nodeType":"YulVariableDeclaration","src":"2081:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:29"},"nodeType":"YulFunctionCall","src":"2092:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:29"},"nodeType":"YulFunctionCall","src":"2148:79:29"},"nodeType":"YulExpressionStatement","src":"2148:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:29"},"nodeType":"YulFunctionCall","src":"2123:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:29"},"nodeType":"YulFunctionCall","src":"2120:25:29"},"nodeType":"YulIf","src":"2117:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:29"},"nodeType":"YulFunctionCall","src":"2238:52:29"},"nodeType":"YulExpressionStatement","src":"2238:52:29"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:29","type":""}],"src":"1862:434:29"},{"body":{"nodeType":"YulBlock","src":"2389:282:29","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:29"},"nodeType":"YulFunctionCall","src":"2440:79:29"},"nodeType":"YulExpressionStatement","src":"2440:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:29"},"nodeType":"YulFunctionCall","src":"2413:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:29"},"nodeType":"YulFunctionCall","src":"2409:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:29"},"nodeType":"YulFunctionCall","src":"2402:35:29"},"nodeType":"YulIf","src":"2399:122:29"},{"nodeType":"YulVariableDeclaration","src":"2530:27:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:29"},"nodeType":"YulFunctionCall","src":"2544:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:29","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:29"},"nodeType":"YulFunctionCall","src":"2634:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:29"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:29"},"nodeType":"YulFunctionCall","src":"2575:90:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:29"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:29","type":""}],"src":"2316:355:29"},{"body":{"nodeType":"YulBlock","src":"2791:739:29","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:29"},"nodeType":"YulFunctionCall","src":"2839:79:29"},"nodeType":"YulExpressionStatement","src":"2839:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:29"},"nodeType":"YulFunctionCall","src":"2808:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:29"},"nodeType":"YulFunctionCall","src":"2804:32:29"},"nodeType":"YulIf","src":"2801:119:29"},{"nodeType":"YulBlock","src":"2930:291:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:29"},"nodeType":"YulFunctionCall","src":"2965:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:29"},"nodeType":"YulFunctionCall","src":"2959:24:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:29"},"nodeType":"YulFunctionCall","src":"3032:79:29"},"nodeType":"YulExpressionStatement","src":"3032:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:29"},"nodeType":"YulFunctionCall","src":"2999:30:29"},"nodeType":"YulIf","src":"2996:117:29"},{"nodeType":"YulAssignment","src":"3127:84:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:29"},"nodeType":"YulFunctionCall","src":"3179:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:29"},"nodeType":"YulFunctionCall","src":"3137:74:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:29"}]}]},{"nodeType":"YulBlock","src":"3231:292:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:29"},"nodeType":"YulFunctionCall","src":"3266:18:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:29"},"nodeType":"YulFunctionCall","src":"3260:25:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:29"},"nodeType":"YulFunctionCall","src":"3334:79:29"},"nodeType":"YulExpressionStatement","src":"3334:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:29"},"nodeType":"YulFunctionCall","src":"3301:30:29"},"nodeType":"YulIf","src":"3298:117:29"},{"nodeType":"YulAssignment","src":"3429:84:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:29"},"nodeType":"YulFunctionCall","src":"3481:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:29"},"nodeType":"YulFunctionCall","src":"3439:74:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:29"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:29","type":""}],"src":"2677:853:29"},{"body":{"nodeType":"YulBlock","src":"3595:40:29","statements":[{"nodeType":"YulAssignment","src":"3606:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:29"},"nodeType":"YulFunctionCall","src":"3616:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:29","type":""}],"src":"3536:99:29"},{"body":{"nodeType":"YulBlock","src":"3669:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:29"},"nodeType":"YulFunctionCall","src":"3679:88:29"},"nodeType":"YulExpressionStatement","src":"3679:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:29"},"nodeType":"YulFunctionCall","src":"3776:15:29"},"nodeType":"YulExpressionStatement","src":"3776:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:29"},"nodeType":"YulFunctionCall","src":"3800:15:29"},"nodeType":"YulExpressionStatement","src":"3800:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:29"},{"body":{"nodeType":"YulBlock","src":"3878:269:29","statements":[{"nodeType":"YulAssignment","src":"3888:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:29"},"nodeType":"YulFunctionCall","src":"3898:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:29"},"nodeType":"YulFunctionCall","src":"3945:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:29","statements":[{"nodeType":"YulAssignment","src":"4010:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:29"},"nodeType":"YulFunctionCall","src":"4020:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:29"},"nodeType":"YulFunctionCall","src":"3969:26:29"},"nodeType":"YulIf","src":"3966:81:29"},{"body":{"nodeType":"YulBlock","src":"4099:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:29"},"nodeType":"YulFunctionCall","src":"4113:18:29"},"nodeType":"YulExpressionStatement","src":"4113:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:29"},"nodeType":"YulFunctionCall","src":"4083:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:29"},"nodeType":"YulFunctionCall","src":"4060:38:29"},"nodeType":"YulIf","src":"4057:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:29","type":""}],"src":"3827:320:29"},{"body":{"nodeType":"YulBlock","src":"4207:87:29","statements":[{"nodeType":"YulAssignment","src":"4217:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:29"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:29","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:29"},"nodeType":"YulFunctionCall","src":"4238:14:29"},"nodeType":"YulExpressionStatement","src":"4238:14:29"},{"nodeType":"YulAssignment","src":"4261:26:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:29"},"nodeType":"YulFunctionCall","src":"4269:18:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:29"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:29","type":""}],"src":"4153:141:29"},{"body":{"nodeType":"YulBlock","src":"4344:49:29","statements":[{"nodeType":"YulAssignment","src":"4354:33:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:29"},"nodeType":"YulFunctionCall","src":"4368:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:29","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:29"},"nodeType":"YulFunctionCall","src":"4364:23:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:29"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:29","type":""}],"src":"4300:93:29"},{"body":{"nodeType":"YulBlock","src":"4452:54:29","statements":[{"nodeType":"YulAssignment","src":"4462:37:29","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:29"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:29"},"nodeType":"YulFunctionCall","src":"4483:16:29"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:29"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:29","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:29","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:29","type":""}],"src":"4399:107:29"},{"body":{"nodeType":"YulBlock","src":"4588:317:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:29","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:29","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:29"},"nodeType":"YulFunctionCall","src":"4615:18:29"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:29","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:29"},"nodeType":"YulFunctionCall","src":"4654:97:29"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:29","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:29","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:29"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:29"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:29"},"nodeType":"YulFunctionCall","src":"4772:39:29"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:29"}]},{"nodeType":"YulAssignment","src":"4820:30:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:29"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:29"},"nodeType":"YulFunctionCall","src":"4840:9:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:29"},"nodeType":"YulFunctionCall","src":"4829:21:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:29"}]},{"nodeType":"YulAssignment","src":"4859:40:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:29"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:29"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:29"},"nodeType":"YulFunctionCall","src":"4879:19:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:29"},"nodeType":"YulFunctionCall","src":"4869:30:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:29"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:29","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:29","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:29","type":""}],"src":"4512:393:29"},{"body":{"nodeType":"YulBlock","src":"4956:32:29","statements":[{"nodeType":"YulAssignment","src":"4966:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:29","type":""}],"src":"4911:77:29"},{"body":{"nodeType":"YulBlock","src":"5026:28:29","statements":[{"nodeType":"YulAssignment","src":"5036:12:29","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:29"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:29","type":""}],"src":"4994:60:29"},{"body":{"nodeType":"YulBlock","src":"5120:82:29","statements":[{"nodeType":"YulAssignment","src":"5130:66:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:29"},"nodeType":"YulFunctionCall","src":"5170:24:29"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:29"},"nodeType":"YulFunctionCall","src":"5161:34:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:29"},"nodeType":"YulFunctionCall","src":"5143:53:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:29"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:29","type":""}],"src":"5060:142:29"},{"body":{"nodeType":"YulBlock","src":"5255:28:29","statements":[{"nodeType":"YulAssignment","src":"5265:12:29","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:29"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:29","type":""}],"src":"5208:75:29"},{"body":{"nodeType":"YulBlock","src":"5365:193:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:29","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:29"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:29"},"nodeType":"YulFunctionCall","src":"5399:39:29"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:29"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:29"},"nodeType":"YulFunctionCall","src":"5488:11:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:29"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:29"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:29"},"nodeType":"YulFunctionCall","src":"5509:41:29"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:29"},"nodeType":"YulFunctionCall","src":"5460:91:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:29"},"nodeType":"YulFunctionCall","src":"5447:105:29"},"nodeType":"YulExpressionStatement","src":"5447:105:29"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:29","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:29","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:29","type":""}],"src":"5289:269:29"},{"body":{"nodeType":"YulBlock","src":"5613:24:29","statements":[{"nodeType":"YulAssignment","src":"5623:8:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:29","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:29"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:29","type":""}],"src":"5564:73:29"},{"body":{"nodeType":"YulBlock","src":"5696:136:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:29","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:29"},"nodeType":"YulFunctionCall","src":"5720:32:29"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:29"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:29"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:29"},"nodeType":"YulFunctionCall","src":"5761:65:29"},"nodeType":"YulExpressionStatement","src":"5761:65:29"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:29","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:29","type":""}],"src":"5643:189:29"},{"body":{"nodeType":"YulBlock","src":"5888:136:29","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:29","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:29","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:29"},"nodeType":"YulFunctionCall","src":"5969:39:29"},"nodeType":"YulExpressionStatement","src":"5969:39:29"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:29"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:29"},"nodeType":"YulFunctionCall","src":"5905:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:29","statements":[{"nodeType":"YulAssignment","src":"5922:22:29","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:29"},"nodeType":"YulFunctionCall","src":"5931:13:29"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:29"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:29","statements":[]},"src":"5898:120:29"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:29","type":""}],"src":"5838:186:29"},{"body":{"nodeType":"YulBlock","src":"6109:464:29","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:29"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:29"},"nodeType":"YulFunctionCall","src":"6165:38:29"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:29","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:29"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:29"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:29"},"nodeType":"YulFunctionCall","src":"6249:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:29"},"nodeType":"YulFunctionCall","src":"6235:44:29"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:29","statements":[{"nodeType":"YulAssignment","src":"6438:23:29","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:29"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:29"},"nodeType":"YulFunctionCall","src":"6417:18:29"},"nodeType":"YulIf","src":"6414:49:29"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:29"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:29"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:29"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:29"},"nodeType":"YulFunctionCall","src":"6532:22:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:29"},"nodeType":"YulFunctionCall","src":"6518:37:29"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:29"},"nodeType":"YulFunctionCall","src":"6476:80:29"},"nodeType":"YulExpressionStatement","src":"6476:80:29"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:29"},"nodeType":"YulFunctionCall","src":"6123:11:29"},"nodeType":"YulIf","src":"6120:446:29"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:29","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:29","type":""}],"src":"6030:543:29"},{"body":{"nodeType":"YulBlock","src":"6642:54:29","statements":[{"nodeType":"YulAssignment","src":"6652:37:29","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:29"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:29"},"nodeType":"YulFunctionCall","src":"6673:16:29"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:29"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:29","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:29","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:29","type":""}],"src":"6579:117:29"},{"body":{"nodeType":"YulBlock","src":"6753:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:29","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:29","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:29"},"nodeType":"YulFunctionCall","src":"6808:13:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:29"},"nodeType":"YulFunctionCall","src":"6823:6:29"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:29"},"nodeType":"YulFunctionCall","src":"6779:51:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:29"},"nodeType":"YulFunctionCall","src":"6775:56:29"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:29","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:29"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:29"},"nodeType":"YulFunctionCall","src":"6850:15:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:29"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:29","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:29","type":""}],"src":"6702:169:29"},{"body":{"nodeType":"YulBlock","src":"6957:214:29","statements":[{"nodeType":"YulAssignment","src":"7090:37:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:29"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:29"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:29"},"nodeType":"YulFunctionCall","src":"7098:29:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:29"}]},{"nodeType":"YulAssignment","src":"7136:29:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:29","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:29"},"nodeType":"YulFunctionCall","src":"7153:11:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:29"},"nodeType":"YulFunctionCall","src":"7144:21:29"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:29","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:29","type":""}],"src":"6876:295:29"},{"body":{"nodeType":"YulBlock","src":"7268:1303:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:29"},"nodeType":"YulFunctionCall","src":"7293:37:29"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:29"},"nodeType":"YulFunctionCall","src":"7417:18:29"},"nodeType":"YulExpressionStatement","src":"7417:18:29"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:29"},"nodeType":"YulFunctionCall","src":"7384:30:29"},"nodeType":"YulIf","src":"7381:56:29"},{"nodeType":"YulVariableDeclaration","src":"7447:52:29","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:29"},"nodeType":"YulFunctionCall","src":"7487:11:29"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:29"},"nodeType":"YulFunctionCall","src":"7461:38:29"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:29"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:29"},"nodeType":"YulFunctionCall","src":"7546:67:29"},"nodeType":"YulExpressionStatement","src":"7546:67:29"},{"nodeType":"YulVariableDeclaration","src":"7623:18:29","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:29","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:29","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:29"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:29","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:29","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:29"},"nodeType":"YulFunctionCall","src":"7756:9:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:29"},"nodeType":"YulFunctionCall","src":"7744:22:29"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:29","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:29"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:29"},"nodeType":"YulFunctionCall","src":"7794:37:29"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:29"},"nodeType":"YulFunctionCall","src":"7951:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:29"},"nodeType":"YulFunctionCall","src":"7945:26:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:29"},"nodeType":"YulFunctionCall","src":"7930:42:29"},"nodeType":"YulExpressionStatement","src":"7930:42:29"},{"nodeType":"YulAssignment","src":"7989:24:29","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:29"},"nodeType":"YulFunctionCall","src":"7999:14:29"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:29"}]},{"nodeType":"YulAssignment","src":"8030:31:29","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:29"},"nodeType":"YulFunctionCall","src":"8043:18:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:29"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:29"},"nodeType":"YulFunctionCall","src":"7875:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:29","statements":[{"nodeType":"YulAssignment","src":"7892:17:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:29"},"nodeType":"YulFunctionCall","src":"7897:12:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:29","statements":[]},"src":"7867:208:29"},{"body":{"nodeType":"YulBlock","src":"8111:156:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:29"},"nodeType":"YulFunctionCall","src":"8152:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:29"},"nodeType":"YulFunctionCall","src":"8146:26:29"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:29"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:29"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:29","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:29"},"nodeType":"YulFunctionCall","src":"8234:17:29"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:29"},"nodeType":"YulFunctionCall","src":"8204:48:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:29"},"nodeType":"YulFunctionCall","src":"8189:64:29"},"nodeType":"YulExpressionStatement","src":"8189:64:29"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:29"},"nodeType":"YulFunctionCall","src":"8091:19:29"},"nodeType":"YulIf","src":"8088:179:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:29"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:29","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:29"},"nodeType":"YulFunctionCall","src":"8297:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:29"},"nodeType":"YulFunctionCall","src":"8293:22:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:29"},"nodeType":"YulFunctionCall","src":"8280:36:29"},"nodeType":"YulExpressionStatement","src":"8280:36:29"}]},"nodeType":"YulCase","src":"7708:618:29","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:29","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:29","statements":[{"nodeType":"YulAssignment","src":"8412:35:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:29"},"nodeType":"YulFunctionCall","src":"8427:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:29"},"nodeType":"YulFunctionCall","src":"8421:26:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:29"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:29"},"nodeType":"YulIf","src":"8384:77:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:29"},"nodeType":"YulFunctionCall","src":"8487:67:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:29"},"nodeType":"YulFunctionCall","src":"8474:81:29"},"nodeType":"YulExpressionStatement","src":"8474:81:29"}]},"nodeType":"YulCase","src":"8335:230:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:29"},"nodeType":"YulFunctionCall","src":"7685:14:29"},"nodeType":"YulSwitch","src":"7678:887:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:29","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:29","type":""}],"src":"7176:1395:29"},{"body":{"nodeType":"YulBlock","src":"8605:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8622:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8625:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8615:6:29"},"nodeType":"YulFunctionCall","src":"8615:88:29"},"nodeType":"YulExpressionStatement","src":"8615:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8719:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8722:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8712:6:29"},"nodeType":"YulFunctionCall","src":"8712:15:29"},"nodeType":"YulExpressionStatement","src":"8712:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8743:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8746:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8736:6:29"},"nodeType":"YulFunctionCall","src":"8736:15:29"},"nodeType":"YulExpressionStatement","src":"8736:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8577:180:29"},{"body":{"nodeType":"YulBlock","src":"8814:51:29","statements":[{"nodeType":"YulAssignment","src":"8824:34:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8849:1:29","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"8852:5:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8845:3:29"},"nodeType":"YulFunctionCall","src":"8845:13:29"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"8824:8:29"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8795:5:29","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"8805:8:29","type":""}],"src":"8763:102:29"},{"body":{"nodeType":"YulBlock","src":"8944:775:29","statements":[{"nodeType":"YulAssignment","src":"8954:15:29","value":{"name":"_power","nodeType":"YulIdentifier","src":"8963:6:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8954:5:29"}]},{"nodeType":"YulAssignment","src":"8978:14:29","value":{"name":"_base","nodeType":"YulIdentifier","src":"8987:5:29"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"8978:4:29"}]},{"body":{"nodeType":"YulBlock","src":"9036:677:29","statements":[{"body":{"nodeType":"YulBlock","src":"9124:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9126:16:29"},"nodeType":"YulFunctionCall","src":"9126:18:29"},"nodeType":"YulExpressionStatement","src":"9126:18:29"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9102:4:29"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"9112:3:29"},{"name":"base","nodeType":"YulIdentifier","src":"9117:4:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9108:3:29"},"nodeType":"YulFunctionCall","src":"9108:14:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9099:2:29"},"nodeType":"YulFunctionCall","src":"9099:24:29"},"nodeType":"YulIf","src":"9096:50:29"},{"body":{"nodeType":"YulBlock","src":"9191:419:29","statements":[{"nodeType":"YulAssignment","src":"9571:25:29","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"9584:5:29"},{"name":"base","nodeType":"YulIdentifier","src":"9591:4:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9580:3:29"},"nodeType":"YulFunctionCall","src":"9580:16:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9571:5:29"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9166:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"9176:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9162:3:29"},"nodeType":"YulFunctionCall","src":"9162:16:29"},"nodeType":"YulIf","src":"9159:451:29"},{"nodeType":"YulAssignment","src":"9623:23:29","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9635:4:29"},{"name":"base","nodeType":"YulIdentifier","src":"9641:4:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9631:3:29"},"nodeType":"YulFunctionCall","src":"9631:15:29"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"9623:4:29"}]},{"nodeType":"YulAssignment","src":"9659:44:29","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9694:8:29"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"9671:22:29"},"nodeType":"YulFunctionCall","src":"9671:32:29"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"9659:8:29"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9012:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"9022:1:29","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9009:2:29"},"nodeType":"YulFunctionCall","src":"9009:15:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9025:2:29","statements":[]},"pre":{"nodeType":"YulBlock","src":"9005:3:29","statements":[]},"src":"9001:712:29"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"8899:6:29","type":""},{"name":"_base","nodeType":"YulTypedName","src":"8907:5:29","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"8914:8:29","type":""},{"name":"max","nodeType":"YulTypedName","src":"8924:3:29","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"8932:5:29","type":""},{"name":"base","nodeType":"YulTypedName","src":"8939:4:29","type":""}],"src":"8871:848:29"},{"body":{"nodeType":"YulBlock","src":"9785:1013:29","statements":[{"body":{"nodeType":"YulBlock","src":"9980:20:29","statements":[{"nodeType":"YulAssignment","src":"9982:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"9991:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9982:5:29"}]},{"nodeType":"YulLeave","src":"9993:5:29"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9970:8:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9963:6:29"},"nodeType":"YulFunctionCall","src":"9963:16:29"},"nodeType":"YulIf","src":"9960:40:29"},{"body":{"nodeType":"YulBlock","src":"10025:20:29","statements":[{"nodeType":"YulAssignment","src":"10027:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10036:1:29","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10027:5:29"}]},{"nodeType":"YulLeave","src":"10038:5:29"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10019:4:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10012:6:29"},"nodeType":"YulFunctionCall","src":"10012:12:29"},"nodeType":"YulIf","src":"10009:36:29"},{"cases":[{"body":{"nodeType":"YulBlock","src":"10155:20:29","statements":[{"nodeType":"YulAssignment","src":"10157:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10166:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10157:5:29"}]},{"nodeType":"YulLeave","src":"10168:5:29"}]},"nodeType":"YulCase","src":"10148:27:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10153:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"10199:176:29","statements":[{"body":{"nodeType":"YulBlock","src":"10234:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10236:16:29"},"nodeType":"YulFunctionCall","src":"10236:18:29"},"nodeType":"YulExpressionStatement","src":"10236:18:29"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"10219:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"10229:3:29","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10216:2:29"},"nodeType":"YulFunctionCall","src":"10216:17:29"},"nodeType":"YulIf","src":"10213:43:29"},{"nodeType":"YulAssignment","src":"10269:25:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10282:1:29","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"10285:8:29"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"10278:3:29"},"nodeType":"YulFunctionCall","src":"10278:16:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10269:5:29"}]},{"body":{"nodeType":"YulBlock","src":"10325:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10327:16:29"},"nodeType":"YulFunctionCall","src":"10327:18:29"},"nodeType":"YulExpressionStatement","src":"10327:18:29"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"10313:5:29"},{"name":"max","nodeType":"YulIdentifier","src":"10320:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10310:2:29"},"nodeType":"YulFunctionCall","src":"10310:14:29"},"nodeType":"YulIf","src":"10307:40:29"},{"nodeType":"YulLeave","src":"10360:5:29"}]},"nodeType":"YulCase","src":"10184:191:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10189:1:29","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"10105:4:29"},"nodeType":"YulSwitch","src":"10098:277:29"},{"body":{"nodeType":"YulBlock","src":"10507:123:29","statements":[{"nodeType":"YulAssignment","src":"10521:28:29","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10534:4:29"},{"name":"exponent","nodeType":"YulIdentifier","src":"10540:8:29"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"10530:3:29"},"nodeType":"YulFunctionCall","src":"10530:19:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10521:5:29"}]},{"body":{"nodeType":"YulBlock","src":"10580:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10582:16:29"},"nodeType":"YulFunctionCall","src":"10582:18:29"},"nodeType":"YulExpressionStatement","src":"10582:18:29"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"10568:5:29"},{"name":"max","nodeType":"YulIdentifier","src":"10575:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10565:2:29"},"nodeType":"YulFunctionCall","src":"10565:14:29"},"nodeType":"YulIf","src":"10562:40:29"},{"nodeType":"YulLeave","src":"10615:5:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10410:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"10416:2:29","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10407:2:29"},"nodeType":"YulFunctionCall","src":"10407:12:29"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"10424:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"10434:2:29","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10421:2:29"},"nodeType":"YulFunctionCall","src":"10421:16:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10403:3:29"},"nodeType":"YulFunctionCall","src":"10403:35:29"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10459:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"10465:3:29","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10456:2:29"},"nodeType":"YulFunctionCall","src":"10456:13:29"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"10474:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"10484:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10471:2:29"},"nodeType":"YulFunctionCall","src":"10471:16:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10452:3:29"},"nodeType":"YulFunctionCall","src":"10452:36:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10387:2:29"},"nodeType":"YulFunctionCall","src":"10387:111:29"},"nodeType":"YulIf","src":"10384:246:29"},{"nodeType":"YulAssignment","src":"10640:57:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10674:1:29","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"10677:4:29"},{"name":"exponent","nodeType":"YulIdentifier","src":"10683:8:29"},{"name":"max","nodeType":"YulIdentifier","src":"10693:3:29"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"10655:18:29"},"nodeType":"YulFunctionCall","src":"10655:42:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10640:5:29"},{"name":"base","nodeType":"YulIdentifier","src":"10647:4:29"}]},{"body":{"nodeType":"YulBlock","src":"10736:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10738:16:29"},"nodeType":"YulFunctionCall","src":"10738:18:29"},"nodeType":"YulExpressionStatement","src":"10738:18:29"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"10713:5:29"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"10724:3:29"},{"name":"base","nodeType":"YulIdentifier","src":"10729:4:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10720:3:29"},"nodeType":"YulFunctionCall","src":"10720:14:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10710:2:29"},"nodeType":"YulFunctionCall","src":"10710:25:29"},"nodeType":"YulIf","src":"10707:51:29"},{"nodeType":"YulAssignment","src":"10767:25:29","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"10780:5:29"},{"name":"base","nodeType":"YulIdentifier","src":"10787:4:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10776:3:29"},"nodeType":"YulFunctionCall","src":"10776:16:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10767:5:29"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"9755:4:29","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"9761:8:29","type":""},{"name":"max","nodeType":"YulTypedName","src":"9771:3:29","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"9779:5:29","type":""}],"src":"9725:1073:29"},{"body":{"nodeType":"YulBlock","src":"10847:43:29","statements":[{"nodeType":"YulAssignment","src":"10857:27:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10872:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"10879:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10868:3:29"},"nodeType":"YulFunctionCall","src":"10868:16:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10857:7:29"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10829:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10839:7:29","type":""}],"src":"10804:86:29"},{"body":{"nodeType":"YulBlock","src":"10960:217:29","statements":[{"nodeType":"YulAssignment","src":"10970:31:29","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10996:4:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10978:17:29"},"nodeType":"YulFunctionCall","src":"10978:23:29"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"10970:4:29"}]},{"nodeType":"YulAssignment","src":"11010:37:29","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"11038:8:29"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"11022:15:29"},"nodeType":"YulFunctionCall","src":"11022:25:29"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"11010:8:29"}]},{"nodeType":"YulAssignment","src":"11057:113:29","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"11087:4:29"},{"name":"exponent","nodeType":"YulIdentifier","src":"11093:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"11103:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"11066:20:29"},"nodeType":"YulFunctionCall","src":"11066:104:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"11057:5:29"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"10935:4:29","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"10941:8:29","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"10954:5:29","type":""}],"src":"10896:281:29"},{"body":{"nodeType":"YulBlock","src":"11231:362:29","statements":[{"nodeType":"YulAssignment","src":"11241:25:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11264:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11246:17:29"},"nodeType":"YulFunctionCall","src":"11246:20:29"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11241:1:29"}]},{"nodeType":"YulAssignment","src":"11275:25:29","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11298:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11280:17:29"},"nodeType":"YulFunctionCall","src":"11280:20:29"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11275:1:29"}]},{"nodeType":"YulVariableDeclaration","src":"11309:28:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11332:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"11335:1:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11328:3:29"},"nodeType":"YulFunctionCall","src":"11328:9:29"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"11313:11:29","type":""}]},{"nodeType":"YulAssignment","src":"11346:41:29","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"11375:11:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11357:17:29"},"nodeType":"YulFunctionCall","src":"11357:30:29"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"11346:7:29"}]},{"body":{"nodeType":"YulBlock","src":"11564:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11566:16:29"},"nodeType":"YulFunctionCall","src":"11566:18:29"},"nodeType":"YulExpressionStatement","src":"11566:18:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11497:1:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11490:6:29"},"nodeType":"YulFunctionCall","src":"11490:9:29"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11520:1:29"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"11527:7:29"},{"name":"x","nodeType":"YulIdentifier","src":"11536:1:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11523:3:29"},"nodeType":"YulFunctionCall","src":"11523:15:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11517:2:29"},"nodeType":"YulFunctionCall","src":"11517:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11470:2:29"},"nodeType":"YulFunctionCall","src":"11470:83:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11450:6:29"},"nodeType":"YulFunctionCall","src":"11450:113:29"},"nodeType":"YulIf","src":"11447:139:29"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11214:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"11217:1:29","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"11223:7:29","type":""}],"src":"11183:410:29"},{"body":{"nodeType":"YulBlock","src":"11644:81:29","statements":[{"nodeType":"YulAssignment","src":"11654:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11669:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"11676:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11665:3:29"},"nodeType":"YulFunctionCall","src":"11665:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11654:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11626:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11636:7:29","type":""}],"src":"11599:126:29"},{"body":{"nodeType":"YulBlock","src":"11776:51:29","statements":[{"nodeType":"YulAssignment","src":"11786:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11815:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"11797:17:29"},"nodeType":"YulFunctionCall","src":"11797:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11786:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11758:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11768:7:29","type":""}],"src":"11731:96:29"},{"body":{"nodeType":"YulBlock","src":"11898:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11915:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11938:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11920:17:29"},"nodeType":"YulFunctionCall","src":"11920:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11908:6:29"},"nodeType":"YulFunctionCall","src":"11908:37:29"},"nodeType":"YulExpressionStatement","src":"11908:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11886:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11893:3:29","type":""}],"src":"11833:118:29"},{"body":{"nodeType":"YulBlock","src":"12055:124:29","statements":[{"nodeType":"YulAssignment","src":"12065:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12077:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12088:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12073:3:29"},"nodeType":"YulFunctionCall","src":"12073:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12065:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12145:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12158:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12169:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12154:3:29"},"nodeType":"YulFunctionCall","src":"12154:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12101:43:29"},"nodeType":"YulFunctionCall","src":"12101:71:29"},"nodeType":"YulExpressionStatement","src":"12101:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12027:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12039:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12050:4:29","type":""}],"src":"11957:222:29"},{"body":{"nodeType":"YulBlock","src":"12229:147:29","statements":[{"nodeType":"YulAssignment","src":"12239:25:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12262:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12244:17:29"},"nodeType":"YulFunctionCall","src":"12244:20:29"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12239:1:29"}]},{"nodeType":"YulAssignment","src":"12273:25:29","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12296:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12278:17:29"},"nodeType":"YulFunctionCall","src":"12278:20:29"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12273:1:29"}]},{"nodeType":"YulAssignment","src":"12307:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12318:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"12321:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12314:3:29"},"nodeType":"YulFunctionCall","src":"12314:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12307:3:29"}]},{"body":{"nodeType":"YulBlock","src":"12347:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12349:16:29"},"nodeType":"YulFunctionCall","src":"12349:18:29"},"nodeType":"YulExpressionStatement","src":"12349:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12339:1:29"},{"name":"sum","nodeType":"YulIdentifier","src":"12342:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12336:2:29"},"nodeType":"YulFunctionCall","src":"12336:10:29"},"nodeType":"YulIf","src":"12333:36:29"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12216:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"12219:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12225:3:29","type":""}],"src":"12185:191:29"},{"body":{"nodeType":"YulBlock","src":"12447:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12464:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12487:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12469:17:29"},"nodeType":"YulFunctionCall","src":"12469:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12457:6:29"},"nodeType":"YulFunctionCall","src":"12457:37:29"},"nodeType":"YulExpressionStatement","src":"12457:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12435:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12442:3:29","type":""}],"src":"12382:118:29"},{"body":{"nodeType":"YulBlock","src":"12660:288:29","statements":[{"nodeType":"YulAssignment","src":"12670:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12682:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12693:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12678:3:29"},"nodeType":"YulFunctionCall","src":"12678:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12670:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12750:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12763:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12774:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12759:3:29"},"nodeType":"YulFunctionCall","src":"12759:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12706:43:29"},"nodeType":"YulFunctionCall","src":"12706:71:29"},"nodeType":"YulExpressionStatement","src":"12706:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12831:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12844:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12855:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12840:3:29"},"nodeType":"YulFunctionCall","src":"12840:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12787:43:29"},"nodeType":"YulFunctionCall","src":"12787:72:29"},"nodeType":"YulExpressionStatement","src":"12787:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12913:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12926:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12937:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12922:3:29"},"nodeType":"YulFunctionCall","src":"12922:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12869:43:29"},"nodeType":"YulFunctionCall","src":"12869:72:29"},"nodeType":"YulExpressionStatement","src":"12869:72:29"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12616:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12628:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12636:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12644:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12655:4:29","type":""}],"src":"12506:442:29"},{"body":{"nodeType":"YulBlock","src":"13052:124:29","statements":[{"nodeType":"YulAssignment","src":"13062:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13074:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13085:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13070:3:29"},"nodeType":"YulFunctionCall","src":"13070:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13062:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13142:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13155:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13166:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13151:3:29"},"nodeType":"YulFunctionCall","src":"13151:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13098:43:29"},"nodeType":"YulFunctionCall","src":"13098:71:29"},"nodeType":"YulExpressionStatement","src":"13098:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13024:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13036:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13047:4:29","type":""}],"src":"12954:222:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001a5038038062001a508339818101604052810190620000379190620004ff565b818181600390816200004a9190620007cf565b5080600490816200005c9190620007cf565b5050506200009e3362000074620000a660201b60201c565b600a62000082919062000a46565b620f424062000092919062000a97565b620000af60201b60201c565b505062000bea565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001245760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200011b919062000b27565b60405180910390fd5b62000138600083836200013c60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200019257806002600082825462000185919062000b44565b9250508190555062000268565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000221578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620002189392919062000b90565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002b3578060026000828254039250508190555062000300565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200035f919062000bcd565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003d5826200038a565b810181811067ffffffffffffffff82111715620003f757620003f66200039b565b5b80604052505050565b60006200040c6200036c565b90506200041a8282620003ca565b919050565b600067ffffffffffffffff8211156200043d576200043c6200039b565b5b62000448826200038a565b9050602081019050919050565b60005b838110156200047557808201518184015260208101905062000458565b60008484015250505050565b60006200049862000492846200041f565b62000400565b905082815260208101848484011115620004b757620004b662000385565b5b620004c484828562000455565b509392505050565b600082601f830112620004e457620004e362000380565b5b8151620004f684826020860162000481565b91505092915050565b6000806040838503121562000519576200051862000376565b5b600083015167ffffffffffffffff8111156200053a57620005396200037b565b5b6200054885828601620004cc565b925050602083015167ffffffffffffffff8111156200056c576200056b6200037b565b5b6200057a85828601620004cc565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005d757607f821691505b602082108103620005ed57620005ec6200058f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000618565b62000663868362000618565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620006b0620006aa620006a4846200067b565b62000685565b6200067b565b9050919050565b6000819050919050565b620006cc836200068f565b620006e4620006db82620006b7565b84845462000625565b825550505050565b600090565b620006fb620006ec565b62000708818484620006c1565b505050565b5b81811015620007305762000724600082620006f1565b6001810190506200070e565b5050565b601f8211156200077f576200074981620005f3565b620007548462000608565b8101602085101562000764578190505b6200077c620007738562000608565b8301826200070d565b50505b505050565b600082821c905092915050565b6000620007a46000198460080262000784565b1980831691505092915050565b6000620007bf838362000791565b9150826002028217905092915050565b620007da8262000584565b67ffffffffffffffff811115620007f657620007f56200039b565b5b620008028254620005be565b6200080f82828562000734565b600060209050601f83116001811462000847576000841562000832578287015190505b6200083e8582620007b1565b865550620008ae565b601f1984166200085786620005f3565b60005b8281101562000881578489015182556001820191506020850194506020810190506200085a565b86831015620008a157848901516200089d601f89168262000791565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111562000944578086048111156200091c576200091b620008b6565b5b60018516156200092c5780820291505b80810290506200093c85620008e5565b9450620008fc565b94509492505050565b6000826200095f576001905062000a32565b816200096f576000905062000a32565b81600181146200098857600281146200099357620009c9565b600191505062000a32565b60ff841115620009a857620009a7620008b6565b5b8360020a915084821115620009c257620009c1620008b6565b5b5062000a32565b5060208310610133831016604e8410600b841016171562000a035782820a905083811115620009fd57620009fc620008b6565b5b62000a32565b62000a128484846001620008f2565b9250905081840481111562000a2c5762000a2b620008b6565b5b81810290505b9392505050565b600060ff82169050919050565b600062000a53826200067b565b915062000a608362000a39565b925062000a8f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200094d565b905092915050565b600062000aa4826200067b565b915062000ab1836200067b565b925082820262000ac1816200067b565b9150828204841483151762000adb5762000ada620008b6565b5b5092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000b0f8262000ae2565b9050919050565b62000b218162000b02565b82525050565b600060208201905062000b3e600083018462000b16565b92915050565b600062000b51826200067b565b915062000b5e836200067b565b925082820190508082111562000b795762000b78620008b6565b5b92915050565b62000b8a816200067b565b82525050565b600060608201905062000ba7600083018662000b16565b62000bb6602083018562000b7f565b62000bc5604083018462000b7f565b949350505050565b600060208201905062000be4600083018462000b7f565b92915050565b610e568062000bfa6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610aaa565b60405180910390f35b6100d060048036038101906100cb9190610b65565b610292565b6040516100dd9190610bc0565b60405180910390f35b6100ee6102b5565b6040516100fb9190610bea565b60405180910390f35b61011e60048036038101906101199190610c05565b6102bf565b60405161012b9190610bc0565b60405180910390f35b61013c6102ee565b6040516101499190610c74565b60405180910390f35b61016c60048036038101906101679190610c8f565b6102f7565b6040516101799190610bea565b60405180910390f35b61018a61033f565b6040516101979190610aaa565b60405180910390f35b6101ba60048036038101906101b59190610b65565b6103d1565b6040516101c79190610bc0565b60405180910390f35b6101ea60048036038101906101e59190610cbc565b6103f4565b6040516101f79190610bea565b60405180910390f35b60606003805461020f90610d2b565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610d2b565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b60008061029d61047b565b90506102aa818585610483565b600191505092915050565b6000600254905090565b6000806102ca61047b565b90506102d7858285610495565b6102e285858561052a565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461034e90610d2b565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90610d2b565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000806103dc61047b565b90506103e981858561052a565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b610490838383600161061e565b505050565b60006104a184846103f4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156105245781811015610514578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050b93929190610d6b565b60405180910390fd5b6105238484848403600061061e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059c5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105939190610da2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361060e5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106059190610da2565b60405180910390fd5b6106198383836107f5565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036106905760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106879190610da2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107025760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106f99190610da2565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156107ef578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107e69190610bea565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084757806002600082825461083b9190610dec565b9250508190555061091a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156108d3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108ca93929190610d6b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361096357806002600082825403925050819055506109b0565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a0d9190610bea565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a54578082015181840152602081019050610a39565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a7c82610a1a565b610a868185610a25565b9350610a96818560208601610a36565b610a9f81610a60565b840191505092915050565b60006020820190508181036000830152610ac48184610a71565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610afc82610ad1565b9050919050565b610b0c81610af1565b8114610b1757600080fd5b50565b600081359050610b2981610b03565b92915050565b6000819050919050565b610b4281610b2f565b8114610b4d57600080fd5b50565b600081359050610b5f81610b39565b92915050565b60008060408385031215610b7c57610b7b610acc565b5b6000610b8a85828601610b1a565b9250506020610b9b85828601610b50565b9150509250929050565b60008115159050919050565b610bba81610ba5565b82525050565b6000602082019050610bd56000830184610bb1565b92915050565b610be481610b2f565b82525050565b6000602082019050610bff6000830184610bdb565b92915050565b600080600060608486031215610c1e57610c1d610acc565b5b6000610c2c86828701610b1a565b9350506020610c3d86828701610b1a565b9250506040610c4e86828701610b50565b9150509250925092565b600060ff82169050919050565b610c6e81610c58565b82525050565b6000602082019050610c896000830184610c65565b92915050565b600060208284031215610ca557610ca4610acc565b5b6000610cb384828501610b1a565b91505092915050565b60008060408385031215610cd357610cd2610acc565b5b6000610ce185828601610b1a565b9250506020610cf285828601610b1a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d4357607f821691505b602082108103610d5657610d55610cfc565b5b50919050565b610d6581610af1565b82525050565b6000606082019050610d806000830186610d5c565b610d8d6020830185610bdb565b610d9a6040830184610bdb565b949350505050565b6000602082019050610db76000830184610d5c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df782610b2f565b9150610e0283610b2f565b9250828201905080821115610e1a57610e19610dbd565b5b9291505056fea2646970667358221220f65edd35ed0d6193d536e0153dd3bcdfd9ff591477cb179d0961569c69ab3e9064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1A50 CODESIZE SUB DUP1 PUSH3 0x1A50 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x4FF JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x7CF JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0x7CF JUMP JUMPDEST POP POP POP PUSH3 0x9E CALLER PUSH3 0x74 PUSH3 0xA6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x82 SWAP2 SWAP1 PUSH3 0xA46 JUMP JUMPDEST PUSH3 0xF4240 PUSH3 0x92 SWAP2 SWAP1 PUSH3 0xA97 JUMP JUMPDEST PUSH3 0xAF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0xBEA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x124 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x11B SWAP2 SWAP1 PUSH3 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x138 PUSH1 0x0 DUP4 DUP4 PUSH3 0x13C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x192 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x185 SWAP2 SWAP1 PUSH3 0xB44 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x268 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x221 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x218 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2B3 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x300 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x35F SWAP2 SWAP1 PUSH3 0xBCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x3D5 DUP3 PUSH3 0x38A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x3F7 JUMPI PUSH3 0x3F6 PUSH3 0x39B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x40C PUSH3 0x36C JUMP JUMPDEST SWAP1 POP PUSH3 0x41A DUP3 DUP3 PUSH3 0x3CA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x43D JUMPI PUSH3 0x43C PUSH3 0x39B JUMP JUMPDEST JUMPDEST PUSH3 0x448 DUP3 PUSH3 0x38A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x475 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x458 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x498 PUSH3 0x492 DUP5 PUSH3 0x41F JUMP JUMPDEST PUSH3 0x400 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x4B7 JUMPI PUSH3 0x4B6 PUSH3 0x385 JUMP JUMPDEST JUMPDEST PUSH3 0x4C4 DUP5 DUP3 DUP6 PUSH3 0x455 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x4E4 JUMPI PUSH3 0x4E3 PUSH3 0x380 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x4F6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x481 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x519 JUMPI PUSH3 0x518 PUSH3 0x376 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x53A JUMPI PUSH3 0x539 PUSH3 0x37B JUMP JUMPDEST JUMPDEST PUSH3 0x548 DUP6 DUP3 DUP7 ADD PUSH3 0x4CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x56C JUMPI PUSH3 0x56B PUSH3 0x37B JUMP JUMPDEST JUMPDEST PUSH3 0x57A DUP6 DUP3 DUP7 ADD PUSH3 0x4CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x5D7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x5ED JUMPI PUSH3 0x5EC PUSH3 0x58F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x657 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x618 JUMP JUMPDEST PUSH3 0x663 DUP7 DUP4 PUSH3 0x618 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6B0 PUSH3 0x6AA PUSH3 0x6A4 DUP5 PUSH3 0x67B JUMP JUMPDEST PUSH3 0x685 JUMP JUMPDEST PUSH3 0x67B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6CC DUP4 PUSH3 0x68F JUMP JUMPDEST PUSH3 0x6E4 PUSH3 0x6DB DUP3 PUSH3 0x6B7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x625 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x6FB PUSH3 0x6EC JUMP JUMPDEST PUSH3 0x708 DUP2 DUP5 DUP5 PUSH3 0x6C1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x730 JUMPI PUSH3 0x724 PUSH1 0x0 DUP3 PUSH3 0x6F1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x70E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x77F JUMPI PUSH3 0x749 DUP2 PUSH3 0x5F3 JUMP JUMPDEST PUSH3 0x754 DUP5 PUSH3 0x608 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x764 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x77C PUSH3 0x773 DUP6 PUSH3 0x608 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x70D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7A4 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x784 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7BF DUP4 DUP4 PUSH3 0x791 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x7DA DUP3 PUSH3 0x584 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x7F6 JUMPI PUSH3 0x7F5 PUSH3 0x39B JUMP JUMPDEST JUMPDEST PUSH3 0x802 DUP3 SLOAD PUSH3 0x5BE JUMP JUMPDEST PUSH3 0x80F DUP3 DUP3 DUP6 PUSH3 0x734 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x847 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x832 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x83E DUP6 DUP3 PUSH3 0x7B1 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x8AE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x857 DUP7 PUSH3 0x5F3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x881 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x85A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x8A1 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x89D PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x791 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x944 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x91C JUMPI PUSH3 0x91B PUSH3 0x8B6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x92C JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x93C DUP6 PUSH3 0x8E5 JUMP JUMPDEST SWAP5 POP PUSH3 0x8FC JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x95F JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xA32 JUMP JUMPDEST DUP2 PUSH3 0x96F JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0xA32 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x988 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x993 JUMPI PUSH3 0x9C9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xA32 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x9A8 JUMPI PUSH3 0x9A7 PUSH3 0x8B6 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x9C2 JUMPI PUSH3 0x9C1 PUSH3 0x8B6 JUMP JUMPDEST JUMPDEST POP PUSH3 0xA32 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xA03 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x9FD JUMPI PUSH3 0x9FC PUSH3 0x8B6 JUMP JUMPDEST JUMPDEST PUSH3 0xA32 JUMP JUMPDEST PUSH3 0xA12 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x8F2 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xA2C JUMPI PUSH3 0xA2B PUSH3 0x8B6 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA53 DUP3 PUSH3 0x67B JUMP JUMPDEST SWAP2 POP PUSH3 0xA60 DUP4 PUSH3 0xA39 JUMP JUMPDEST SWAP3 POP PUSH3 0xA8F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x94D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xAA4 DUP3 PUSH3 0x67B JUMP JUMPDEST SWAP2 POP PUSH3 0xAB1 DUP4 PUSH3 0x67B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xAC1 DUP2 PUSH3 0x67B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xADB JUMPI PUSH3 0xADA PUSH3 0x8B6 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB0F DUP3 PUSH3 0xAE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB21 DUP2 PUSH3 0xB02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB3E PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xB16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB51 DUP3 PUSH3 0x67B JUMP JUMPDEST SWAP2 POP PUSH3 0xB5E DUP4 PUSH3 0x67B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xB79 JUMPI PUSH3 0xB78 PUSH3 0x8B6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xB8A DUP2 PUSH3 0x67B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xBA7 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0xB16 JUMP JUMPDEST PUSH3 0xBB6 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xB7F JUMP JUMPDEST PUSH3 0xBC5 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xB7F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xBE4 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xB7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE56 DUP1 PUSH3 0xBFA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xC05 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29D PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA DUP2 DUP6 DUP6 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7 DUP6 DUP3 DUP6 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x2E2 DUP6 DUP6 DUP6 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP2 DUP6 DUP6 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x490 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x61E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP5 DUP5 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x524 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x514 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x523 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x61E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x605 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x619 DUP4 DUP4 DUP4 PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x690 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x687 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x702 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7EF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7E6 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x847 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83B SWAP2 SWAP1 PUSH2 0xDEC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x91A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8D3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x963 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9B0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA54 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7C DUP3 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0xA86 DUP2 DUP6 PUSH2 0xA25 JUMP JUMPDEST SWAP4 POP PUSH2 0xA96 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA36 JUMP JUMPDEST PUSH2 0xA9F DUP2 PUSH2 0xA60 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC4 DUP2 DUP5 PUSH2 0xA71 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP3 PUSH2 0xAD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0C DUP2 PUSH2 0xAF1 JUMP JUMPDEST DUP2 EQ PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB29 DUP2 PUSH2 0xB03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB42 DUP2 PUSH2 0xB2F JUMP JUMPDEST DUP2 EQ PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5F DUP2 PUSH2 0xB39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7C JUMPI PUSH2 0xB7B PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8A DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB9B DUP6 DUP3 DUP7 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBA DUP2 PUSH2 0xBA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE4 DUP2 PUSH2 0xB2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1E JUMPI PUSH2 0xC1D PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2C DUP7 DUP3 DUP8 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC3D DUP7 DUP3 DUP8 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC4E DUP7 DUP3 DUP8 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6E DUP2 PUSH2 0xC58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC89 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA5 JUMPI PUSH2 0xCA4 PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB3 DUP5 DUP3 DUP6 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD3 JUMPI PUSH2 0xCD2 PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE1 DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF2 DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD43 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD56 JUMPI PUSH2 0xD55 PUSH2 0xCFC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD65 DUP2 PUSH2 0xAF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD80 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0xD8D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBDB JUMP JUMPDEST PUSH2 0xD9A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBDB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF7 DUP3 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xE02 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1A JUMPI PUSH2 0xE19 PUSH2 0xDBD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0x5E 0xDD CALLDATALOAD 0xED 0xD PUSH2 0x93D5 CALLDATASIZE 0xE0 ISZERO RETURNDATASIZE 0xD3 0xBC 0xDF 0xD9 SELFDESTRUCT MSIZE EQ PUSH24 0xCB179D0961569C69AB3E9064736F6C634300081400330000 ","sourceMap":"115:170:24:-:0;;;149:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;209:4;215:6;1656:5:3;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;233:43:24::1;239:10;265;:8;;;:10;;:::i;:::-;261:2;:14;;;;:::i;:::-;251:7;:24;;;;:::i;:::-;233:5;;;:43;;:::i;:::-;149:134:::0;;115:170;;2688:82:3;2737:5;2761:2;2754:9;;2688:82;:::o;7362:208::-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;;;:35;;:::i;:::-;7362:208;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:75:29:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;8577:180::-;8625:77;8622:1;8615:88;8722:4;8719:1;8712:15;8746:4;8743:1;8736:15;8763:102;8805:8;8852:5;8849:1;8845:13;8824:34;;8763:102;;;:::o;8871:848::-;8932:5;8939:4;8963:6;8954:15;;8987:5;8978:14;;9001:712;9022:1;9012:8;9009:15;9001:712;;;9117:4;9112:3;9108:14;9102:4;9099:24;9096:50;;;9126:18;;:::i;:::-;9096:50;9176:1;9166:8;9162:16;9159:451;;;9591:4;9584:5;9580:16;9571:25;;9159:451;9641:4;9635;9631:15;9623:23;;9671:32;9694:8;9671:32;:::i;:::-;9659:44;;9001:712;;;8871:848;;;;;;;:::o;9725:1073::-;9779:5;9970:8;9960:40;;9991:1;9982:10;;9993:5;;9960:40;10019:4;10009:36;;10036:1;10027:10;;10038:5;;10009:36;10105:4;10153:1;10148:27;;;;10189:1;10184:191;;;;10098:277;;10148:27;10166:1;10157:10;;10168:5;;;10184:191;10229:3;10219:8;10216:17;10213:43;;;10236:18;;:::i;:::-;10213:43;10285:8;10282:1;10278:16;10269:25;;10320:3;10313:5;10310:14;10307:40;;;10327:18;;:::i;:::-;10307:40;10360:5;;;10098:277;;10484:2;10474:8;10471:16;10465:3;10459:4;10456:13;10452:36;10434:2;10424:8;10421:16;10416:2;10410:4;10407:12;10403:35;10387:111;10384:246;;;10540:8;10534:4;10530:19;10521:28;;10575:3;10568:5;10565:14;10562:40;;;10582:18;;:::i;:::-;10562:40;10615:5;;10384:246;10655:42;10693:3;10683:8;10677:4;10674:1;10655:42;:::i;:::-;10640:57;;;;10729:4;10724:3;10720:14;10713:5;10710:25;10707:51;;;10738:18;;:::i;:::-;10707:51;10787:4;10780:5;10776:16;10767:25;;9725:1073;;;;;;:::o;10804:86::-;10839:7;10879:4;10872:5;10868:16;10857:27;;10804:86;;;:::o;10896:281::-;10954:5;10978:23;10996:4;10978:23;:::i;:::-;10970:31;;11022:25;11038:8;11022:25;:::i;:::-;11010:37;;11066:104;11103:66;11093:8;11087:4;11066:104;:::i;:::-;11057:113;;10896:281;;;;:::o;11183:410::-;11223:7;11246:20;11264:1;11246:20;:::i;:::-;11241:25;;11280:20;11298:1;11280:20;:::i;:::-;11275:25;;11335:1;11332;11328:9;11357:30;11375:11;11357:30;:::i;:::-;11346:41;;11536:1;11527:7;11523:15;11520:1;11517:22;11497:1;11490:9;11470:83;11447:139;;11566:18;;:::i;:::-;11447:139;11231:362;11183:410;;;;:::o;11599:126::-;11636:7;11676:42;11669:5;11665:54;11654:65;;11599:126;;;:::o;11731:96::-;11768:7;11797:24;11815:5;11797:24;:::i;:::-;11786:35;;11731:96;;;:::o;11833:118::-;11920:24;11938:5;11920:24;:::i;:::-;11915:3;11908:37;11833:118;;:::o;11957:222::-;12050:4;12088:2;12077:9;12073:18;12065:26;;12101:71;12169:1;12158:9;12154:17;12145:6;12101:71;:::i;:::-;11957:222;;;;:::o;12185:191::-;12225:3;12244:20;12262:1;12244:20;:::i;:::-;12239:25;;12278:20;12296:1;12278:20;:::i;:::-;12273:25;;12321:1;12318;12314:9;12307:16;;12342:3;12339:1;12336:10;12333:36;;;12349:18;;:::i;:::-;12333:36;12185:191;;;;:::o;12382:118::-;12469:24;12487:5;12469:24;:::i;:::-;12464:3;12457:37;12382:118;;:::o;12506:442::-;12655:4;12693:2;12682:9;12678:18;12670:26;;12706:71;12774:1;12763:9;12759:17;12750:6;12706:71;:::i;:::-;12787:72;12855:2;12844:9;12840:18;12831:6;12787:72;:::i;:::-;12869;12937:2;12926:9;12922:18;12913:6;12869:72;:::i;:::-;12506:442;;;;;;:::o;12954:222::-;13047:4;13085:2;13074:9;13070:18;13062:26;;13098:71;13166:1;13155:9;13151:17;13142:6;13098:71;:::i;:::-;12954:222;;;;:::o;115:170:24:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_715":{"entryPoint":1155,"id":715,"parameterSlots":3,"returnSlots":0},"@_approve_775":{"entryPoint":1566,"id":775,"parameterSlots":4,"returnSlots":0},"@_msgSender_1130":{"entryPoint":1147,"id":1130,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_823":{"entryPoint":1173,"id":823,"parameterSlots":3,"returnSlots":0},"@_transfer_554":{"entryPoint":1322,"id":554,"parameterSlots":3,"returnSlots":0},"@_update_631":{"entryPoint":2037,"id":631,"parameterSlots":3,"returnSlots":0},"@allowance_451":{"entryPoint":1012,"id":451,"parameterSlots":2,"returnSlots":1},"@approve_475":{"entryPoint":658,"id":475,"parameterSlots":2,"returnSlots":1},"@balanceOf_410":{"entryPoint":759,"id":410,"parameterSlots":1,"returnSlots":1},"@decimals_388":{"entryPoint":750,"id":388,"parameterSlots":0,"returnSlots":1},"@name_370":{"entryPoint":512,"id":370,"parameterSlots":0,"returnSlots":1},"@symbol_379":{"entryPoint":831,"id":379,"parameterSlots":0,"returnSlots":1},"@totalSupply_397":{"entryPoint":693,"id":397,"parameterSlots":0,"returnSlots":1},"@transferFrom_507":{"entryPoint":703,"id":507,"parameterSlots":3,"returnSlots":1},"@transfer_434":{"entryPoint":977,"id":434,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2842,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2896,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3215,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3260,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3077,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2917,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3420,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2993,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2673,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3035,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3173,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3490,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3435,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3008,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3188,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2586,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2597,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3564,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2801,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2981,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2769,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2863,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3160,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2614,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3371,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3517,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3324,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2764,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2656,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":2819,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2873,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7360:29","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:29","statements":[{"nodeType":"YulAssignment","src":"77:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:29"},"nodeType":"YulFunctionCall","src":"87:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:29","type":""}],"src":"7:99:29"},{"body":{"nodeType":"YulBlock","src":"208:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:29"},"nodeType":"YulFunctionCall","src":"218:19:29"},"nodeType":"YulExpressionStatement","src":"218:19:29"},{"nodeType":"YulAssignment","src":"246:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:29"},"nodeType":"YulFunctionCall","src":"261:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:29","type":""}],"src":"112:169:29"},{"body":{"nodeType":"YulBlock","src":"349:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:29"},"nodeType":"YulFunctionCall","src":"449:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:29"},"nodeType":"YulFunctionCall","src":"468:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:29"},"nodeType":"YulFunctionCall","src":"462:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:29"},"nodeType":"YulFunctionCall","src":"442:39:29"},"nodeType":"YulExpressionStatement","src":"442:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:29"},"nodeType":"YulFunctionCall","src":"386:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:29","statements":[{"nodeType":"YulAssignment","src":"402:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:29"},"nodeType":"YulFunctionCall","src":"407:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:29","statements":[]},"src":"378:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:29"},"nodeType":"YulFunctionCall","src":"507:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:29"},"nodeType":"YulFunctionCall","src":"500:27:29"},"nodeType":"YulExpressionStatement","src":"500:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:29","type":""}],"src":"287:246:29"},{"body":{"nodeType":"YulBlock","src":"587:54:29","statements":[{"nodeType":"YulAssignment","src":"597:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:29"},"nodeType":"YulFunctionCall","src":"611:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:29"},"nodeType":"YulFunctionCall","src":"627:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:29"},"nodeType":"YulFunctionCall","src":"607:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:29","type":""}],"src":"539:102:29"},{"body":{"nodeType":"YulBlock","src":"739:285:29","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:29"},"nodeType":"YulFunctionCall","src":"763:39:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:29","type":""}]},{"nodeType":"YulAssignment","src":"811:78:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:29"},"nodeType":"YulFunctionCall","src":"818:71:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:29"},"nodeType":"YulFunctionCall","src":"933:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:29"},"nodeType":"YulFunctionCall","src":"898:65:29"},"nodeType":"YulExpressionStatement","src":"898:65:29"},{"nodeType":"YulAssignment","src":"972:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:29"},"nodeType":"YulFunctionCall","src":"988:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:29"},"nodeType":"YulFunctionCall","src":"979:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:29","type":""}],"src":"647:377:29"},{"body":{"nodeType":"YulBlock","src":"1148:195:29","statements":[{"nodeType":"YulAssignment","src":"1158:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:29"},"nodeType":"YulFunctionCall","src":"1166:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:29"},"nodeType":"YulFunctionCall","src":"1201:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:29"},"nodeType":"YulFunctionCall","src":"1220:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:29"},"nodeType":"YulFunctionCall","src":"1194:47:29"},"nodeType":"YulExpressionStatement","src":"1194:47:29"},{"nodeType":"YulAssignment","src":"1250:86:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:29"},"nodeType":"YulFunctionCall","src":"1258:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:29","type":""}],"src":"1030:313:29"},{"body":{"nodeType":"YulBlock","src":"1389:35:29","statements":[{"nodeType":"YulAssignment","src":"1399:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:29"},"nodeType":"YulFunctionCall","src":"1409:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:29","type":""}],"src":"1349:75:29"},{"body":{"nodeType":"YulBlock","src":"1519:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:29"},"nodeType":"YulFunctionCall","src":"1529:12:29"},"nodeType":"YulExpressionStatement","src":"1529:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:29"},{"body":{"nodeType":"YulBlock","src":"1642:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:29"},"nodeType":"YulFunctionCall","src":"1652:12:29"},"nodeType":"YulExpressionStatement","src":"1652:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:29"},{"body":{"nodeType":"YulBlock","src":"1721:81:29","statements":[{"nodeType":"YulAssignment","src":"1731:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:29"},"nodeType":"YulFunctionCall","src":"1742:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:29","type":""}],"src":"1676:126:29"},{"body":{"nodeType":"YulBlock","src":"1853:51:29","statements":[{"nodeType":"YulAssignment","src":"1863:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:29"},"nodeType":"YulFunctionCall","src":"1874:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:29","type":""}],"src":"1808:96:29"},{"body":{"nodeType":"YulBlock","src":"1953:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:29"},"nodeType":"YulFunctionCall","src":"2012:12:29"},"nodeType":"YulExpressionStatement","src":"2012:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:29"},"nodeType":"YulFunctionCall","src":"1983:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:29"},"nodeType":"YulFunctionCall","src":"1973:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:29"},"nodeType":"YulFunctionCall","src":"1966:43:29"},"nodeType":"YulIf","src":"1963:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:29","type":""}],"src":"1910:122:29"},{"body":{"nodeType":"YulBlock","src":"2090:87:29","statements":[{"nodeType":"YulAssignment","src":"2100:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:29"},"nodeType":"YulFunctionCall","src":"2109:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:29"},"nodeType":"YulFunctionCall","src":"2138:33:29"},"nodeType":"YulExpressionStatement","src":"2138:33:29"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:29","type":""}],"src":"2038:139:29"},{"body":{"nodeType":"YulBlock","src":"2228:32:29","statements":[{"nodeType":"YulAssignment","src":"2238:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:29","type":""}],"src":"2183:77:29"},{"body":{"nodeType":"YulBlock","src":"2309:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:29"},"nodeType":"YulFunctionCall","src":"2368:12:29"},"nodeType":"YulExpressionStatement","src":"2368:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:29"},"nodeType":"YulFunctionCall","src":"2339:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:29"},"nodeType":"YulFunctionCall","src":"2329:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:29"},"nodeType":"YulFunctionCall","src":"2322:43:29"},"nodeType":"YulIf","src":"2319:63:29"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:29","type":""}],"src":"2266:122:29"},{"body":{"nodeType":"YulBlock","src":"2446:87:29","statements":[{"nodeType":"YulAssignment","src":"2456:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:29"},"nodeType":"YulFunctionCall","src":"2465:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:29"},"nodeType":"YulFunctionCall","src":"2494:33:29"},"nodeType":"YulExpressionStatement","src":"2494:33:29"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:29","type":""}],"src":"2394:139:29"},{"body":{"nodeType":"YulBlock","src":"2622:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:29"},"nodeType":"YulFunctionCall","src":"2670:79:29"},"nodeType":"YulExpressionStatement","src":"2670:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:29"},"nodeType":"YulFunctionCall","src":"2639:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:29"},"nodeType":"YulFunctionCall","src":"2635:32:29"},"nodeType":"YulIf","src":"2632:119:29"},{"nodeType":"YulBlock","src":"2761:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:29","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:29"},"nodeType":"YulFunctionCall","src":"2836:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:29"},"nodeType":"YulFunctionCall","src":"2815:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:29"}]}]},{"nodeType":"YulBlock","src":"2888:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:29","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:29"},"nodeType":"YulFunctionCall","src":"2964:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:29"},"nodeType":"YulFunctionCall","src":"2943:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:29","type":""}],"src":"2539:474:29"},{"body":{"nodeType":"YulBlock","src":"3061:48:29","statements":[{"nodeType":"YulAssignment","src":"3071:32:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:29"},"nodeType":"YulFunctionCall","src":"3089:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:29"},"nodeType":"YulFunctionCall","src":"3082:21:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:29"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:29","type":""}],"src":"3019:90:29"},{"body":{"nodeType":"YulBlock","src":"3174:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:29"},"nodeType":"YulFunctionCall","src":"3196:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:29"},"nodeType":"YulFunctionCall","src":"3184:34:29"},"nodeType":"YulExpressionStatement","src":"3184:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:29","type":""}],"src":"3115:109:29"},{"body":{"nodeType":"YulBlock","src":"3322:118:29","statements":[{"nodeType":"YulAssignment","src":"3332:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:29"},"nodeType":"YulFunctionCall","src":"3340:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:29"},"nodeType":"YulFunctionCall","src":"3415:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:29"},"nodeType":"YulFunctionCall","src":"3368:65:29"},"nodeType":"YulExpressionStatement","src":"3368:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:29","type":""}],"src":"3230:210:29"},{"body":{"nodeType":"YulBlock","src":"3511:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:29"},"nodeType":"YulFunctionCall","src":"3533:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:29"},"nodeType":"YulFunctionCall","src":"3521:37:29"},"nodeType":"YulExpressionStatement","src":"3521:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:29","type":""}],"src":"3446:118:29"},{"body":{"nodeType":"YulBlock","src":"3668:124:29","statements":[{"nodeType":"YulAssignment","src":"3678:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:29"},"nodeType":"YulFunctionCall","src":"3686:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:29"},"nodeType":"YulFunctionCall","src":"3767:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:29"},"nodeType":"YulFunctionCall","src":"3714:71:29"},"nodeType":"YulExpressionStatement","src":"3714:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:29","type":""}],"src":"3570:222:29"},{"body":{"nodeType":"YulBlock","src":"3898:519:29","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:29"},"nodeType":"YulFunctionCall","src":"3946:79:29"},"nodeType":"YulExpressionStatement","src":"3946:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:29"},"nodeType":"YulFunctionCall","src":"3915:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:29"},"nodeType":"YulFunctionCall","src":"3911:32:29"},"nodeType":"YulIf","src":"3908:119:29"},{"nodeType":"YulBlock","src":"4037:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:29"},"nodeType":"YulFunctionCall","src":"4112:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:29"},"nodeType":"YulFunctionCall","src":"4091:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:29"}]}]},{"nodeType":"YulBlock","src":"4164:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:29"},"nodeType":"YulFunctionCall","src":"4240:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:29"},"nodeType":"YulFunctionCall","src":"4219:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:29"}]}]},{"nodeType":"YulBlock","src":"4292:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:29"},"nodeType":"YulFunctionCall","src":"4368:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:29"},"nodeType":"YulFunctionCall","src":"4347:53:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:29","type":""}],"src":"3798:619:29"},{"body":{"nodeType":"YulBlock","src":"4466:43:29","statements":[{"nodeType":"YulAssignment","src":"4476:27:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:29"},"nodeType":"YulFunctionCall","src":"4487:16:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:29"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:29","type":""}],"src":"4423:86:29"},{"body":{"nodeType":"YulBlock","src":"4576:51:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:29"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:29"},"nodeType":"YulFunctionCall","src":"4598:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:29"},"nodeType":"YulFunctionCall","src":"4586:35:29"},"nodeType":"YulExpressionStatement","src":"4586:35:29"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:29","type":""}],"src":"4515:112:29"},{"body":{"nodeType":"YulBlock","src":"4727:120:29","statements":[{"nodeType":"YulAssignment","src":"4737:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:29"},"nodeType":"YulFunctionCall","src":"4745:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:29"},"nodeType":"YulFunctionCall","src":"4822:17:29"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:29"},"nodeType":"YulFunctionCall","src":"4773:67:29"},"nodeType":"YulExpressionStatement","src":"4773:67:29"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:29","type":""}],"src":"4633:214:29"},{"body":{"nodeType":"YulBlock","src":"4919:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:29"},"nodeType":"YulFunctionCall","src":"4967:79:29"},"nodeType":"YulExpressionStatement","src":"4967:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:29"},"nodeType":"YulFunctionCall","src":"4936:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:29"},"nodeType":"YulFunctionCall","src":"4932:32:29"},"nodeType":"YulIf","src":"4929:119:29"},{"nodeType":"YulBlock","src":"5058:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:29"},"nodeType":"YulFunctionCall","src":"5133:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:29"},"nodeType":"YulFunctionCall","src":"5112:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:29","type":""}],"src":"4853:329:29"},{"body":{"nodeType":"YulBlock","src":"5271:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:29"},"nodeType":"YulFunctionCall","src":"5319:79:29"},"nodeType":"YulExpressionStatement","src":"5319:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:29"},"nodeType":"YulFunctionCall","src":"5288:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:29"},"nodeType":"YulFunctionCall","src":"5284:32:29"},"nodeType":"YulIf","src":"5281:119:29"},{"nodeType":"YulBlock","src":"5410:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:29"},"nodeType":"YulFunctionCall","src":"5485:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:29"},"nodeType":"YulFunctionCall","src":"5464:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:29"}]}]},{"nodeType":"YulBlock","src":"5537:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:29"},"nodeType":"YulFunctionCall","src":"5613:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:29"},"nodeType":"YulFunctionCall","src":"5592:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:29","type":""}],"src":"5188:474:29"},{"body":{"nodeType":"YulBlock","src":"5696:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:29"},"nodeType":"YulFunctionCall","src":"5706:88:29"},"nodeType":"YulExpressionStatement","src":"5706:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:29"},"nodeType":"YulFunctionCall","src":"5803:15:29"},"nodeType":"YulExpressionStatement","src":"5803:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:29"},"nodeType":"YulFunctionCall","src":"5827:15:29"},"nodeType":"YulExpressionStatement","src":"5827:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:29"},{"body":{"nodeType":"YulBlock","src":"5905:269:29","statements":[{"nodeType":"YulAssignment","src":"5915:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:29"},"nodeType":"YulFunctionCall","src":"5925:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:29"},"nodeType":"YulFunctionCall","src":"5972:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:29","statements":[{"nodeType":"YulAssignment","src":"6037:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:29"},"nodeType":"YulFunctionCall","src":"6047:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:29"},"nodeType":"YulFunctionCall","src":"5996:26:29"},"nodeType":"YulIf","src":"5993:81:29"},{"body":{"nodeType":"YulBlock","src":"6126:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:29"},"nodeType":"YulFunctionCall","src":"6140:18:29"},"nodeType":"YulExpressionStatement","src":"6140:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:29"},"nodeType":"YulFunctionCall","src":"6110:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:29"},"nodeType":"YulFunctionCall","src":"6087:38:29"},"nodeType":"YulIf","src":"6084:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:29","type":""}],"src":"5854:320:29"},{"body":{"nodeType":"YulBlock","src":"6245:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6262:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6285:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6267:17:29"},"nodeType":"YulFunctionCall","src":"6267:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6255:6:29"},"nodeType":"YulFunctionCall","src":"6255:37:29"},"nodeType":"YulExpressionStatement","src":"6255:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6233:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6240:3:29","type":""}],"src":"6180:118:29"},{"body":{"nodeType":"YulBlock","src":"6458:288:29","statements":[{"nodeType":"YulAssignment","src":"6468:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6480:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6491:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6476:3:29"},"nodeType":"YulFunctionCall","src":"6476:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6468:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6548:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6561:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6572:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6557:3:29"},"nodeType":"YulFunctionCall","src":"6557:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6504:43:29"},"nodeType":"YulFunctionCall","src":"6504:71:29"},"nodeType":"YulExpressionStatement","src":"6504:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6629:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6642:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6653:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6638:3:29"},"nodeType":"YulFunctionCall","src":"6638:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6585:43:29"},"nodeType":"YulFunctionCall","src":"6585:72:29"},"nodeType":"YulExpressionStatement","src":"6585:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6711:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6724:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6735:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6720:3:29"},"nodeType":"YulFunctionCall","src":"6720:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6667:43:29"},"nodeType":"YulFunctionCall","src":"6667:72:29"},"nodeType":"YulExpressionStatement","src":"6667:72:29"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6414:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6426:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6434:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6442:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6453:4:29","type":""}],"src":"6304:442:29"},{"body":{"nodeType":"YulBlock","src":"6850:124:29","statements":[{"nodeType":"YulAssignment","src":"6860:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6872:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6883:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6868:3:29"},"nodeType":"YulFunctionCall","src":"6868:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6860:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6940:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6953:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6964:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6949:3:29"},"nodeType":"YulFunctionCall","src":"6949:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6896:43:29"},"nodeType":"YulFunctionCall","src":"6896:71:29"},"nodeType":"YulExpressionStatement","src":"6896:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6822:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6834:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6845:4:29","type":""}],"src":"6752:222:29"},{"body":{"nodeType":"YulBlock","src":"7008:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7025:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7028:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7018:6:29"},"nodeType":"YulFunctionCall","src":"7018:88:29"},"nodeType":"YulExpressionStatement","src":"7018:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7122:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7125:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7115:6:29"},"nodeType":"YulFunctionCall","src":"7115:15:29"},"nodeType":"YulExpressionStatement","src":"7115:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7146:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7149:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7139:6:29"},"nodeType":"YulFunctionCall","src":"7139:15:29"},"nodeType":"YulExpressionStatement","src":"7139:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6980:180:29"},{"body":{"nodeType":"YulBlock","src":"7210:147:29","statements":[{"nodeType":"YulAssignment","src":"7220:25:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7243:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7225:17:29"},"nodeType":"YulFunctionCall","src":"7225:20:29"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7220:1:29"}]},{"nodeType":"YulAssignment","src":"7254:25:29","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7277:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7259:17:29"},"nodeType":"YulFunctionCall","src":"7259:20:29"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7254:1:29"}]},{"nodeType":"YulAssignment","src":"7288:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7299:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"7302:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7295:3:29"},"nodeType":"YulFunctionCall","src":"7295:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7288:3:29"}]},{"body":{"nodeType":"YulBlock","src":"7328:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7330:16:29"},"nodeType":"YulFunctionCall","src":"7330:18:29"},"nodeType":"YulExpressionStatement","src":"7330:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7320:1:29"},{"name":"sum","nodeType":"YulIdentifier","src":"7323:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7317:2:29"},"nodeType":"YulFunctionCall","src":"7317:10:29"},"nodeType":"YulIf","src":"7314:36:29"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7197:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"7200:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7206:3:29","type":""}],"src":"7166:191:29"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610aaa565b60405180910390f35b6100d060048036038101906100cb9190610b65565b610292565b6040516100dd9190610bc0565b60405180910390f35b6100ee6102b5565b6040516100fb9190610bea565b60405180910390f35b61011e60048036038101906101199190610c05565b6102bf565b60405161012b9190610bc0565b60405180910390f35b61013c6102ee565b6040516101499190610c74565b60405180910390f35b61016c60048036038101906101679190610c8f565b6102f7565b6040516101799190610bea565b60405180910390f35b61018a61033f565b6040516101979190610aaa565b60405180910390f35b6101ba60048036038101906101b59190610b65565b6103d1565b6040516101c79190610bc0565b60405180910390f35b6101ea60048036038101906101e59190610cbc565b6103f4565b6040516101f79190610bea565b60405180910390f35b60606003805461020f90610d2b565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610d2b565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b60008061029d61047b565b90506102aa818585610483565b600191505092915050565b6000600254905090565b6000806102ca61047b565b90506102d7858285610495565b6102e285858561052a565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461034e90610d2b565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90610d2b565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000806103dc61047b565b90506103e981858561052a565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b610490838383600161061e565b505050565b60006104a184846103f4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156105245781811015610514578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050b93929190610d6b565b60405180910390fd5b6105238484848403600061061e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059c5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105939190610da2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361060e5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106059190610da2565b60405180910390fd5b6106198383836107f5565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036106905760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106879190610da2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107025760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106f99190610da2565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156107ef578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107e69190610bea565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084757806002600082825461083b9190610dec565b9250508190555061091a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156108d3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108ca93929190610d6b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361096357806002600082825403925050819055506109b0565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a0d9190610bea565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a54578082015181840152602081019050610a39565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a7c82610a1a565b610a868185610a25565b9350610a96818560208601610a36565b610a9f81610a60565b840191505092915050565b60006020820190508181036000830152610ac48184610a71565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610afc82610ad1565b9050919050565b610b0c81610af1565b8114610b1757600080fd5b50565b600081359050610b2981610b03565b92915050565b6000819050919050565b610b4281610b2f565b8114610b4d57600080fd5b50565b600081359050610b5f81610b39565b92915050565b60008060408385031215610b7c57610b7b610acc565b5b6000610b8a85828601610b1a565b9250506020610b9b85828601610b50565b9150509250929050565b60008115159050919050565b610bba81610ba5565b82525050565b6000602082019050610bd56000830184610bb1565b92915050565b610be481610b2f565b82525050565b6000602082019050610bff6000830184610bdb565b92915050565b600080600060608486031215610c1e57610c1d610acc565b5b6000610c2c86828701610b1a565b9350506020610c3d86828701610b1a565b9250506040610c4e86828701610b50565b9150509250925092565b600060ff82169050919050565b610c6e81610c58565b82525050565b6000602082019050610c896000830184610c65565b92915050565b600060208284031215610ca557610ca4610acc565b5b6000610cb384828501610b1a565b91505092915050565b60008060408385031215610cd357610cd2610acc565b5b6000610ce185828601610b1a565b9250506020610cf285828601610b1a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d4357607f821691505b602082108103610d5657610d55610cfc565b5b50919050565b610d6581610af1565b82525050565b6000606082019050610d806000830186610d5c565b610d8d6020830185610bdb565b610d9a6040830184610bdb565b949350505050565b6000602082019050610db76000830184610d5c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df782610b2f565b9150610e0283610b2f565b9250828201905080821115610e1a57610e19610dbd565b5b9291505056fea2646970667358221220f65edd35ed0d6193d536e0153dd3bcdfd9ff591477cb179d0961569c69ab3e9064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xC05 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29D PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA DUP2 DUP6 DUP6 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7 DUP6 DUP3 DUP6 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x2E2 DUP6 DUP6 DUP6 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP2 DUP6 DUP6 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x490 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x61E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP5 DUP5 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x524 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x514 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x523 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x61E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x605 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x619 DUP4 DUP4 DUP4 PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x690 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x687 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x702 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7EF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7E6 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x847 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83B SWAP2 SWAP1 PUSH2 0xDEC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x91A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8D3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x963 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9B0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA54 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7C DUP3 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0xA86 DUP2 DUP6 PUSH2 0xA25 JUMP JUMPDEST SWAP4 POP PUSH2 0xA96 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA36 JUMP JUMPDEST PUSH2 0xA9F DUP2 PUSH2 0xA60 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC4 DUP2 DUP5 PUSH2 0xA71 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP3 PUSH2 0xAD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0C DUP2 PUSH2 0xAF1 JUMP JUMPDEST DUP2 EQ PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB29 DUP2 PUSH2 0xB03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB42 DUP2 PUSH2 0xB2F JUMP JUMPDEST DUP2 EQ PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5F DUP2 PUSH2 0xB39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7C JUMPI PUSH2 0xB7B PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8A DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB9B DUP6 DUP3 DUP7 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBA DUP2 PUSH2 0xBA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE4 DUP2 PUSH2 0xB2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1E JUMPI PUSH2 0xC1D PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2C DUP7 DUP3 DUP8 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC3D DUP7 DUP3 DUP8 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC4E DUP7 DUP3 DUP8 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6E DUP2 PUSH2 0xC58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC89 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA5 JUMPI PUSH2 0xCA4 PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB3 DUP5 DUP3 DUP6 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD3 JUMPI PUSH2 0xCD2 PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE1 DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF2 DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD43 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD56 JUMPI PUSH2 0xD55 PUSH2 0xCFC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD65 DUP2 PUSH2 0xAF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD80 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0xD8D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBDB JUMP JUMPDEST PUSH2 0xD9A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBDB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF7 DUP3 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xE02 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1A JUMPI PUSH2 0xE19 PUSH2 0xDBD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0x5E 0xDD CALLDATALOAD 0xED 0xD PUSH2 0x93D5 CALLDATASIZE 0xE0 ISZERO RETURNDATASIZE 0xD3 0xBC 0xDF 0xD9 SELFDESTRUCT MSIZE EQ PUSH24 0xCB179D0961569C69AB3E9064736F6C634300081400330000 ","sourceMap":"115:170:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3455:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;2933:116::-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;1962:93::-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3244:178::-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;3455:140::-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8630:128:3:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;9605:432::-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:99:29:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:118::-;6267:24;6285:5;6267:24;:::i;:::-;6262:3;6255:37;6180:118;;:::o;6304:442::-;6453:4;6491:2;6480:9;6476:18;6468:26;;6504:71;6572:1;6561:9;6557:17;6548:6;6504:71;:::i;:::-;6585:72;6653:2;6642:9;6638:18;6629:6;6585:72;:::i;:::-;6667;6735:2;6724:9;6720:18;6711:6;6667:72;:::i;:::-;6304:442;;;;;;:::o;6752:222::-;6845:4;6883:2;6872:9;6868:18;6860:26;;6896:71;6964:1;6953:9;6949:17;6940:6;6896:71;:::i;:::-;6752:222;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/MockERC20.sol\":{\"keccak256\":\"0x31eb50afd3ea6ad0a888cf9a022848ee0524654aeeaaa58e1e2115dbb68e26e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d650ca0fa3bd1ea102bd006b03817736f6ef08c10729a34d7dbc2525d55ca5cd\",\"dweb:/ipfs/QmeFg5bACBL8corLLUcS7MgyBXQdYXmA5KMmTo18EGnji3\"]}},\"version\":1}"}},"contracts/ShareToken.sol":{"ShareToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"contract ComplianceModule","name":"_compliance","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"compliance","outputs":[{"internalType":"contract ComplianceModule","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3456":{"entryPoint":null,"id":3456,"parameterSlots":2,"returnSlots":0},"@_361":{"entryPoint":null,"id":361,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8577":{"entryPoint":null,"id":8577,"parameterSlots":3,"returnSlots":0},"@_951":{"entryPoint":null,"id":951,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_3503":{"entryPoint":627,"id":3503,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":720,"id":146,"parameterSlots":1,"returnSlots":0},"@getStringSlot_1586":{"entryPoint":1027,"id":1586,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_1426":{"entryPoint":539,"id":1426,"parameterSlots":2,"returnSlots":1},"@toShortString_1328":{"entryPoint":918,"id":1328,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1314,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_contract$_ComplianceModule_$8510_fromMemory":{"entryPoint":1538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1389,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_contract$_ComplianceModule_$8510_fromMemory":{"entryPoint":1561,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2533,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2589,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2606,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2550,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":2623,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2798,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1185,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1037,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1216,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":2845,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1826,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2834,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1715,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2716,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2147,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1472,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2579,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_ComplianceModule_$8510":{"entryPoint":1492,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1440,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1962,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2108,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":2884,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":1982,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2302,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1270,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1847,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1773,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2272,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1131,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1972,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2240,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1726,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1084,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2022,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":2861,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1057,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1062,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1052,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1047,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1067,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1863,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2227,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2080,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1876,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2032,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_contract$_ComplianceModule_$8510":{"entryPoint":1512,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2075,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12734:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"423:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:29"},"nodeType":"YulFunctionCall","src":"433:12:29"},"nodeType":"YulExpressionStatement","src":"433:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:29"},{"body":{"nodeType":"YulBlock","src":"546:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:29"},"nodeType":"YulFunctionCall","src":"556:12:29"},"nodeType":"YulExpressionStatement","src":"556:12:29"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:29"},{"body":{"nodeType":"YulBlock","src":"628:54:29","statements":[{"nodeType":"YulAssignment","src":"638:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:29"},"nodeType":"YulFunctionCall","src":"652:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:29"},"nodeType":"YulFunctionCall","src":"668:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:29"},"nodeType":"YulFunctionCall","src":"648:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:29","type":""}],"src":"580:102:29"},{"body":{"nodeType":"YulBlock","src":"716:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:29"},"nodeType":"YulFunctionCall","src":"726:88:29"},"nodeType":"YulExpressionStatement","src":"726:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:29"},"nodeType":"YulFunctionCall","src":"823:15:29"},"nodeType":"YulExpressionStatement","src":"823:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:29"},"nodeType":"YulFunctionCall","src":"847:15:29"},"nodeType":"YulExpressionStatement","src":"847:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:29"},{"body":{"nodeType":"YulBlock","src":"917:238:29","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:29"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:29"},"nodeType":"YulFunctionCall","src":"957:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:29"},"nodeType":"YulFunctionCall","src":"945:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:29"},"nodeType":"YulFunctionCall","src":"1098:18:29"},"nodeType":"YulExpressionStatement","src":"1098:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:29"},"nodeType":"YulFunctionCall","src":"1036:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:29"},"nodeType":"YulFunctionCall","src":"1072:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:29"},"nodeType":"YulFunctionCall","src":"1033:62:29"},"nodeType":"YulIf","src":"1030:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:29"},"nodeType":"YulFunctionCall","src":"1127:22:29"},"nodeType":"YulExpressionStatement","src":"1127:22:29"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:29","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:29","type":""}],"src":"874:281:29"},{"body":{"nodeType":"YulBlock","src":"1202:88:29","statements":[{"nodeType":"YulAssignment","src":"1212:30:29","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:29"},"nodeType":"YulFunctionCall","src":"1222:20:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:29"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:29"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:29"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:29"},"nodeType":"YulFunctionCall","src":"1251:33:29"},"nodeType":"YulExpressionStatement","src":"1251:33:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:29","type":""}],"src":"1161:129:29"},{"body":{"nodeType":"YulBlock","src":"1363:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:29"},"nodeType":"YulFunctionCall","src":"1470:18:29"},"nodeType":"YulExpressionStatement","src":"1470:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:29"},"nodeType":"YulFunctionCall","src":"1437:30:29"},"nodeType":"YulIf","src":"1434:56:29"},{"nodeType":"YulAssignment","src":"1500:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:29"},"nodeType":"YulFunctionCall","src":"1508:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:29"}]},{"nodeType":"YulAssignment","src":"1574:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:29"},"nodeType":"YulFunctionCall","src":"1582:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:29"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:29","type":""}],"src":"1296:308:29"},{"body":{"nodeType":"YulBlock","src":"1672:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:29"},"nodeType":"YulFunctionCall","src":"1772:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:29"},"nodeType":"YulFunctionCall","src":"1791:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:29"},"nodeType":"YulFunctionCall","src":"1785:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:29"},"nodeType":"YulFunctionCall","src":"1765:39:29"},"nodeType":"YulExpressionStatement","src":"1765:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:29"},"nodeType":"YulFunctionCall","src":"1709:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:29","statements":[{"nodeType":"YulAssignment","src":"1725:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:29"},"nodeType":"YulFunctionCall","src":"1730:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:29","statements":[]},"src":"1701:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:29"},"nodeType":"YulFunctionCall","src":"1830:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:29"},"nodeType":"YulFunctionCall","src":"1823:27:29"},"nodeType":"YulExpressionStatement","src":"1823:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:29","type":""}],"src":"1610:246:29"},{"body":{"nodeType":"YulBlock","src":"1957:339:29","statements":[{"nodeType":"YulAssignment","src":"1967:75:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:29"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:29"},"nodeType":"YulFunctionCall","src":"1992:49:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:29"},"nodeType":"YulFunctionCall","src":"1976:66:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:29"},"nodeType":"YulFunctionCall","src":"2051:21:29"},"nodeType":"YulExpressionStatement","src":"2051:21:29"},{"nodeType":"YulVariableDeclaration","src":"2081:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:29"},"nodeType":"YulFunctionCall","src":"2092:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:29"},"nodeType":"YulFunctionCall","src":"2148:79:29"},"nodeType":"YulExpressionStatement","src":"2148:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:29"},"nodeType":"YulFunctionCall","src":"2123:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:29"},"nodeType":"YulFunctionCall","src":"2120:25:29"},"nodeType":"YulIf","src":"2117:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:29"},"nodeType":"YulFunctionCall","src":"2238:52:29"},"nodeType":"YulExpressionStatement","src":"2238:52:29"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:29","type":""}],"src":"1862:434:29"},{"body":{"nodeType":"YulBlock","src":"2389:282:29","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:29"},"nodeType":"YulFunctionCall","src":"2440:79:29"},"nodeType":"YulExpressionStatement","src":"2440:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:29"},"nodeType":"YulFunctionCall","src":"2413:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:29"},"nodeType":"YulFunctionCall","src":"2409:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:29"},"nodeType":"YulFunctionCall","src":"2402:35:29"},"nodeType":"YulIf","src":"2399:122:29"},{"nodeType":"YulVariableDeclaration","src":"2530:27:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:29"},"nodeType":"YulFunctionCall","src":"2544:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:29","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:29"},"nodeType":"YulFunctionCall","src":"2634:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:29"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:29"},"nodeType":"YulFunctionCall","src":"2575:90:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:29"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:29","type":""}],"src":"2316:355:29"},{"body":{"nodeType":"YulBlock","src":"2722:81:29","statements":[{"nodeType":"YulAssignment","src":"2732:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2747:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2754:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2743:3:29"},"nodeType":"YulFunctionCall","src":"2743:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2732:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2704:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2714:7:29","type":""}],"src":"2677:126:29"},{"body":{"nodeType":"YulBlock","src":"2854:51:29","statements":[{"nodeType":"YulAssignment","src":"2864:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2893:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2875:17:29"},"nodeType":"YulFunctionCall","src":"2875:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2864:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2836:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2846:7:29","type":""}],"src":"2809:96:29"},{"body":{"nodeType":"YulBlock","src":"2981:51:29","statements":[{"nodeType":"YulAssignment","src":"2991:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3020:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3002:17:29"},"nodeType":"YulFunctionCall","src":"3002:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2991:7:29"}]}]},"name":"cleanup_t_contract$_ComplianceModule_$8510","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2963:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2973:7:29","type":""}],"src":"2911:121:29"},{"body":{"nodeType":"YulBlock","src":"3106:104:29","statements":[{"body":{"nodeType":"YulBlock","src":"3188:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3197:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3200:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3190:6:29"},"nodeType":"YulFunctionCall","src":"3190:12:29"},"nodeType":"YulExpressionStatement","src":"3190:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3129:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3179:5:29"}],"functionName":{"name":"cleanup_t_contract$_ComplianceModule_$8510","nodeType":"YulIdentifier","src":"3136:42:29"},"nodeType":"YulFunctionCall","src":"3136:49:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3126:2:29"},"nodeType":"YulFunctionCall","src":"3126:60:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3119:6:29"},"nodeType":"YulFunctionCall","src":"3119:68:29"},"nodeType":"YulIf","src":"3116:88:29"}]},"name":"validator_revert_t_contract$_ComplianceModule_$8510","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3099:5:29","type":""}],"src":"3038:172:29"},{"body":{"nodeType":"YulBlock","src":"3304:105:29","statements":[{"nodeType":"YulAssignment","src":"3314:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3329:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3323:5:29"},"nodeType":"YulFunctionCall","src":"3323:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3314:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3397:5:29"}],"functionName":{"name":"validator_revert_t_contract$_ComplianceModule_$8510","nodeType":"YulIdentifier","src":"3345:51:29"},"nodeType":"YulFunctionCall","src":"3345:58:29"},"nodeType":"YulExpressionStatement","src":"3345:58:29"}]},"name":"abi_decode_t_contract$_ComplianceModule_$8510_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3282:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3290:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3298:5:29","type":""}],"src":"3216:193:29"},{"body":{"nodeType":"YulBlock","src":"3571:903:29","statements":[{"body":{"nodeType":"YulBlock","src":"3617:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3619:77:29"},"nodeType":"YulFunctionCall","src":"3619:79:29"},"nodeType":"YulExpressionStatement","src":"3619:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3592:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3601:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3588:3:29"},"nodeType":"YulFunctionCall","src":"3588:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3613:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3584:3:29"},"nodeType":"YulFunctionCall","src":"3584:32:29"},"nodeType":"YulIf","src":"3581:119:29"},{"nodeType":"YulBlock","src":"3710:291:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3725:38:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3749:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3760:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3745:3:29"},"nodeType":"YulFunctionCall","src":"3745:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3739:5:29"},"nodeType":"YulFunctionCall","src":"3739:24:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3729:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3810:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3812:77:29"},"nodeType":"YulFunctionCall","src":"3812:79:29"},"nodeType":"YulExpressionStatement","src":"3812:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3782:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3790:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3779:2:29"},"nodeType":"YulFunctionCall","src":"3779:30:29"},"nodeType":"YulIf","src":"3776:117:29"},{"nodeType":"YulAssignment","src":"3907:84:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3963:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3974:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3959:3:29"},"nodeType":"YulFunctionCall","src":"3959:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3983:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3917:41:29"},"nodeType":"YulFunctionCall","src":"3917:74:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3907:6:29"}]}]},{"nodeType":"YulBlock","src":"4011:292:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4026:39:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4050:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4061:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4046:3:29"},"nodeType":"YulFunctionCall","src":"4046:18:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4040:5:29"},"nodeType":"YulFunctionCall","src":"4040:25:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4030:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4112:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4114:77:29"},"nodeType":"YulFunctionCall","src":"4114:79:29"},"nodeType":"YulExpressionStatement","src":"4114:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4084:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4092:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4081:2:29"},"nodeType":"YulFunctionCall","src":"4081:30:29"},"nodeType":"YulIf","src":"4078:117:29"},{"nodeType":"YulAssignment","src":"4209:84:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4265:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4276:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4261:3:29"},"nodeType":"YulFunctionCall","src":"4261:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4285:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4219:41:29"},"nodeType":"YulFunctionCall","src":"4219:74:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:29"}]}]},{"nodeType":"YulBlock","src":"4313:154:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4328:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4342:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4332:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4358:99:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4429:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4440:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4425:3:29"},"nodeType":"YulFunctionCall","src":"4425:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4449:7:29"}],"functionName":{"name":"abi_decode_t_contract$_ComplianceModule_$8510_fromMemory","nodeType":"YulIdentifier","src":"4368:56:29"},"nodeType":"YulFunctionCall","src":"4368:89:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4358:6:29"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_contract$_ComplianceModule_$8510_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3536:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3548:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3556:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3564:6:29","type":""}],"src":"3415:1059:29"},{"body":{"nodeType":"YulBlock","src":"4539:40:29","statements":[{"nodeType":"YulAssignment","src":"4550:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4566:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4560:5:29"},"nodeType":"YulFunctionCall","src":"4560:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4550:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4522:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4532:6:29","type":""}],"src":"4480:99:29"},{"body":{"nodeType":"YulBlock","src":"4613:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4630:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4633:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4623:6:29"},"nodeType":"YulFunctionCall","src":"4623:88:29"},"nodeType":"YulExpressionStatement","src":"4623:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4727:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4730:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4720:6:29"},"nodeType":"YulFunctionCall","src":"4720:15:29"},"nodeType":"YulExpressionStatement","src":"4720:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4751:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4754:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4744:6:29"},"nodeType":"YulFunctionCall","src":"4744:15:29"},"nodeType":"YulExpressionStatement","src":"4744:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"4585:180:29"},{"body":{"nodeType":"YulBlock","src":"4822:269:29","statements":[{"nodeType":"YulAssignment","src":"4832:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4846:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"4852:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4842:3:29"},"nodeType":"YulFunctionCall","src":"4842:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4832:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"4863:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4893:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"4899:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4889:3:29"},"nodeType":"YulFunctionCall","src":"4889:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4867:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4940:51:29","statements":[{"nodeType":"YulAssignment","src":"4954:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4968:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4976:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4964:3:29"},"nodeType":"YulFunctionCall","src":"4964:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4954:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4920:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4913:6:29"},"nodeType":"YulFunctionCall","src":"4913:26:29"},"nodeType":"YulIf","src":"4910:81:29"},{"body":{"nodeType":"YulBlock","src":"5043:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"5057:16:29"},"nodeType":"YulFunctionCall","src":"5057:18:29"},"nodeType":"YulExpressionStatement","src":"5057:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5007:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5030:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5038:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5027:2:29"},"nodeType":"YulFunctionCall","src":"5027:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5004:2:29"},"nodeType":"YulFunctionCall","src":"5004:38:29"},"nodeType":"YulIf","src":"5001:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4806:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4815:6:29","type":""}],"src":"4771:320:29"},{"body":{"nodeType":"YulBlock","src":"5151:87:29","statements":[{"nodeType":"YulAssignment","src":"5161:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"5169:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5161:4:29"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5189:1:29","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"5192:3:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5182:6:29"},"nodeType":"YulFunctionCall","src":"5182:14:29"},"nodeType":"YulExpressionStatement","src":"5182:14:29"},{"nodeType":"YulAssignment","src":"5205:26:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5223:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5226:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5213:9:29"},"nodeType":"YulFunctionCall","src":"5213:18:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5205:4:29"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5138:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"5146:4:29","type":""}],"src":"5097:141:29"},{"body":{"nodeType":"YulBlock","src":"5288:49:29","statements":[{"nodeType":"YulAssignment","src":"5298:33:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5316:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"5323:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5312:3:29"},"nodeType":"YulFunctionCall","src":"5312:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"5328:2:29","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5308:3:29"},"nodeType":"YulFunctionCall","src":"5308:23:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5298:6:29"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5271:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5281:6:29","type":""}],"src":"5244:93:29"},{"body":{"nodeType":"YulBlock","src":"5396:54:29","statements":[{"nodeType":"YulAssignment","src":"5406:37:29","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"5431:4:29"},{"name":"value","nodeType":"YulIdentifier","src":"5437:5:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5427:3:29"},"nodeType":"YulFunctionCall","src":"5427:16:29"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"5406:8:29"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"5371:4:29","type":""},{"name":"value","nodeType":"YulTypedName","src":"5377:5:29","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"5387:8:29","type":""}],"src":"5343:107:29"},{"body":{"nodeType":"YulBlock","src":"5532:317:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5542:35:29","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"5563:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"5575:1:29","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5559:3:29"},"nodeType":"YulFunctionCall","src":"5559:18:29"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"5546:9:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5586:109:29","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5617:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5628:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5598:18:29"},"nodeType":"YulFunctionCall","src":"5598:97:29"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"5590:4:29","type":""}]},{"nodeType":"YulAssignment","src":"5704:51:29","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5735:9:29"},{"name":"toInsert","nodeType":"YulIdentifier","src":"5746:8:29"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5716:18:29"},"nodeType":"YulFunctionCall","src":"5716:39:29"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5704:8:29"}]},{"nodeType":"YulAssignment","src":"5764:30:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5777:5:29"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"5788:4:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5784:3:29"},"nodeType":"YulFunctionCall","src":"5784:9:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5773:3:29"},"nodeType":"YulFunctionCall","src":"5773:21:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5764:5:29"}]},{"nodeType":"YulAssignment","src":"5803:40:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5816:5:29"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5827:8:29"},{"name":"mask","nodeType":"YulIdentifier","src":"5837:4:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5823:3:29"},"nodeType":"YulFunctionCall","src":"5823:19:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5813:2:29"},"nodeType":"YulFunctionCall","src":"5813:30:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5803:6:29"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5493:5:29","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"5500:10:29","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"5512:8:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5525:6:29","type":""}],"src":"5456:393:29"},{"body":{"nodeType":"YulBlock","src":"5900:32:29","statements":[{"nodeType":"YulAssignment","src":"5910:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"5921:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5910:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5882:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5892:7:29","type":""}],"src":"5855:77:29"},{"body":{"nodeType":"YulBlock","src":"5970:28:29","statements":[{"nodeType":"YulAssignment","src":"5980:12:29","value":{"name":"value","nodeType":"YulIdentifier","src":"5987:5:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5980:3:29"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5956:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5966:3:29","type":""}],"src":"5938:60:29"},{"body":{"nodeType":"YulBlock","src":"6064:82:29","statements":[{"nodeType":"YulAssignment","src":"6074:66:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6132:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6114:17:29"},"nodeType":"YulFunctionCall","src":"6114:24:29"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"6105:8:29"},"nodeType":"YulFunctionCall","src":"6105:34:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6087:17:29"},"nodeType":"YulFunctionCall","src":"6087:53:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6074:9:29"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6044:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6054:9:29","type":""}],"src":"6004:142:29"},{"body":{"nodeType":"YulBlock","src":"6199:28:29","statements":[{"nodeType":"YulAssignment","src":"6209:12:29","value":{"name":"value","nodeType":"YulIdentifier","src":"6216:5:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6209:3:29"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6185:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6195:3:29","type":""}],"src":"6152:75:29"},{"body":{"nodeType":"YulBlock","src":"6309:193:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6319:63:29","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"6374:7:29"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6343:30:29"},"nodeType":"YulFunctionCall","src":"6343:39:29"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"6323:16:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6398:4:29"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6438:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6432:5:29"},"nodeType":"YulFunctionCall","src":"6432:11:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6445:6:29"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"6477:16:29"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"6453:23:29"},"nodeType":"YulFunctionCall","src":"6453:41:29"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"6404:27:29"},"nodeType":"YulFunctionCall","src":"6404:91:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6391:6:29"},"nodeType":"YulFunctionCall","src":"6391:105:29"},"nodeType":"YulExpressionStatement","src":"6391:105:29"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6286:4:29","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6292:6:29","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"6300:7:29","type":""}],"src":"6233:269:29"},{"body":{"nodeType":"YulBlock","src":"6557:24:29","statements":[{"nodeType":"YulAssignment","src":"6567:8:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6574:1:29","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6567:3:29"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6553:3:29","type":""}],"src":"6508:73:29"},{"body":{"nodeType":"YulBlock","src":"6640:136:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6650:46:29","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"6664:30:29"},"nodeType":"YulFunctionCall","src":"6664:32:29"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"6654:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6749:4:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6755:6:29"},{"name":"zero_0","nodeType":"YulIdentifier","src":"6763:6:29"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6705:43:29"},"nodeType":"YulFunctionCall","src":"6705:65:29"},"nodeType":"YulExpressionStatement","src":"6705:65:29"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6626:4:29","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6632:6:29","type":""}],"src":"6587:189:29"},{"body":{"nodeType":"YulBlock","src":"6832:136:29","statements":[{"body":{"nodeType":"YulBlock","src":"6899:63:29","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6943:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"6950:1:29","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"6913:29:29"},"nodeType":"YulFunctionCall","src":"6913:39:29"},"nodeType":"YulExpressionStatement","src":"6913:39:29"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6852:5:29"},{"name":"end","nodeType":"YulIdentifier","src":"6859:3:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6849:2:29"},"nodeType":"YulFunctionCall","src":"6849:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6864:26:29","statements":[{"nodeType":"YulAssignment","src":"6866:22:29","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6879:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"6886:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6875:3:29"},"nodeType":"YulFunctionCall","src":"6875:13:29"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"6866:5:29"}]}]},"pre":{"nodeType":"YulBlock","src":"6846:2:29","statements":[]},"src":"6842:120:29"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"6820:5:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"6827:3:29","type":""}],"src":"6782:186:29"},{"body":{"nodeType":"YulBlock","src":"7053:464:29","statements":[{"body":{"nodeType":"YulBlock","src":"7079:431:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7093:54:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7141:5:29"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7109:31:29"},"nodeType":"YulFunctionCall","src":"7109:38:29"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"7097:8:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7160:63:29","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"7183:8:29"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"7211:10:29"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"7193:17:29"},"nodeType":"YulFunctionCall","src":"7193:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7179:3:29"},"nodeType":"YulFunctionCall","src":"7179:44:29"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"7164:11:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7380:27:29","statements":[{"nodeType":"YulAssignment","src":"7382:23:29","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"7397:8:29"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7382:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"7364:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"7376:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7361:2:29"},"nodeType":"YulFunctionCall","src":"7361:18:29"},"nodeType":"YulIf","src":"7358:49:29"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7449:11:29"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"7466:8:29"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7494:3:29"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"7476:17:29"},"nodeType":"YulFunctionCall","src":"7476:22:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7462:3:29"},"nodeType":"YulFunctionCall","src":"7462:37:29"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"7420:28:29"},"nodeType":"YulFunctionCall","src":"7420:80:29"},"nodeType":"YulExpressionStatement","src":"7420:80:29"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7070:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"7075:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7067:2:29"},"nodeType":"YulFunctionCall","src":"7067:11:29"},"nodeType":"YulIf","src":"7064:446:29"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"7029:5:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"7036:3:29","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"7041:10:29","type":""}],"src":"6974:543:29"},{"body":{"nodeType":"YulBlock","src":"7586:54:29","statements":[{"nodeType":"YulAssignment","src":"7596:37:29","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"7621:4:29"},{"name":"value","nodeType":"YulIdentifier","src":"7627:5:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7617:3:29"},"nodeType":"YulFunctionCall","src":"7617:16:29"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"7596:8:29"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"7561:4:29","type":""},{"name":"value","nodeType":"YulTypedName","src":"7567:5:29","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"7577:8:29","type":""}],"src":"7523:117:29"},{"body":{"nodeType":"YulBlock","src":"7697:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7707:68:29","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7756:1:29","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"7759:5:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7752:3:29"},"nodeType":"YulFunctionCall","src":"7752:13:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7771:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7767:3:29"},"nodeType":"YulFunctionCall","src":"7767:6:29"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"7723:28:29"},"nodeType":"YulFunctionCall","src":"7723:51:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7719:3:29"},"nodeType":"YulFunctionCall","src":"7719:56:29"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7711:4:29","type":""}]},{"nodeType":"YulAssignment","src":"7784:25:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7798:4:29"},{"name":"mask","nodeType":"YulIdentifier","src":"7804:4:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7794:3:29"},"nodeType":"YulFunctionCall","src":"7794:15:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7784:6:29"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7674:4:29","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"7680:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7690:6:29","type":""}],"src":"7646:169:29"},{"body":{"nodeType":"YulBlock","src":"7901:214:29","statements":[{"nodeType":"YulAssignment","src":"8034:37:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8061:4:29"},{"name":"len","nodeType":"YulIdentifier","src":"8067:3:29"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8042:18:29"},"nodeType":"YulFunctionCall","src":"8042:29:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8034:4:29"}]},{"nodeType":"YulAssignment","src":"8080:29:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8091:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8101:1:29","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"8104:3:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8097:3:29"},"nodeType":"YulFunctionCall","src":"8097:11:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8088:2:29"},"nodeType":"YulFunctionCall","src":"8088:21:29"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"8080:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7882:4:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"7888:3:29","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"7896:4:29","type":""}],"src":"7820:295:29"},{"body":{"nodeType":"YulBlock","src":"8212:1303:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8223:51:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8270:3:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8237:32:29"},"nodeType":"YulFunctionCall","src":"8237:37:29"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"8227:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8359:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8361:16:29"},"nodeType":"YulFunctionCall","src":"8361:18:29"},"nodeType":"YulExpressionStatement","src":"8361:18:29"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8331:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8339:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8328:2:29"},"nodeType":"YulFunctionCall","src":"8328:30:29"},"nodeType":"YulIf","src":"8325:56:29"},{"nodeType":"YulVariableDeclaration","src":"8391:52:29","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8437:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8431:5:29"},"nodeType":"YulFunctionCall","src":"8431:11:29"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"8405:25:29"},"nodeType":"YulFunctionCall","src":"8405:38:29"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"8395:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8536:4:29"},{"name":"oldLen","nodeType":"YulIdentifier","src":"8542:6:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"8550:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"8490:45:29"},"nodeType":"YulFunctionCall","src":"8490:67:29"},"nodeType":"YulExpressionStatement","src":"8490:67:29"},{"nodeType":"YulVariableDeclaration","src":"8567:18:29","value":{"kind":"number","nodeType":"YulLiteral","src":"8584:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"8571:9:29","type":""}]},{"nodeType":"YulAssignment","src":"8595:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"8608:4:29","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8595:9:29"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8659:611:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8673:37:29","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8692:6:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8704:4:29","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8700:3:29"},"nodeType":"YulFunctionCall","src":"8700:9:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8688:3:29"},"nodeType":"YulFunctionCall","src":"8688:22:29"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"8677:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8724:51:29","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8770:4:29"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8738:31:29"},"nodeType":"YulFunctionCall","src":"8738:37:29"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"8728:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8788:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"8797:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8792:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8856:163:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8881:6:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8899:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8904:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8895:3:29"},"nodeType":"YulFunctionCall","src":"8895:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8889:5:29"},"nodeType":"YulFunctionCall","src":"8889:26:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8874:6:29"},"nodeType":"YulFunctionCall","src":"8874:42:29"},"nodeType":"YulExpressionStatement","src":"8874:42:29"},{"nodeType":"YulAssignment","src":"8933:24:29","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8947:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8955:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8943:3:29"},"nodeType":"YulFunctionCall","src":"8943:14:29"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8933:6:29"}]},{"nodeType":"YulAssignment","src":"8974:31:29","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8991:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9002:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8987:3:29"},"nodeType":"YulFunctionCall","src":"8987:18:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8974:9:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8822:1:29"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"8825:7:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8819:2:29"},"nodeType":"YulFunctionCall","src":"8819:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8834:21:29","statements":[{"nodeType":"YulAssignment","src":"8836:17:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8845:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"8848:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8841:3:29"},"nodeType":"YulFunctionCall","src":"8841:12:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8836:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"8815:3:29","statements":[]},"src":"8811:208:29"},{"body":{"nodeType":"YulBlock","src":"9055:156:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9073:43:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9100:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9105:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9096:3:29"},"nodeType":"YulFunctionCall","src":"9096:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9090:5:29"},"nodeType":"YulFunctionCall","src":"9090:26:29"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"9077:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9140:6:29"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"9167:9:29"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9182:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9190:4:29","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9178:3:29"},"nodeType":"YulFunctionCall","src":"9178:17:29"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"9148:18:29"},"nodeType":"YulFunctionCall","src":"9148:48:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9133:6:29"},"nodeType":"YulFunctionCall","src":"9133:64:29"},"nodeType":"YulExpressionStatement","src":"9133:64:29"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"9038:7:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"9047:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9035:2:29"},"nodeType":"YulFunctionCall","src":"9035:19:29"},"nodeType":"YulIf","src":"9032:179:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9231:4:29"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9245:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9253:1:29","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9241:3:29"},"nodeType":"YulFunctionCall","src":"9241:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"9257:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9237:3:29"},"nodeType":"YulFunctionCall","src":"9237:22:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9224:6:29"},"nodeType":"YulFunctionCall","src":"9224:36:29"},"nodeType":"YulExpressionStatement","src":"9224:36:29"}]},"nodeType":"YulCase","src":"8652:618:29","value":{"kind":"number","nodeType":"YulLiteral","src":"8657:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"9287:222:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9301:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"9314:1:29","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9305:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"9338:67:29","statements":[{"nodeType":"YulAssignment","src":"9356:35:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9375:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9380:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9371:3:29"},"nodeType":"YulFunctionCall","src":"9371:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9365:5:29"},"nodeType":"YulFunctionCall","src":"9365:26:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9356:5:29"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"9331:6:29"},"nodeType":"YulIf","src":"9328:77:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9425:4:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9484:5:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"9491:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"9431:52:29"},"nodeType":"YulFunctionCall","src":"9431:67:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9418:6:29"},"nodeType":"YulFunctionCall","src":"9418:81:29"},"nodeType":"YulExpressionStatement","src":"9418:81:29"}]},"nodeType":"YulCase","src":"9279:230:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8632:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8640:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8629:2:29"},"nodeType":"YulFunctionCall","src":"8629:14:29"},"nodeType":"YulSwitch","src":"8622:887:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"8201:4:29","type":""},{"name":"src","nodeType":"YulTypedName","src":"8207:3:29","type":""}],"src":"8120:1395:29"},{"body":{"nodeType":"YulBlock","src":"9586:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9603:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9626:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9608:17:29"},"nodeType":"YulFunctionCall","src":"9608:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9596:6:29"},"nodeType":"YulFunctionCall","src":"9596:37:29"},"nodeType":"YulExpressionStatement","src":"9596:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9574:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9581:3:29","type":""}],"src":"9521:118:29"},{"body":{"nodeType":"YulBlock","src":"9743:124:29","statements":[{"nodeType":"YulAssignment","src":"9753:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9765:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9776:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9761:3:29"},"nodeType":"YulFunctionCall","src":"9761:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9753:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9833:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9846:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9857:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9842:3:29"},"nodeType":"YulFunctionCall","src":"9842:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9789:43:29"},"nodeType":"YulFunctionCall","src":"9789:71:29"},"nodeType":"YulExpressionStatement","src":"9789:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9715:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9727:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9738:4:29","type":""}],"src":"9645:222:29"},{"body":{"nodeType":"YulBlock","src":"9918:32:29","statements":[{"nodeType":"YulAssignment","src":"9928:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"9939:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9928:7:29"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9900:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9910:7:29","type":""}],"src":"9873:77:29"},{"body":{"nodeType":"YulBlock","src":"10021:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10038:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10061:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"10043:17:29"},"nodeType":"YulFunctionCall","src":"10043:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10031:6:29"},"nodeType":"YulFunctionCall","src":"10031:37:29"},"nodeType":"YulExpressionStatement","src":"10031:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10009:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10016:3:29","type":""}],"src":"9956:118:29"},{"body":{"nodeType":"YulBlock","src":"10145:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10162:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10185:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10167:17:29"},"nodeType":"YulFunctionCall","src":"10167:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10155:6:29"},"nodeType":"YulFunctionCall","src":"10155:37:29"},"nodeType":"YulExpressionStatement","src":"10155:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10133:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10140:3:29","type":""}],"src":"10080:118:29"},{"body":{"nodeType":"YulBlock","src":"10414:454:29","statements":[{"nodeType":"YulAssignment","src":"10424:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10436:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10447:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10432:3:29"},"nodeType":"YulFunctionCall","src":"10432:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10424:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10505:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10518:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10529:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10514:3:29"},"nodeType":"YulFunctionCall","src":"10514:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"10461:43:29"},"nodeType":"YulFunctionCall","src":"10461:71:29"},"nodeType":"YulExpressionStatement","src":"10461:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10586:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10599:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10610:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10595:3:29"},"nodeType":"YulFunctionCall","src":"10595:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"10542:43:29"},"nodeType":"YulFunctionCall","src":"10542:72:29"},"nodeType":"YulExpressionStatement","src":"10542:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10668:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10681:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10692:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10677:3:29"},"nodeType":"YulFunctionCall","src":"10677:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"10624:43:29"},"nodeType":"YulFunctionCall","src":"10624:72:29"},"nodeType":"YulExpressionStatement","src":"10624:72:29"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10750:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10763:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10774:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10759:3:29"},"nodeType":"YulFunctionCall","src":"10759:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10706:43:29"},"nodeType":"YulFunctionCall","src":"10706:72:29"},"nodeType":"YulExpressionStatement","src":"10706:72:29"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10832:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10845:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10856:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10841:3:29"},"nodeType":"YulFunctionCall","src":"10841:19:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10788:43:29"},"nodeType":"YulFunctionCall","src":"10788:73:29"},"nodeType":"YulExpressionStatement","src":"10788:73:29"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10354:9:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10366:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10374:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10382:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10390:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10398:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10409:4:29","type":""}],"src":"10204:664:29"},{"body":{"nodeType":"YulBlock","src":"10970:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10987:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"10992:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10980:6:29"},"nodeType":"YulFunctionCall","src":"10980:19:29"},"nodeType":"YulExpressionStatement","src":"10980:19:29"},{"nodeType":"YulAssignment","src":"11008:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11027:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"11032:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11023:3:29"},"nodeType":"YulFunctionCall","src":"11023:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11008:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10942:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"10947:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10958:11:29","type":""}],"src":"10874:169:29"},{"body":{"nodeType":"YulBlock","src":"11141:285:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11151:53:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11198:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11165:32:29"},"nodeType":"YulFunctionCall","src":"11165:39:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11155:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11213:78:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11279:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"11284:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11220:58:29"},"nodeType":"YulFunctionCall","src":"11220:71:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11213:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11339:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"11346:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11335:3:29"},"nodeType":"YulFunctionCall","src":"11335:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"11353:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"11358:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11300:34:29"},"nodeType":"YulFunctionCall","src":"11300:65:29"},"nodeType":"YulExpressionStatement","src":"11300:65:29"},{"nodeType":"YulAssignment","src":"11374:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11385:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11412:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11390:21:29"},"nodeType":"YulFunctionCall","src":"11390:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11381:3:29"},"nodeType":"YulFunctionCall","src":"11381:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11374:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11122:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11129:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11137:3:29","type":""}],"src":"11049:377:29"},{"body":{"nodeType":"YulBlock","src":"11550:195:29","statements":[{"nodeType":"YulAssignment","src":"11560:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11572:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11583:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11568:3:29"},"nodeType":"YulFunctionCall","src":"11568:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11560:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11607:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11618:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11603:3:29"},"nodeType":"YulFunctionCall","src":"11603:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11626:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11632:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11622:3:29"},"nodeType":"YulFunctionCall","src":"11622:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11596:6:29"},"nodeType":"YulFunctionCall","src":"11596:47:29"},"nodeType":"YulExpressionStatement","src":"11596:47:29"},{"nodeType":"YulAssignment","src":"11652:86:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11724:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"11733:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11660:63:29"},"nodeType":"YulFunctionCall","src":"11660:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11652:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11522:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11534:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11545:4:29","type":""}],"src":"11432:313:29"},{"body":{"nodeType":"YulBlock","src":"11809:40:29","statements":[{"nodeType":"YulAssignment","src":"11820:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11836:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11830:5:29"},"nodeType":"YulFunctionCall","src":"11830:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11820:6:29"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11792:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11802:6:29","type":""}],"src":"11751:98:29"},{"body":{"nodeType":"YulBlock","src":"11911:60:29","statements":[{"nodeType":"YulAssignment","src":"11921:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"11929:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11921:4:29"}]},{"nodeType":"YulAssignment","src":"11942:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"11954:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"11959:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11950:3:29"},"nodeType":"YulFunctionCall","src":"11950:14:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11942:4:29"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11898:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11906:4:29","type":""}],"src":"11855:116:29"},{"body":{"nodeType":"YulBlock","src":"12032:99:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12043:42:29","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12080:3:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12074:5:29"},"nodeType":"YulFunctionCall","src":"12074:10:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"12056:17:29"},"nodeType":"YulFunctionCall","src":"12056:29:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12047:5:29","type":""}]},{"nodeType":"YulAssignment","src":"12095:29:29","value":{"name":"value","nodeType":"YulIdentifier","src":"12119:5:29"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"12095:11:29"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12012:3:29","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"12020:11:29","type":""}],"src":"11977:154:29"},{"body":{"nodeType":"YulBlock","src":"12227:504:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12238:52:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"12284:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12252:31:29"},"nodeType":"YulFunctionCall","src":"12252:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12242:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12299:21:29","value":{"name":"array","nodeType":"YulIdentifier","src":"12315:5:29"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"12303:8:29","type":""}]},{"nodeType":"YulAssignment","src":"12330:52:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"12376:5:29"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12342:33:29"},"nodeType":"YulFunctionCall","src":"12342:40:29"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"12330:8:29"}]},{"nodeType":"YulAssignment","src":"12392:44:29","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"12427:8:29"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"12401:25:29"},"nodeType":"YulFunctionCall","src":"12401:35:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12392:5:29"}]},{"body":{"nodeType":"YulBlock","src":"12464:260:29","statements":[{"nodeType":"YulAssignment","src":"12478:236:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12508:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12575:1:29","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12582:2:29","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"12586:6:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12578:3:29"},"nodeType":"YulFunctionCall","src":"12578:15:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12571:3:29"},"nodeType":"YulFunctionCall","src":"12571:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"12616:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"12531:18:29"},"nodeType":"YulFunctionCall","src":"12531:169:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12487:3:29"},"nodeType":"YulFunctionCall","src":"12487:227:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12478:5:29"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12452:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12460:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12449:2:29"},"nodeType":"YulFunctionCall","src":"12449:14:29"},"nodeType":"YulIf","src":"12446:278:29"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"12211:5:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12221:5:29","type":""}],"src":"12137:594:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ComplianceModule_$8510(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ComplianceModule_$8510(value) {\n        if iszero(eq(value, cleanup_t_contract$_ComplianceModule_$8510(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ComplianceModule_$8510_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ComplianceModule_$8510(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_contract$_ComplianceModule_$8510_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_ComplianceModule_$8510_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101606040523480156200001257600080fd5b5060405162002c3538038062002c35833981810160405281019062000038919062000619565b3383806040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525086868160039081620000849190620008fe565b508060049081620000969190620008fe565b505050620000af6005836200021b60201b90919060201c565b6101208181525050620000cd6006826200021b60201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a081815250506200010c6200027360201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001bf5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001b69190620009f6565b60405180910390fd5b620001d081620002d060201b60201c565b5080600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000bb4565b6000602083511015620002415762000239836200039660201b60201c565b90506200026d565b8262000253836200040360201b60201c565b6000019081620002649190620008fe565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e051610100514630604051602001620002b595949392919062000a3f565b60405160208183030381529060405280519060200120905090565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080829050601f81511115620003e657826040517f305a27a9000000000000000000000000000000000000000000000000000000008152600401620003dd919062000aee565b60405180910390fd5b805181620003f49062000b44565b60001c1760001b915050919050565b6000819050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000476826200042b565b810181811067ffffffffffffffff821117156200049857620004976200043c565b5b80604052505050565b6000620004ad6200040d565b9050620004bb82826200046b565b919050565b600067ffffffffffffffff821115620004de57620004dd6200043c565b5b620004e9826200042b565b9050602081019050919050565b60005b8381101562000516578082015181840152602081019050620004f9565b60008484015250505050565b6000620005396200053384620004c0565b620004a1565b90508281526020810184848401111562000558576200055762000426565b5b62000565848285620004f6565b509392505050565b600082601f83011262000585576200058462000421565b5b81516200059784826020860162000522565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005cd82620005a0565b9050919050565b6000620005e182620005c0565b9050919050565b620005f381620005d4565b8114620005ff57600080fd5b50565b6000815190506200061381620005e8565b92915050565b60008060006060848603121562000635576200063462000417565b5b600084015167ffffffffffffffff8111156200065657620006556200041c565b5b62000664868287016200056d565b935050602084015167ffffffffffffffff8111156200068857620006876200041c565b5b62000696868287016200056d565b9250506040620006a98682870162000602565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200070657607f821691505b6020821081036200071c576200071b620006be565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620007867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000747565b62000792868362000747565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620007df620007d9620007d384620007aa565b620007b4565b620007aa565b9050919050565b6000819050919050565b620007fb83620007be565b620008136200080a82620007e6565b84845462000754565b825550505050565b600090565b6200082a6200081b565b62000837818484620007f0565b505050565b5b818110156200085f576200085360008262000820565b6001810190506200083d565b5050565b601f821115620008ae57620008788162000722565b620008838462000737565b8101602085101562000893578190505b620008ab620008a28562000737565b8301826200083c565b50505b505050565b600082821c905092915050565b6000620008d360001984600802620008b3565b1980831691505092915050565b6000620008ee8383620008c0565b9150826002028217905092915050565b6200090982620006b3565b67ffffffffffffffff8111156200092557620009246200043c565b5b620009318254620006ed565b6200093e82828562000863565b600060209050601f83116001811462000976576000841562000961578287015190505b6200096d8582620008e0565b865550620009dd565b601f198416620009868662000722565b60005b82811015620009b05784890151825560018201915060208501945060208101905062000989565b86831015620009d05784890151620009cc601f891682620008c0565b8355505b6001600288020188555050505b505050505050565b620009f081620005c0565b82525050565b600060208201905062000a0d6000830184620009e5565b92915050565b6000819050919050565b62000a288162000a13565b82525050565b62000a3981620007aa565b82525050565b600060a08201905062000a56600083018862000a1d565b62000a65602083018762000a1d565b62000a74604083018662000a1d565b62000a83606083018562000a2e565b62000a926080830184620009e5565b9695505050505050565b600082825260208201905092915050565b600062000aba82620006b3565b62000ac6818562000a9c565b935062000ad8818560208601620004f6565b62000ae3816200042b565b840191505092915050565b6000602082019050818103600083015262000b0a818462000aad565b905092915050565b600081519050919050565b6000819050602082019050919050565b600062000b3b825162000a13565b80915050919050565b600062000b518262000b12565b8262000b5d8462000b1d565b905062000b6a8162000b2d565b9250602082101562000bad5762000ba87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080262000747565b831692505b5050919050565b60805160a05160c05160e05161010051610120516101405161202662000c0f6000396000610dd301526000610d98015260006112e8015260006112c701526000610ac401526000610b1a01526000610b4301526120266000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a257806395d89b411161007157806395d89b41146102d9578063a9059cbb146102f7578063d505accf14610327578063dd62ed3e14610343578063f2fde38b1461037357610116565b8063715018a61461025d5780637ecebe001461026757806384b0196e146102975780638da5cb5b146102bb57610116565b8063313ce567116100e9578063313ce567146101b75780633644e515146101d557806340c10f19146101f35780636290865d1461020f57806370a082311461022d57610116565b806306fdde031461011b578063095ea7b31461013957806318160ddd1461016957806323b872dd14610187575b600080fd5b61012361038f565b60405161013091906117d5565b60405180910390f35b610153600480360381019061014e9190611890565b610421565b60405161016091906118eb565b60405180910390f35b610171610444565b60405161017e9190611915565b60405180910390f35b6101a1600480360381019061019c9190611930565b61044e565b6040516101ae91906118eb565b60405180910390f35b6101bf61047d565b6040516101cc919061199f565b60405180910390f35b6101dd610486565b6040516101ea91906119d3565b60405180910390f35b61020d60048036038101906102089190611890565b610495565b005b6102176104ab565b6040516102249190611a4d565b60405180910390f35b61024760048036038101906102429190611a68565b6104d1565b6040516102549190611915565b60405180910390f35b610265610519565b005b610281600480360381019061027c9190611a68565b61052d565b60405161028e9190611915565b60405180910390f35b61029f61053f565b6040516102b29796959493929190611b9d565b60405180910390f35b6102c36105e9565b6040516102d09190611c21565b60405180910390f35b6102e1610613565b6040516102ee91906117d5565b60405180910390f35b610311600480360381019061030c9190611890565b6106a5565b60405161031e91906118eb565b60405180910390f35b610341600480360381019061033c9190611c94565b6106c8565b005b61035d60048036038101906103589190611d36565b610810565b60405161036a9190611915565b60405180910390f35b61038d60048036038101906103889190611a68565b610897565b005b60606003805461039e90611da5565b80601f01602080910402602001604051908101604052809291908181526020018280546103ca90611da5565b80156104175780601f106103ec57610100808354040283529160200191610417565b820191906000526020600020905b8154815290600101906020018083116103fa57829003601f168201915b5050505050905090565b60008061042c61091d565b9050610439818585610925565b600191505092915050565b6000600254905090565b60008061045961091d565b9050610466858285610937565b6104718585856109cc565b60019150509392505050565b60006012905090565b6000610490610ac0565b905090565b61049d610b77565b6104a78282610bfe565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610521610b77565b61052b6000610c80565b565b600061053882610d46565b9050919050565b600060608060008060006060610553610d8f565b61055b610dca565b46306000801b600067ffffffffffffffff81111561057c5761057b611dd6565b5b6040519080825280602002602001820160405280156105aa5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461062290611da5565b80601f016020809104026020016040519081016040528092919081815260200182805461064e90611da5565b801561069b5780601f106106705761010080835404028352916020019161069b565b820191906000526020600020905b81548152906001019060200180831161067e57829003601f168201915b5050505050905090565b6000806106b061091d565b90506106bd8185856109cc565b600191505092915050565b8342111561070d57836040517f627913020000000000000000000000000000000000000000000000000000000081526004016107049190611915565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861073c8c610e05565b8960405160200161075296959493929190611e05565b604051602081830303815290604052805190602001209050600061077582610e5c565b9050600061078582878787610e76565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107f957808a6040517f4b800e460000000000000000000000000000000000000000000000000000000081526004016107f0929190611e66565b60405180910390fd5b6108048a8a8a610925565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61089f610b77565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109115760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109089190611c21565b60405180910390fd5b61091a81610c80565b50565b600033905090565b6109328383836001610ea6565b505050565b60006109438484610810565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156109c657818110156109b6578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109ad93929190611e8f565b60405180910390fd5b6109c584848484036000610ea6565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a3e5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a359190611c21565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ab05760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610aa79190611c21565b60405180910390fd5b610abb83838361107d565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610b3c57507f000000000000000000000000000000000000000000000000000000000000000046145b15610b69577f00000000000000000000000000000000000000000000000000000000000000009050610b74565b610b716112a2565b90505b90565b610b7f61091d565b73ffffffffffffffffffffffffffffffffffffffff16610b9d6105e9565b73ffffffffffffffffffffffffffffffffffffffff1614610bfc57610bc061091d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bf39190611c21565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c705760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c679190611c21565b60405180910390fd5b610c7c6000838361107d565b5050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060610dc560057f000000000000000000000000000000000000000000000000000000000000000061133890919063ffffffff16565b905090565b6060610e0060067f000000000000000000000000000000000000000000000000000000000000000061133890919063ffffffff16565b905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b6000610e6f610e69610ac0565b836113e8565b9050919050565b600080600080610e8888888888611429565b925092509250610e98828261151d565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f185760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610f0f9190611c21565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f8a5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f819190611c21565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611077578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161106e9190611915565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110cf5780600260008282546110c39190611ef5565b925050819055506111a2565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561115b578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161115293929190611e8f565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111eb5780600260008282540392505081905550611238565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112959190611915565b60405180910390a3505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000463060405160200161131d959493929190611f29565b60405160208183030381529060405280519060200120905090565b606060ff60001b83146113555761134e83611681565b90506113e2565b81805461136190611da5565b80601f016020809104026020016040519081016040528092919081815260200182805461138d90611da5565b80156113da5780601f106113af576101008083540402835291602001916113da565b820191906000526020600020905b8154815290600101906020018083116113bd57829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115611469576000600385925092509250611513565b60006001888888886040516000815260200160405260405161148e9493929190611f7c565b6020604051602081039080840390855afa1580156114b0573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361150457600060016000801b93509350935050611513565b8060008060001b935093509350505b9450945094915050565b6000600381111561153157611530611fc1565b5b82600381111561154457611543611fc1565b5b031561167d576001600381111561155e5761155d611fc1565b5b82600381111561157157611570611fc1565b5b036115a8576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156115bc576115bb611fc1565b5b8260038111156115cf576115ce611fc1565b5b03611614578060001c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161160b9190611915565b60405180910390fd5b60038081111561162757611626611fc1565b5b82600381111561163a57611639611fc1565b5b0361167c57806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161167391906119d3565b60405180910390fd5b5b5050565b6060600061168e836116f5565b90506000602067ffffffffffffffff8111156116ad576116ac611dd6565b5b6040519080825280601f01601f1916602001820160405280156116df5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f81111561173c576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561177f578082015181840152602081019050611764565b60008484015250505050565b6000601f19601f8301169050919050565b60006117a782611745565b6117b18185611750565b93506117c1818560208601611761565b6117ca8161178b565b840191505092915050565b600060208201905081810360008301526117ef818461179c565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611827826117fc565b9050919050565b6118378161181c565b811461184257600080fd5b50565b6000813590506118548161182e565b92915050565b6000819050919050565b61186d8161185a565b811461187857600080fd5b50565b60008135905061188a81611864565b92915050565b600080604083850312156118a7576118a66117f7565b5b60006118b585828601611845565b92505060206118c68582860161187b565b9150509250929050565b60008115159050919050565b6118e5816118d0565b82525050565b600060208201905061190060008301846118dc565b92915050565b61190f8161185a565b82525050565b600060208201905061192a6000830184611906565b92915050565b600080600060608486031215611949576119486117f7565b5b600061195786828701611845565b935050602061196886828701611845565b92505060406119798682870161187b565b9150509250925092565b600060ff82169050919050565b61199981611983565b82525050565b60006020820190506119b46000830184611990565b92915050565b6000819050919050565b6119cd816119ba565b82525050565b60006020820190506119e860008301846119c4565b92915050565b6000819050919050565b6000611a13611a0e611a09846117fc565b6119ee565b6117fc565b9050919050565b6000611a25826119f8565b9050919050565b6000611a3782611a1a565b9050919050565b611a4781611a2c565b82525050565b6000602082019050611a626000830184611a3e565b92915050565b600060208284031215611a7e57611a7d6117f7565b5b6000611a8c84828501611845565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611aca81611a95565b82525050565b611ad98161181c565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611b148161185a565b82525050565b6000611b268383611b0b565b60208301905092915050565b6000602082019050919050565b6000611b4a82611adf565b611b548185611aea565b9350611b5f83611afb565b8060005b83811015611b90578151611b778882611b1a565b9750611b8283611b32565b925050600181019050611b63565b5085935050505092915050565b600060e082019050611bb2600083018a611ac1565b8181036020830152611bc4818961179c565b90508181036040830152611bd8818861179c565b9050611be76060830187611906565b611bf46080830186611ad0565b611c0160a08301856119c4565b81810360c0830152611c138184611b3f565b905098975050505050505050565b6000602082019050611c366000830184611ad0565b92915050565b611c4581611983565b8114611c5057600080fd5b50565b600081359050611c6281611c3c565b92915050565b611c71816119ba565b8114611c7c57600080fd5b50565b600081359050611c8e81611c68565b92915050565b600080600080600080600060e0888a031215611cb357611cb26117f7565b5b6000611cc18a828b01611845565b9750506020611cd28a828b01611845565b9650506040611ce38a828b0161187b565b9550506060611cf48a828b0161187b565b9450506080611d058a828b01611c53565b93505060a0611d168a828b01611c7f565b92505060c0611d278a828b01611c7f565b91505092959891949750929550565b60008060408385031215611d4d57611d4c6117f7565b5b6000611d5b85828601611845565b9250506020611d6c85828601611845565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611dbd57607f821691505b602082108103611dd057611dcf611d76565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060c082019050611e1a60008301896119c4565b611e276020830188611ad0565b611e346040830187611ad0565b611e416060830186611906565b611e4e6080830185611906565b611e5b60a0830184611906565b979650505050505050565b6000604082019050611e7b6000830185611ad0565b611e886020830184611ad0565b9392505050565b6000606082019050611ea46000830186611ad0565b611eb16020830185611906565b611ebe6040830184611906565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f008261185a565b9150611f0b8361185a565b9250828201905080821115611f2357611f22611ec6565b5b92915050565b600060a082019050611f3e60008301886119c4565b611f4b60208301876119c4565b611f5860408301866119c4565b611f656060830185611906565b611f726080830184611ad0565b9695505050505050565b6000608082019050611f9160008301876119c4565b611f9e6020830186611990565b611fab60408301856119c4565b611fb860608301846119c4565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea264697066735822122068ef2002c8a161cc0bf6418f7311e40d8c50c98b6db5627d3cf8539436d1862664736f6c63430008140033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2C35 CODESIZE SUB DUP1 PUSH3 0x2C35 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x619 JUMP JUMPDEST CALLER DUP4 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP7 DUP7 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x84 SWAP2 SWAP1 PUSH3 0x8FE JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x96 SWAP2 SWAP1 PUSH3 0x8FE JUMP JUMPDEST POP POP POP PUSH3 0xAF PUSH1 0x5 DUP4 PUSH3 0x21B PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0xCD PUSH1 0x6 DUP3 PUSH3 0x21B PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x10C PUSH3 0x273 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1BF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1B6 SWAP2 SWAP1 PUSH3 0x9F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1D0 DUP2 PUSH3 0x2D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x241 JUMPI PUSH3 0x239 DUP4 PUSH3 0x396 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x26D JUMP JUMPDEST DUP3 PUSH3 0x253 DUP4 PUSH3 0x403 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x264 SWAP2 SWAP1 PUSH3 0x8FE JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x2B5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xA3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x3E6 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3DD SWAP2 SWAP1 PUSH3 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x3F4 SWAP1 PUSH3 0xB44 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x476 DUP3 PUSH3 0x42B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x498 JUMPI PUSH3 0x497 PUSH3 0x43C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4AD PUSH3 0x40D JUMP JUMPDEST SWAP1 POP PUSH3 0x4BB DUP3 DUP3 PUSH3 0x46B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x4DE JUMPI PUSH3 0x4DD PUSH3 0x43C JUMP JUMPDEST JUMPDEST PUSH3 0x4E9 DUP3 PUSH3 0x42B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x516 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4F9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x539 PUSH3 0x533 DUP5 PUSH3 0x4C0 JUMP JUMPDEST PUSH3 0x4A1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x558 JUMPI PUSH3 0x557 PUSH3 0x426 JUMP JUMPDEST JUMPDEST PUSH3 0x565 DUP5 DUP3 DUP6 PUSH3 0x4F6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x585 JUMPI PUSH3 0x584 PUSH3 0x421 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x597 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x522 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5CD DUP3 PUSH3 0x5A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5E1 DUP3 PUSH3 0x5C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5F3 DUP2 PUSH3 0x5D4 JUMP JUMPDEST DUP2 EQ PUSH3 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x613 DUP2 PUSH3 0x5E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x635 JUMPI PUSH3 0x634 PUSH3 0x417 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x656 JUMPI PUSH3 0x655 PUSH3 0x41C JUMP JUMPDEST JUMPDEST PUSH3 0x664 DUP7 DUP3 DUP8 ADD PUSH3 0x56D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x688 JUMPI PUSH3 0x687 PUSH3 0x41C JUMP JUMPDEST JUMPDEST PUSH3 0x696 DUP7 DUP3 DUP8 ADD PUSH3 0x56D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x6A9 DUP7 DUP3 DUP8 ADD PUSH3 0x602 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x706 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x71C JUMPI PUSH3 0x71B PUSH3 0x6BE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x786 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x747 JUMP JUMPDEST PUSH3 0x792 DUP7 DUP4 PUSH3 0x747 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7DF PUSH3 0x7D9 PUSH3 0x7D3 DUP5 PUSH3 0x7AA JUMP JUMPDEST PUSH3 0x7B4 JUMP JUMPDEST PUSH3 0x7AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7FB DUP4 PUSH3 0x7BE JUMP JUMPDEST PUSH3 0x813 PUSH3 0x80A DUP3 PUSH3 0x7E6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x754 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x82A PUSH3 0x81B JUMP JUMPDEST PUSH3 0x837 DUP2 DUP5 DUP5 PUSH3 0x7F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x85F JUMPI PUSH3 0x853 PUSH1 0x0 DUP3 PUSH3 0x820 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x83D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x8AE JUMPI PUSH3 0x878 DUP2 PUSH3 0x722 JUMP JUMPDEST PUSH3 0x883 DUP5 PUSH3 0x737 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x893 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x8AB PUSH3 0x8A2 DUP6 PUSH3 0x737 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x83C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8D3 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x8B3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8EE DUP4 DUP4 PUSH3 0x8C0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x909 DUP3 PUSH3 0x6B3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x925 JUMPI PUSH3 0x924 PUSH3 0x43C JUMP JUMPDEST JUMPDEST PUSH3 0x931 DUP3 SLOAD PUSH3 0x6ED JUMP JUMPDEST PUSH3 0x93E DUP3 DUP3 DUP6 PUSH3 0x863 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x976 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x961 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x96D DUP6 DUP3 PUSH3 0x8E0 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x9DD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x986 DUP7 PUSH3 0x722 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x9B0 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x989 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x9D0 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x9CC PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x8C0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x9F0 DUP2 PUSH3 0x5C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA0D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x9E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA28 DUP2 PUSH3 0xA13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xA39 DUP2 PUSH3 0x7AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0xA56 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0xA1D JUMP JUMPDEST PUSH3 0xA65 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xA1D JUMP JUMPDEST PUSH3 0xA74 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xA1D JUMP JUMPDEST PUSH3 0xA83 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xA2E JUMP JUMPDEST PUSH3 0xA92 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x9E5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xABA DUP3 PUSH3 0x6B3 JUMP JUMPDEST PUSH3 0xAC6 DUP2 DUP6 PUSH3 0xA9C JUMP JUMPDEST SWAP4 POP PUSH3 0xAD8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x4F6 JUMP JUMPDEST PUSH3 0xAE3 DUP2 PUSH3 0x42B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xB0A DUP2 DUP5 PUSH3 0xAAD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB3B DUP3 MLOAD PUSH3 0xA13 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB51 DUP3 PUSH3 0xB12 JUMP JUMPDEST DUP3 PUSH3 0xB5D DUP5 PUSH3 0xB1D JUMP JUMPDEST SWAP1 POP PUSH3 0xB6A DUP2 PUSH3 0xB2D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xBAD JUMPI PUSH3 0xBA8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x747 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x2026 PUSH3 0xC0F PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xDD3 ADD MSTORE PUSH1 0x0 PUSH2 0xD98 ADD MSTORE PUSH1 0x0 PUSH2 0x12E8 ADD MSTORE PUSH1 0x0 PUSH2 0x12C7 ADD MSTORE PUSH1 0x0 PUSH2 0xAC4 ADD MSTORE PUSH1 0x0 PUSH2 0xB1A ADD MSTORE PUSH1 0x0 PUSH2 0xB43 ADD MSTORE PUSH2 0x2026 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x373 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BB JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x6290865D EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22D JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x38F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x47D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x217 PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH2 0x519 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x53F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x1C94 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3CA SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x417 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x417 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3FA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x42C PUSH2 0x91D JUMP JUMPDEST SWAP1 POP PUSH2 0x439 DUP2 DUP6 DUP6 PUSH2 0x925 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x459 PUSH2 0x91D JUMP JUMPDEST SWAP1 POP PUSH2 0x466 DUP6 DUP3 DUP6 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x471 DUP6 DUP6 DUP6 PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x490 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x49D PUSH2 0xB77 JUMP JUMPDEST PUSH2 0x4A7 DUP3 DUP3 PUSH2 0xBFE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x521 PUSH2 0xB77 JUMP JUMPDEST PUSH2 0x52B PUSH1 0x0 PUSH2 0xC80 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x538 DUP3 PUSH2 0xD46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x553 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x55B PUSH2 0xDCA JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x57C JUMPI PUSH2 0x57B PUSH2 0x1DD6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5AA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x622 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x64E SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x69B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x670 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x69B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x67E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6B0 PUSH2 0x91D JUMP JUMPDEST SWAP1 POP PUSH2 0x6BD DUP2 DUP6 DUP6 PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x70D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x704 SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x73C DUP13 PUSH2 0xE05 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x752 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x775 DUP3 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x785 DUP3 DUP8 DUP8 DUP8 PUSH2 0xE76 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F9 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F0 SWAP3 SWAP2 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x804 DUP11 DUP11 DUP11 PUSH2 0x925 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x89F PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x911 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x91A DUP2 PUSH2 0xC80 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x932 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xEA6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x943 DUP5 DUP5 PUSH2 0x810 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x9C6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9B6 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C5 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xEA6 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA3E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAB0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xABB DUP4 DUP4 DUP4 PUSH2 0x107D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB3C JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xB69 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xB74 JUMP JUMPDEST PUSH2 0xB71 PUSH2 0x12A2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB7F PUSH2 0x91D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB9D PUSH2 0x5E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFC JUMPI PUSH2 0xBC0 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF3 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC70 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC67 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7C PUSH1 0x0 DUP4 DUP4 PUSH2 0x107D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDC5 PUSH1 0x5 PUSH32 0x0 PUSH2 0x1338 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE00 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1338 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6F PUSH2 0xE69 PUSH2 0xAC0 JUMP JUMPDEST DUP4 PUSH2 0x13E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xE88 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1429 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE98 DUP3 DUP3 PUSH2 0x151D JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF18 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0F SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF8A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF81 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1077 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x106E SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CF JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10C3 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x115B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1152 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11EB JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1238 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1295 SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x131D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1355 JUMPI PUSH2 0x134E DUP4 PUSH2 0x1681 JUMP JUMPDEST SWAP1 POP PUSH2 0x13E2 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1361 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x138D SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1469 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1513 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x148E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F7C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1504 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1513 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1531 JUMPI PUSH2 0x1530 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1544 JUMPI PUSH2 0x1543 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x167D JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x155E JUMPI PUSH2 0x155D PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1571 JUMPI PUSH2 0x1570 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x15A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15BC JUMPI PUSH2 0x15BB PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15CF JUMPI PUSH2 0x15CE PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1614 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160B SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1627 JUMPI PUSH2 0x1626 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x167C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1673 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x168E DUP4 PUSH2 0x16F5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16AD JUMPI PUSH2 0x16AC PUSH2 0x1DD6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16DF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x173C JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x177F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A7 DUP3 PUSH2 0x1745 JUMP JUMPDEST PUSH2 0x17B1 DUP2 DUP6 PUSH2 0x1750 JUMP JUMPDEST SWAP4 POP PUSH2 0x17C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x17CA DUP2 PUSH2 0x178B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17EF DUP2 DUP5 PUSH2 0x179C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1827 DUP3 PUSH2 0x17FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1837 DUP2 PUSH2 0x181C JUMP JUMPDEST DUP2 EQ PUSH2 0x1842 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1854 DUP2 PUSH2 0x182E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186D DUP2 PUSH2 0x185A JUMP JUMPDEST DUP2 EQ PUSH2 0x1878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x188A DUP2 PUSH2 0x1864 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A7 JUMPI PUSH2 0x18A6 PUSH2 0x17F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18B5 DUP6 DUP3 DUP7 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18C6 DUP6 DUP3 DUP7 ADD PUSH2 0x187B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E5 DUP2 PUSH2 0x18D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1900 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x190F DUP2 PUSH2 0x185A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x192A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1906 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1949 JUMPI PUSH2 0x1948 PUSH2 0x17F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1957 DUP7 DUP3 DUP8 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1968 DUP7 DUP3 DUP8 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1979 DUP7 DUP3 DUP8 ADD PUSH2 0x187B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1999 DUP2 PUSH2 0x1983 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1990 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CD DUP2 PUSH2 0x19BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A13 PUSH2 0x1A0E PUSH2 0x1A09 DUP5 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0x19EE JUMP JUMPDEST PUSH2 0x17FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A25 DUP3 PUSH2 0x19F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A37 DUP3 PUSH2 0x1A1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A47 DUP2 PUSH2 0x1A2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A62 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A7E JUMPI PUSH2 0x1A7D PUSH2 0x17F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A8C DUP5 DUP3 DUP6 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACA DUP2 PUSH2 0x1A95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1AD9 DUP2 PUSH2 0x181C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B14 DUP2 PUSH2 0x185A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B26 DUP4 DUP4 PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B4A DUP3 PUSH2 0x1ADF JUMP JUMPDEST PUSH2 0x1B54 DUP2 DUP6 PUSH2 0x1AEA JUMP JUMPDEST SWAP4 POP PUSH2 0x1B5F DUP4 PUSH2 0x1AFB JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B90 JUMPI DUP2 MLOAD PUSH2 0x1B77 DUP9 DUP3 PUSH2 0x1B1A JUMP JUMPDEST SWAP8 POP PUSH2 0x1B82 DUP4 PUSH2 0x1B32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B63 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1BB2 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1AC1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1BC4 DUP2 DUP10 PUSH2 0x179C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1BD8 DUP2 DUP9 PUSH2 0x179C JUMP JUMPDEST SWAP1 POP PUSH2 0x1BE7 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0x1BF4 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x1C01 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x19C4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1C13 DUP2 DUP5 PUSH2 0x1B3F JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C36 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C45 DUP2 PUSH2 0x1983 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C62 DUP2 PUSH2 0x1C3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C71 DUP2 PUSH2 0x19BA JUMP JUMPDEST DUP2 EQ PUSH2 0x1C7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C8E DUP2 PUSH2 0x1C68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1CB3 JUMPI PUSH2 0x1CB2 PUSH2 0x17F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CC1 DUP11 DUP3 DUP12 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1CD2 DUP11 DUP3 DUP12 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1CE3 DUP11 DUP3 DUP12 ADD PUSH2 0x187B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1CF4 DUP11 DUP3 DUP12 ADD PUSH2 0x187B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1D05 DUP11 DUP3 DUP12 ADD PUSH2 0x1C53 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1D16 DUP11 DUP3 DUP12 ADD PUSH2 0x1C7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1D27 DUP11 DUP3 DUP12 ADD PUSH2 0x1C7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D4D JUMPI PUSH2 0x1D4C PUSH2 0x17F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D5B DUP6 DUP3 DUP7 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D6C DUP6 DUP3 DUP7 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DBD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DD0 JUMPI PUSH2 0x1DCF PUSH2 0x1D76 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1E1A PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x1E27 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x1E34 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x1E41 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0x1E4E PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0x1E5B PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1906 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E7B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x1E88 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AD0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EA4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x1EB1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0x1EBE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1906 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F00 DUP3 PUSH2 0x185A JUMP JUMPDEST SWAP2 POP PUSH2 0x1F0B DUP4 PUSH2 0x185A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F23 JUMPI PUSH2 0x1F22 PUSH2 0x1EC6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1F3E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x1F4B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x1F58 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x1F65 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0x1F72 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1AD0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1F91 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x1F9E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x1FAB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x1FB8 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x19C4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xEF2002C8A161CC0BF6 COINBASE DUP16 PUSH20 0x11E40D8C50C98B6DB5627D3CF8539436D1862664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"218:758:25:-:0;;;309:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;463:10;441:4;1616::5;3428:431:15;;;;;;;;;;;;;;;;;407:4:25;413:6;1656:5:3;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;3501:45:15;3532:13;3501:4;:30;;;;:45;;;;:::i;:::-;3493:53;;;;;;3567:51;3601:16;3567:7;:33;;;;:51;;;;:::i;:::-;3556:62;;;;;;3658:4;3642:22;;;;;;3628:36;;;;;;3707:7;3691:25;;;;;;3674:42;;;;;;3744:13;3727:30;;;;;;3792:23;:21;;;:23;;:::i;:::-;3767:48;;;;;;3847:4;3825:27;;;;;;;;;;3428:431;;1577:52:5;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;502:11:25::3;489:10;;:24;;;;;;;;;;;;;;;;;;309:211:::0;;;218:758;;2887:340:11;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;;;:20;;:::i;:::-;3050:27;;;;3006:215;3149:5;3108:32;3134:5;3108:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3192:17;;3168:42;;2887:340;;;;;:::o;4213:179:15:-;4268:7;2079:95;4326:11;;4339:14;;4355:13;4378:4;4304:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1708:286:11:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3468:175:12:-;3536:20;3617:10;3607:20;;3468:175;;;:::o;7:75:29:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:126::-;2714:7;2754:42;2747:5;2743:54;2732:65;;2677:126;;;:::o;2809:96::-;2846:7;2875:24;2893:5;2875:24;:::i;:::-;2864:35;;2809:96;;;:::o;2911:121::-;2973:7;3002:24;3020:5;3002:24;:::i;:::-;2991:35;;2911:121;;;:::o;3038:172::-;3136:49;3179:5;3136:49;:::i;:::-;3129:5;3126:60;3116:88;;3200:1;3197;3190:12;3116:88;3038:172;:::o;3216:193::-;3298:5;3329:6;3323:13;3314:22;;3345:58;3397:5;3345:58;:::i;:::-;3216:193;;;;:::o;3415:1059::-;3548:6;3556;3564;3613:2;3601:9;3592:7;3588:23;3584:32;3581:119;;;3619:79;;:::i;:::-;3581:119;3760:1;3749:9;3745:17;3739:24;3790:18;3782:6;3779:30;3776:117;;;3812:79;;:::i;:::-;3776:117;3917:74;3983:7;3974:6;3963:9;3959:22;3917:74;:::i;:::-;3907:84;;3710:291;4061:2;4050:9;4046:18;4040:25;4092:18;4084:6;4081:30;4078:117;;;4114:79;;:::i;:::-;4078:117;4219:74;4285:7;4276:6;4265:9;4261:22;4219:74;:::i;:::-;4209:84;;4011:292;4342:2;4368:89;4449:7;4440:6;4429:9;4425:22;4368:89;:::i;:::-;4358:99;;4313:154;3415:1059;;;;;:::o;4480:99::-;4532:6;4566:5;4560:12;4550:22;;4480:99;;;:::o;4585:180::-;4633:77;4630:1;4623:88;4730:4;4727:1;4720:15;4754:4;4751:1;4744:15;4771:320;4815:6;4852:1;4846:4;4842:12;4832:22;;4899:1;4893:4;4889:12;4920:18;4910:81;;4976:4;4968:6;4964:17;4954:27;;4910:81;5038:2;5030:6;5027:14;5007:18;5004:38;5001:84;;5057:18;;:::i;:::-;5001:84;4822:269;4771:320;;;:::o;5097:141::-;5146:4;5169:3;5161:11;;5192:3;5189:1;5182:14;5226:4;5223:1;5213:18;5205:26;;5097:141;;;:::o;5244:93::-;5281:6;5328:2;5323;5316:5;5312:14;5308:23;5298:33;;5244:93;;;:::o;5343:107::-;5387:8;5437:5;5431:4;5427:16;5406:37;;5343:107;;;;:::o;5456:393::-;5525:6;5575:1;5563:10;5559:18;5598:97;5628:66;5617:9;5598:97;:::i;:::-;5716:39;5746:8;5735:9;5716:39;:::i;:::-;5704:51;;5788:4;5784:9;5777:5;5773:21;5764:30;;5837:4;5827:8;5823:19;5816:5;5813:30;5803:40;;5532:317;;5456:393;;;;;:::o;5855:77::-;5892:7;5921:5;5910:16;;5855:77;;;:::o;5938:60::-;5966:3;5987:5;5980:12;;5938:60;;;:::o;6004:142::-;6054:9;6087:53;6105:34;6114:24;6132:5;6114:24;:::i;:::-;6105:34;:::i;:::-;6087:53;:::i;:::-;6074:66;;6004:142;;;:::o;6152:75::-;6195:3;6216:5;6209:12;;6152:75;;;:::o;6233:269::-;6343:39;6374:7;6343:39;:::i;:::-;6404:91;6453:41;6477:16;6453:41;:::i;:::-;6445:6;6438:4;6432:11;6404:91;:::i;:::-;6398:4;6391:105;6309:193;6233:269;;;:::o;6508:73::-;6553:3;6508:73;:::o;6587:189::-;6664:32;;:::i;:::-;6705:65;6763:6;6755;6749:4;6705:65;:::i;:::-;6640:136;6587:189;;:::o;6782:186::-;6842:120;6859:3;6852:5;6849:14;6842:120;;;6913:39;6950:1;6943:5;6913:39;:::i;:::-;6886:1;6879:5;6875:13;6866:22;;6842:120;;;6782:186;;:::o;6974:543::-;7075:2;7070:3;7067:11;7064:446;;;7109:38;7141:5;7109:38;:::i;:::-;7193:29;7211:10;7193:29;:::i;:::-;7183:8;7179:44;7376:2;7364:10;7361:18;7358:49;;;7397:8;7382:23;;7358:49;7420:80;7476:22;7494:3;7476:22;:::i;:::-;7466:8;7462:37;7449:11;7420:80;:::i;:::-;7079:431;;7064:446;6974:543;;;:::o;7523:117::-;7577:8;7627:5;7621:4;7617:16;7596:37;;7523:117;;;;:::o;7646:169::-;7690:6;7723:51;7771:1;7767:6;7759:5;7756:1;7752:13;7723:51;:::i;:::-;7719:56;7804:4;7798;7794:15;7784:25;;7697:118;7646:169;;;;:::o;7820:295::-;7896:4;8042:29;8067:3;8061:4;8042:29;:::i;:::-;8034:37;;8104:3;8101:1;8097:11;8091:4;8088:21;8080:29;;7820:295;;;;:::o;8120:1395::-;8237:37;8270:3;8237:37;:::i;:::-;8339:18;8331:6;8328:30;8325:56;;;8361:18;;:::i;:::-;8325:56;8405:38;8437:4;8431:11;8405:38;:::i;:::-;8490:67;8550:6;8542;8536:4;8490:67;:::i;:::-;8584:1;8608:4;8595:17;;8640:2;8632:6;8629:14;8657:1;8652:618;;;;9314:1;9331:6;9328:77;;;9380:9;9375:3;9371:19;9365:26;9356:35;;9328:77;9431:67;9491:6;9484:5;9431:67;:::i;:::-;9425:4;9418:81;9287:222;8622:887;;8652:618;8704:4;8700:9;8692:6;8688:22;8738:37;8770:4;8738:37;:::i;:::-;8797:1;8811:208;8825:7;8822:1;8819:14;8811:208;;;8904:9;8899:3;8895:19;8889:26;8881:6;8874:42;8955:1;8947:6;8943:14;8933:24;;9002:2;8991:9;8987:18;8974:31;;8848:4;8845:1;8841:12;8836:17;;8811:208;;;9047:6;9038:7;9035:19;9032:179;;;9105:9;9100:3;9096:19;9090:26;9148:48;9190:4;9182:6;9178:17;9167:9;9148:48;:::i;:::-;9140:6;9133:64;9055:156;9032:179;9257:1;9253;9245:6;9241:14;9237:22;9231:4;9224:36;8659:611;;;8622:887;;8212:1303;;;8120:1395;;:::o;9521:118::-;9608:24;9626:5;9608:24;:::i;:::-;9603:3;9596:37;9521:118;;:::o;9645:222::-;9738:4;9776:2;9765:9;9761:18;9753:26;;9789:71;9857:1;9846:9;9842:17;9833:6;9789:71;:::i;:::-;9645:222;;;;:::o;9873:77::-;9910:7;9939:5;9928:16;;9873:77;;;:::o;9956:118::-;10043:24;10061:5;10043:24;:::i;:::-;10038:3;10031:37;9956:118;;:::o;10080:::-;10167:24;10185:5;10167:24;:::i;:::-;10162:3;10155:37;10080:118;;:::o;10204:664::-;10409:4;10447:3;10436:9;10432:19;10424:27;;10461:71;10529:1;10518:9;10514:17;10505:6;10461:71;:::i;:::-;10542:72;10610:2;10599:9;10595:18;10586:6;10542:72;:::i;:::-;10624;10692:2;10681:9;10677:18;10668:6;10624:72;:::i;:::-;10706;10774:2;10763:9;10759:18;10750:6;10706:72;:::i;:::-;10788:73;10856:3;10845:9;10841:19;10832:6;10788:73;:::i;:::-;10204:664;;;;;;;;:::o;10874:169::-;10958:11;10992:6;10987:3;10980:19;11032:4;11027:3;11023:14;11008:29;;10874:169;;;;:::o;11049:377::-;11137:3;11165:39;11198:5;11165:39;:::i;:::-;11220:71;11284:6;11279:3;11220:71;:::i;:::-;11213:78;;11300:65;11358:6;11353:3;11346:4;11339:5;11335:16;11300:65;:::i;:::-;11390:29;11412:6;11390:29;:::i;:::-;11385:3;11381:39;11374:46;;11141:285;11049:377;;;;:::o;11432:313::-;11545:4;11583:2;11572:9;11568:18;11560:26;;11632:9;11626:4;11622:20;11618:1;11607:9;11603:17;11596:47;11660:78;11733:4;11724:6;11660:78;:::i;:::-;11652:86;;11432:313;;;;:::o;11751:98::-;11802:6;11836:5;11830:12;11820:22;;11751:98;;;:::o;11855:116::-;11906:4;11929:3;11921:11;;11959:4;11954:3;11950:14;11942:22;;11855:116;;;:::o;11977:154::-;12020:11;12056:29;12080:3;12074:10;12056:29;:::i;:::-;12119:5;12095:29;;12032:99;11977:154;;;:::o;12137:594::-;12221:5;12252:38;12284:5;12252:38;:::i;:::-;12315:5;12342:40;12376:5;12342:40;:::i;:::-;12330:52;;12401:35;12427:8;12401:35;:::i;:::-;12392:44;;12460:2;12452:6;12449:14;12446:278;;;12531:169;12616:66;12586:6;12582:2;12578:15;12575:1;12571:23;12531:169;:::i;:::-;12508:5;12487:227;12478:236;;12446:278;12227:504;;12137:594;;;:::o;218:758:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1055":{"entryPoint":1158,"id":1055,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_3573":{"entryPoint":3471,"id":3573,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3585":{"entryPoint":3530,"id":3585,"parameterSlots":0,"returnSlots":1},"@_approve_715":{"entryPoint":2341,"id":715,"parameterSlots":3,"returnSlots":0},"@_approve_775":{"entryPoint":3750,"id":775,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3503":{"entryPoint":4770,"id":3503,"parameterSlots":0,"returnSlots":1},"@_checkOwner_84":{"entryPoint":2935,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_3482":{"entryPoint":2752,"id":3482,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3519":{"entryPoint":3676,"id":3519,"parameterSlots":1,"returnSlots":1},"@_mint_664":{"entryPoint":3070,"id":664,"parameterSlots":2,"returnSlots":0},"@_msgSender_1130":{"entryPoint":2333,"id":1130,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_823":{"entryPoint":2359,"id":823,"parameterSlots":3,"returnSlots":0},"@_throwError_3358":{"entryPoint":5405,"id":3358,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3200,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_554":{"entryPoint":2508,"id":554,"parameterSlots":3,"returnSlots":0},"@_update_631":{"entryPoint":4221,"id":631,"parameterSlots":3,"returnSlots":0},"@_useNonce_1190":{"entryPoint":3589,"id":1190,"parameterSlots":1,"returnSlots":1},"@allowance_451":{"entryPoint":2064,"id":451,"parameterSlots":2,"returnSlots":1},"@approve_475":{"entryPoint":1057,"id":475,"parameterSlots":2,"returnSlots":1},"@balanceOf_410":{"entryPoint":1233,"id":410,"parameterSlots":1,"returnSlots":1},"@byteLength_1386":{"entryPoint":5877,"id":1386,"parameterSlots":1,"returnSlots":1},"@compliance_8551":{"entryPoint":1195,"id":8551,"parameterSlots":0,"returnSlots":0},"@decimals_388":{"entryPoint":1149,"id":388,"parameterSlots":0,"returnSlots":1},"@eip712Domain_3561":{"entryPoint":1343,"id":3561,"parameterSlots":0,"returnSlots":7},"@mint_8592":{"entryPoint":1173,"id":8592,"parameterSlots":2,"returnSlots":0},"@name_370":{"entryPoint":911,"id":370,"parameterSlots":0,"returnSlots":1},"@nonces_1045":{"entryPoint":1325,"id":1045,"parameterSlots":1,"returnSlots":1},"@nonces_1175":{"entryPoint":3398,"id":1175,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":1513,"id":67,"parameterSlots":0,"returnSlots":1},"@permit_1028":{"entryPoint":1736,"id":1028,"parameterSlots":7,"returnSlots":0},"@recover_3309":{"entryPoint":3702,"id":3309,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1305,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_379":{"entryPoint":1555,"id":379,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_1453":{"entryPoint":4920,"id":1453,"parameterSlots":2,"returnSlots":1},"@toString_1354":{"entryPoint":5761,"id":1354,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_4784":{"entryPoint":5096,"id":4784,"parameterSlots":2,"returnSlots":1},"@totalSupply_397":{"entryPoint":1092,"id":397,"parameterSlots":0,"returnSlots":1},"@transferFrom_507":{"entryPoint":1102,"id":507,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":2199,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_434":{"entryPoint":1701,"id":434,"parameterSlots":2,"returnSlots":1},"@tryRecover_3273":{"entryPoint":5161,"id":3273,"parameterSlots":4,"returnSlots":3},"abi_decode_t_address":{"entryPoint":6213,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":7295,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6267,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":7251,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6760,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7478,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6448,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":7316,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6288,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":6938,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6864,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6975,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6364,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":6849,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6596,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ComplianceModule_$8510_to_t_address_fromStack":{"entryPoint":6718,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6044,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":6923,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6406,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":6544,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7201,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":7782,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7823,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6379,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7069,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":6611,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7685,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":7977,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":8060,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_ComplianceModule_$8510__to_t_address__fromStack_reversed":{"entryPoint":6733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6101,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6421,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":6559,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6907,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6879,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5957,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6962,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6890,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5968,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7925,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6172,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6352,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":6805,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6586,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6140,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6234,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":6531,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ComplianceModule_$8510_to_t_address":{"entryPoint":6700,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":6682,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":6648,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":5985,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7589,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":6638,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7878,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":8129,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7542,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7638,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6135,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6027,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":6190,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7272,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6244,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":7228,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:16349:29","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:29","statements":[{"nodeType":"YulAssignment","src":"77:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:29"},"nodeType":"YulFunctionCall","src":"87:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:29","type":""}],"src":"7:99:29"},{"body":{"nodeType":"YulBlock","src":"208:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:29"},"nodeType":"YulFunctionCall","src":"218:19:29"},"nodeType":"YulExpressionStatement","src":"218:19:29"},{"nodeType":"YulAssignment","src":"246:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:29"},"nodeType":"YulFunctionCall","src":"261:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:29","type":""}],"src":"112:169:29"},{"body":{"nodeType":"YulBlock","src":"349:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:29"},"nodeType":"YulFunctionCall","src":"449:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:29"},"nodeType":"YulFunctionCall","src":"468:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:29"},"nodeType":"YulFunctionCall","src":"462:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:29"},"nodeType":"YulFunctionCall","src":"442:39:29"},"nodeType":"YulExpressionStatement","src":"442:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:29"},"nodeType":"YulFunctionCall","src":"386:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:29","statements":[{"nodeType":"YulAssignment","src":"402:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:29"},"nodeType":"YulFunctionCall","src":"407:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:29","statements":[]},"src":"378:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:29"},"nodeType":"YulFunctionCall","src":"507:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:29"},"nodeType":"YulFunctionCall","src":"500:27:29"},"nodeType":"YulExpressionStatement","src":"500:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:29","type":""}],"src":"287:246:29"},{"body":{"nodeType":"YulBlock","src":"587:54:29","statements":[{"nodeType":"YulAssignment","src":"597:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:29"},"nodeType":"YulFunctionCall","src":"611:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:29"},"nodeType":"YulFunctionCall","src":"627:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:29"},"nodeType":"YulFunctionCall","src":"607:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:29","type":""}],"src":"539:102:29"},{"body":{"nodeType":"YulBlock","src":"739:285:29","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:29"},"nodeType":"YulFunctionCall","src":"763:39:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:29","type":""}]},{"nodeType":"YulAssignment","src":"811:78:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:29"},"nodeType":"YulFunctionCall","src":"818:71:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:29"},"nodeType":"YulFunctionCall","src":"933:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:29"},"nodeType":"YulFunctionCall","src":"898:65:29"},"nodeType":"YulExpressionStatement","src":"898:65:29"},{"nodeType":"YulAssignment","src":"972:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:29"},"nodeType":"YulFunctionCall","src":"988:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:29"},"nodeType":"YulFunctionCall","src":"979:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:29","type":""}],"src":"647:377:29"},{"body":{"nodeType":"YulBlock","src":"1148:195:29","statements":[{"nodeType":"YulAssignment","src":"1158:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:29"},"nodeType":"YulFunctionCall","src":"1166:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:29"},"nodeType":"YulFunctionCall","src":"1201:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:29"},"nodeType":"YulFunctionCall","src":"1220:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:29"},"nodeType":"YulFunctionCall","src":"1194:47:29"},"nodeType":"YulExpressionStatement","src":"1194:47:29"},{"nodeType":"YulAssignment","src":"1250:86:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:29"},"nodeType":"YulFunctionCall","src":"1258:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:29","type":""}],"src":"1030:313:29"},{"body":{"nodeType":"YulBlock","src":"1389:35:29","statements":[{"nodeType":"YulAssignment","src":"1399:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:29"},"nodeType":"YulFunctionCall","src":"1409:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:29","type":""}],"src":"1349:75:29"},{"body":{"nodeType":"YulBlock","src":"1519:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:29"},"nodeType":"YulFunctionCall","src":"1529:12:29"},"nodeType":"YulExpressionStatement","src":"1529:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:29"},{"body":{"nodeType":"YulBlock","src":"1642:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:29"},"nodeType":"YulFunctionCall","src":"1652:12:29"},"nodeType":"YulExpressionStatement","src":"1652:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:29"},{"body":{"nodeType":"YulBlock","src":"1721:81:29","statements":[{"nodeType":"YulAssignment","src":"1731:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:29"},"nodeType":"YulFunctionCall","src":"1742:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:29","type":""}],"src":"1676:126:29"},{"body":{"nodeType":"YulBlock","src":"1853:51:29","statements":[{"nodeType":"YulAssignment","src":"1863:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:29"},"nodeType":"YulFunctionCall","src":"1874:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:29","type":""}],"src":"1808:96:29"},{"body":{"nodeType":"YulBlock","src":"1953:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:29"},"nodeType":"YulFunctionCall","src":"2012:12:29"},"nodeType":"YulExpressionStatement","src":"2012:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:29"},"nodeType":"YulFunctionCall","src":"1983:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:29"},"nodeType":"YulFunctionCall","src":"1973:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:29"},"nodeType":"YulFunctionCall","src":"1966:43:29"},"nodeType":"YulIf","src":"1963:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:29","type":""}],"src":"1910:122:29"},{"body":{"nodeType":"YulBlock","src":"2090:87:29","statements":[{"nodeType":"YulAssignment","src":"2100:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:29"},"nodeType":"YulFunctionCall","src":"2109:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:29"},"nodeType":"YulFunctionCall","src":"2138:33:29"},"nodeType":"YulExpressionStatement","src":"2138:33:29"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:29","type":""}],"src":"2038:139:29"},{"body":{"nodeType":"YulBlock","src":"2228:32:29","statements":[{"nodeType":"YulAssignment","src":"2238:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:29","type":""}],"src":"2183:77:29"},{"body":{"nodeType":"YulBlock","src":"2309:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:29"},"nodeType":"YulFunctionCall","src":"2368:12:29"},"nodeType":"YulExpressionStatement","src":"2368:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:29"},"nodeType":"YulFunctionCall","src":"2339:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:29"},"nodeType":"YulFunctionCall","src":"2329:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:29"},"nodeType":"YulFunctionCall","src":"2322:43:29"},"nodeType":"YulIf","src":"2319:63:29"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:29","type":""}],"src":"2266:122:29"},{"body":{"nodeType":"YulBlock","src":"2446:87:29","statements":[{"nodeType":"YulAssignment","src":"2456:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:29"},"nodeType":"YulFunctionCall","src":"2465:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:29"},"nodeType":"YulFunctionCall","src":"2494:33:29"},"nodeType":"YulExpressionStatement","src":"2494:33:29"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:29","type":""}],"src":"2394:139:29"},{"body":{"nodeType":"YulBlock","src":"2622:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:29"},"nodeType":"YulFunctionCall","src":"2670:79:29"},"nodeType":"YulExpressionStatement","src":"2670:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:29"},"nodeType":"YulFunctionCall","src":"2639:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:29"},"nodeType":"YulFunctionCall","src":"2635:32:29"},"nodeType":"YulIf","src":"2632:119:29"},{"nodeType":"YulBlock","src":"2761:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:29","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:29"},"nodeType":"YulFunctionCall","src":"2836:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:29"},"nodeType":"YulFunctionCall","src":"2815:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:29"}]}]},{"nodeType":"YulBlock","src":"2888:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:29","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:29"},"nodeType":"YulFunctionCall","src":"2964:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:29"},"nodeType":"YulFunctionCall","src":"2943:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:29","type":""}],"src":"2539:474:29"},{"body":{"nodeType":"YulBlock","src":"3061:48:29","statements":[{"nodeType":"YulAssignment","src":"3071:32:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:29"},"nodeType":"YulFunctionCall","src":"3089:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:29"},"nodeType":"YulFunctionCall","src":"3082:21:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:29"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:29","type":""}],"src":"3019:90:29"},{"body":{"nodeType":"YulBlock","src":"3174:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:29"},"nodeType":"YulFunctionCall","src":"3196:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:29"},"nodeType":"YulFunctionCall","src":"3184:34:29"},"nodeType":"YulExpressionStatement","src":"3184:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:29","type":""}],"src":"3115:109:29"},{"body":{"nodeType":"YulBlock","src":"3322:118:29","statements":[{"nodeType":"YulAssignment","src":"3332:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:29"},"nodeType":"YulFunctionCall","src":"3340:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:29"},"nodeType":"YulFunctionCall","src":"3415:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:29"},"nodeType":"YulFunctionCall","src":"3368:65:29"},"nodeType":"YulExpressionStatement","src":"3368:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:29","type":""}],"src":"3230:210:29"},{"body":{"nodeType":"YulBlock","src":"3511:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:29"},"nodeType":"YulFunctionCall","src":"3533:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:29"},"nodeType":"YulFunctionCall","src":"3521:37:29"},"nodeType":"YulExpressionStatement","src":"3521:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:29","type":""}],"src":"3446:118:29"},{"body":{"nodeType":"YulBlock","src":"3668:124:29","statements":[{"nodeType":"YulAssignment","src":"3678:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:29"},"nodeType":"YulFunctionCall","src":"3686:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:29"},"nodeType":"YulFunctionCall","src":"3767:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:29"},"nodeType":"YulFunctionCall","src":"3714:71:29"},"nodeType":"YulExpressionStatement","src":"3714:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:29","type":""}],"src":"3570:222:29"},{"body":{"nodeType":"YulBlock","src":"3898:519:29","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:29"},"nodeType":"YulFunctionCall","src":"3946:79:29"},"nodeType":"YulExpressionStatement","src":"3946:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:29"},"nodeType":"YulFunctionCall","src":"3915:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:29"},"nodeType":"YulFunctionCall","src":"3911:32:29"},"nodeType":"YulIf","src":"3908:119:29"},{"nodeType":"YulBlock","src":"4037:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:29"},"nodeType":"YulFunctionCall","src":"4112:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:29"},"nodeType":"YulFunctionCall","src":"4091:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:29"}]}]},{"nodeType":"YulBlock","src":"4164:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:29"},"nodeType":"YulFunctionCall","src":"4240:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:29"},"nodeType":"YulFunctionCall","src":"4219:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:29"}]}]},{"nodeType":"YulBlock","src":"4292:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:29"},"nodeType":"YulFunctionCall","src":"4368:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:29"},"nodeType":"YulFunctionCall","src":"4347:53:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:29","type":""}],"src":"3798:619:29"},{"body":{"nodeType":"YulBlock","src":"4466:43:29","statements":[{"nodeType":"YulAssignment","src":"4476:27:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:29"},"nodeType":"YulFunctionCall","src":"4487:16:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:29"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:29","type":""}],"src":"4423:86:29"},{"body":{"nodeType":"YulBlock","src":"4576:51:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:29"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:29"},"nodeType":"YulFunctionCall","src":"4598:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:29"},"nodeType":"YulFunctionCall","src":"4586:35:29"},"nodeType":"YulExpressionStatement","src":"4586:35:29"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:29","type":""}],"src":"4515:112:29"},{"body":{"nodeType":"YulBlock","src":"4727:120:29","statements":[{"nodeType":"YulAssignment","src":"4737:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:29"},"nodeType":"YulFunctionCall","src":"4745:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:29"},"nodeType":"YulFunctionCall","src":"4822:17:29"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:29"},"nodeType":"YulFunctionCall","src":"4773:67:29"},"nodeType":"YulExpressionStatement","src":"4773:67:29"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:29","type":""}],"src":"4633:214:29"},{"body":{"nodeType":"YulBlock","src":"4898:32:29","statements":[{"nodeType":"YulAssignment","src":"4908:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"4919:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4908:7:29"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4880:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4890:7:29","type":""}],"src":"4853:77:29"},{"body":{"nodeType":"YulBlock","src":"5001:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5018:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5041:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5023:17:29"},"nodeType":"YulFunctionCall","src":"5023:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5011:6:29"},"nodeType":"YulFunctionCall","src":"5011:37:29"},"nodeType":"YulExpressionStatement","src":"5011:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4989:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4996:3:29","type":""}],"src":"4936:118:29"},{"body":{"nodeType":"YulBlock","src":"5158:124:29","statements":[{"nodeType":"YulAssignment","src":"5168:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5191:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:29"},"nodeType":"YulFunctionCall","src":"5176:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5168:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5248:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5261:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5272:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5257:3:29"},"nodeType":"YulFunctionCall","src":"5257:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5204:43:29"},"nodeType":"YulFunctionCall","src":"5204:71:29"},"nodeType":"YulExpressionStatement","src":"5204:71:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5130:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5142:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5153:4:29","type":""}],"src":"5060:222:29"},{"body":{"nodeType":"YulBlock","src":"5320:28:29","statements":[{"nodeType":"YulAssignment","src":"5330:12:29","value":{"name":"value","nodeType":"YulIdentifier","src":"5337:5:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5330:3:29"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5306:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5316:3:29","type":""}],"src":"5288:60:29"},{"body":{"nodeType":"YulBlock","src":"5414:82:29","statements":[{"nodeType":"YulAssignment","src":"5424:66:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5482:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5464:17:29"},"nodeType":"YulFunctionCall","src":"5464:24:29"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5455:8:29"},"nodeType":"YulFunctionCall","src":"5455:34:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5437:17:29"},"nodeType":"YulFunctionCall","src":"5437:53:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5424:9:29"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5394:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5404:9:29","type":""}],"src":"5354:142:29"},{"body":{"nodeType":"YulBlock","src":"5562:66:29","statements":[{"nodeType":"YulAssignment","src":"5572:50:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5616:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"5585:30:29"},"nodeType":"YulFunctionCall","src":"5585:37:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5572:9:29"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5542:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5552:9:29","type":""}],"src":"5502:126:29"},{"body":{"nodeType":"YulBlock","src":"5719:66:29","statements":[{"nodeType":"YulAssignment","src":"5729:50:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5773:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"5742:30:29"},"nodeType":"YulFunctionCall","src":"5742:37:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5729:9:29"}]}]},"name":"convert_t_contract$_ComplianceModule_$8510_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5699:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5709:9:29","type":""}],"src":"5634:151:29"},{"body":{"nodeType":"YulBlock","src":"5881:91:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5898:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5959:5:29"}],"functionName":{"name":"convert_t_contract$_ComplianceModule_$8510_to_t_address","nodeType":"YulIdentifier","src":"5903:55:29"},"nodeType":"YulFunctionCall","src":"5903:62:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5891:6:29"},"nodeType":"YulFunctionCall","src":"5891:75:29"},"nodeType":"YulExpressionStatement","src":"5891:75:29"}]},"name":"abi_encode_t_contract$_ComplianceModule_$8510_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5869:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5876:3:29","type":""}],"src":"5791:181:29"},{"body":{"nodeType":"YulBlock","src":"6101:149:29","statements":[{"nodeType":"YulAssignment","src":"6111:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6123:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6134:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6119:3:29"},"nodeType":"YulFunctionCall","src":"6119:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6111:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6216:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6229:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6240:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6225:3:29"},"nodeType":"YulFunctionCall","src":"6225:17:29"}],"functionName":{"name":"abi_encode_t_contract$_ComplianceModule_$8510_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6147:68:29"},"nodeType":"YulFunctionCall","src":"6147:96:29"},"nodeType":"YulExpressionStatement","src":"6147:96:29"}]},"name":"abi_encode_tuple_t_contract$_ComplianceModule_$8510__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6073:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6085:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6096:4:29","type":""}],"src":"5978:272:29"},{"body":{"nodeType":"YulBlock","src":"6322:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"6368:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6370:77:29"},"nodeType":"YulFunctionCall","src":"6370:79:29"},"nodeType":"YulExpressionStatement","src":"6370:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6343:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"6352:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6339:3:29"},"nodeType":"YulFunctionCall","src":"6339:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"6364:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6335:3:29"},"nodeType":"YulFunctionCall","src":"6335:32:29"},"nodeType":"YulIf","src":"6332:119:29"},{"nodeType":"YulBlock","src":"6461:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6476:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6490:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6480:6:29","type":""}]},{"nodeType":"YulAssignment","src":"6505:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6540:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6551:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6536:3:29"},"nodeType":"YulFunctionCall","src":"6536:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6560:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6515:20:29"},"nodeType":"YulFunctionCall","src":"6515:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6505:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6292:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6303:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6315:6:29","type":""}],"src":"6256:329:29"},{"body":{"nodeType":"YulBlock","src":"6635:105:29","statements":[{"nodeType":"YulAssignment","src":"6645:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6660:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"6667:66:29","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6656:3:29"},"nodeType":"YulFunctionCall","src":"6656:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6645:7:29"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6617:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6627:7:29","type":""}],"src":"6591:149:29"},{"body":{"nodeType":"YulBlock","src":"6809:52:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6826:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6848:5:29"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"6831:16:29"},"nodeType":"YulFunctionCall","src":"6831:23:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6819:6:29"},"nodeType":"YulFunctionCall","src":"6819:36:29"},"nodeType":"YulExpressionStatement","src":"6819:36:29"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6797:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6804:3:29","type":""}],"src":"6746:115:29"},{"body":{"nodeType":"YulBlock","src":"6932:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6972:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6954:17:29"},"nodeType":"YulFunctionCall","src":"6954:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6942:6:29"},"nodeType":"YulFunctionCall","src":"6942:37:29"},"nodeType":"YulExpressionStatement","src":"6942:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6920:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6927:3:29","type":""}],"src":"6867:118:29"},{"body":{"nodeType":"YulBlock","src":"7065:40:29","statements":[{"nodeType":"YulAssignment","src":"7076:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7092:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7086:5:29"},"nodeType":"YulFunctionCall","src":"7086:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7076:6:29"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7048:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7058:6:29","type":""}],"src":"6991:114:29"},{"body":{"nodeType":"YulBlock","src":"7222:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7239:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7244:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7232:6:29"},"nodeType":"YulFunctionCall","src":"7232:19:29"},"nodeType":"YulExpressionStatement","src":"7232:19:29"},{"nodeType":"YulAssignment","src":"7260:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7279:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"7284:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7275:3:29"},"nodeType":"YulFunctionCall","src":"7275:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7260:11:29"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7194:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"7199:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7210:11:29","type":""}],"src":"7111:184:29"},{"body":{"nodeType":"YulBlock","src":"7373:60:29","statements":[{"nodeType":"YulAssignment","src":"7383:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"7391:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7383:4:29"}]},{"nodeType":"YulAssignment","src":"7404:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7416:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"7421:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7412:3:29"},"nodeType":"YulFunctionCall","src":"7412:14:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7404:4:29"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7360:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7368:4:29","type":""}],"src":"7301:132:29"},{"body":{"nodeType":"YulBlock","src":"7494:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7511:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7534:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7516:17:29"},"nodeType":"YulFunctionCall","src":"7516:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7504:6:29"},"nodeType":"YulFunctionCall","src":"7504:37:29"},"nodeType":"YulExpressionStatement","src":"7504:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7482:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7489:3:29","type":""}],"src":"7439:108:29"},{"body":{"nodeType":"YulBlock","src":"7633:99:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7677:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"7685:3:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7643:33:29"},"nodeType":"YulFunctionCall","src":"7643:46:29"},"nodeType":"YulExpressionStatement","src":"7643:46:29"},{"nodeType":"YulAssignment","src":"7698:28:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7716:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"7721:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7712:3:29"},"nodeType":"YulFunctionCall","src":"7712:14:29"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"7698:10:29"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"7606:6:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7614:3:29","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"7622:10:29","type":""}],"src":"7553:179:29"},{"body":{"nodeType":"YulBlock","src":"7813:38:29","statements":[{"nodeType":"YulAssignment","src":"7823:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7835:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"7840:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7831:3:29"},"nodeType":"YulFunctionCall","src":"7831:14:29"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"7823:4:29"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7800:3:29","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"7808:4:29","type":""}],"src":"7738:113:29"},{"body":{"nodeType":"YulBlock","src":"8011:608:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8021:68:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8083:5:29"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8035:47:29"},"nodeType":"YulFunctionCall","src":"8035:54:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8025:6:29","type":""}]},{"nodeType":"YulAssignment","src":"8098:93:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8179:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"8184:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8105:73:29"},"nodeType":"YulFunctionCall","src":"8105:86:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8098:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"8200:71:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8265:5:29"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8215:49:29"},"nodeType":"YulFunctionCall","src":"8215:56:29"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"8204:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8280:21:29","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"8294:7:29"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"8284:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8370:224:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8384:34:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8411:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8405:5:29"},"nodeType":"YulFunctionCall","src":"8405:13:29"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"8388:13:29","type":""}]},{"nodeType":"YulAssignment","src":"8431:70:29","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"8482:13:29"},{"name":"pos","nodeType":"YulIdentifier","src":"8497:3:29"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8438:43:29"},"nodeType":"YulFunctionCall","src":"8438:63:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8431:3:29"}]},{"nodeType":"YulAssignment","src":"8514:70:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8577:6:29"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8524:52:29"},"nodeType":"YulFunctionCall","src":"8524:60:29"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8514:6:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8332:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"8335:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8329:2:29"},"nodeType":"YulFunctionCall","src":"8329:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8343:18:29","statements":[{"nodeType":"YulAssignment","src":"8345:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8354:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"8357:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8350:3:29"},"nodeType":"YulFunctionCall","src":"8350:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8345:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"8314:14:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8316:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"8325:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8320:1:29","type":""}]}]},"src":"8310:284:29"},{"nodeType":"YulAssignment","src":"8603:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"8610:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8603:3:29"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7990:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7997:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8006:3:29","type":""}],"src":"7887:732:29"},{"body":{"nodeType":"YulBlock","src":"8979:861:29","statements":[{"nodeType":"YulAssignment","src":"8989:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9001:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9012:3:29","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8997:3:29"},"nodeType":"YulFunctionCall","src":"8997:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8989:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9068:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9081:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9092:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9077:3:29"},"nodeType":"YulFunctionCall","src":"9077:17:29"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"9026:41:29"},"nodeType":"YulFunctionCall","src":"9026:69:29"},"nodeType":"YulExpressionStatement","src":"9026:69:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9116:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9127:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9112:3:29"},"nodeType":"YulFunctionCall","src":"9112:18:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9136:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"9142:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9132:3:29"},"nodeType":"YulFunctionCall","src":"9132:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9105:6:29"},"nodeType":"YulFunctionCall","src":"9105:48:29"},"nodeType":"YulExpressionStatement","src":"9105:48:29"},{"nodeType":"YulAssignment","src":"9162:86:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9234:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"9243:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9170:63:29"},"nodeType":"YulFunctionCall","src":"9170:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9162:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9269:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9280:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9265:3:29"},"nodeType":"YulFunctionCall","src":"9265:18:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9289:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"9295:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9285:3:29"},"nodeType":"YulFunctionCall","src":"9285:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9258:6:29"},"nodeType":"YulFunctionCall","src":"9258:48:29"},"nodeType":"YulExpressionStatement","src":"9258:48:29"},{"nodeType":"YulAssignment","src":"9315:86:29","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9387:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9323:63:29"},"nodeType":"YulFunctionCall","src":"9323:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9315:4:29"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9455:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9479:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9464:3:29"},"nodeType":"YulFunctionCall","src":"9464:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9411:43:29"},"nodeType":"YulFunctionCall","src":"9411:72:29"},"nodeType":"YulExpressionStatement","src":"9411:72:29"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9537:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9550:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9561:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9546:3:29"},"nodeType":"YulFunctionCall","src":"9546:19:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9493:43:29"},"nodeType":"YulFunctionCall","src":"9493:73:29"},"nodeType":"YulExpressionStatement","src":"9493:73:29"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9620:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9633:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9644:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9629:3:29"},"nodeType":"YulFunctionCall","src":"9629:19:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"9576:43:29"},"nodeType":"YulFunctionCall","src":"9576:73:29"},"nodeType":"YulExpressionStatement","src":"9576:73:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9670:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9681:3:29","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9666:3:29"},"nodeType":"YulFunctionCall","src":"9666:19:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9691:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"9697:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9687:3:29"},"nodeType":"YulFunctionCall","src":"9687:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9659:6:29"},"nodeType":"YulFunctionCall","src":"9659:49:29"},"nodeType":"YulExpressionStatement","src":"9659:49:29"},{"nodeType":"YulAssignment","src":"9717:116:29","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"9819:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"9828:4:29"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9725:93:29"},"nodeType":"YulFunctionCall","src":"9725:108:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9717:4:29"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8903:9:29","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8915:6:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8923:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8931:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8939:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8947:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8955:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8963:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8974:4:29","type":""}],"src":"8625:1215:29"},{"body":{"nodeType":"YulBlock","src":"9944:124:29","statements":[{"nodeType":"YulAssignment","src":"9954:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9966:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9977:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9962:3:29"},"nodeType":"YulFunctionCall","src":"9962:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9954:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10034:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10047:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10058:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10043:3:29"},"nodeType":"YulFunctionCall","src":"10043:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9990:43:29"},"nodeType":"YulFunctionCall","src":"9990:71:29"},"nodeType":"YulExpressionStatement","src":"9990:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9916:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9928:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9939:4:29","type":""}],"src":"9846:222:29"},{"body":{"nodeType":"YulBlock","src":"10115:77:29","statements":[{"body":{"nodeType":"YulBlock","src":"10170:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10179:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10182:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10172:6:29"},"nodeType":"YulFunctionCall","src":"10172:12:29"},"nodeType":"YulExpressionStatement","src":"10172:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10138:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10161:5:29"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"10145:15:29"},"nodeType":"YulFunctionCall","src":"10145:22:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10135:2:29"},"nodeType":"YulFunctionCall","src":"10135:33:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10128:6:29"},"nodeType":"YulFunctionCall","src":"10128:41:29"},"nodeType":"YulIf","src":"10125:61:29"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10108:5:29","type":""}],"src":"10074:118:29"},{"body":{"nodeType":"YulBlock","src":"10248:85:29","statements":[{"nodeType":"YulAssignment","src":"10258:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10280:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10267:12:29"},"nodeType":"YulFunctionCall","src":"10267:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10258:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10321:5:29"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"10296:24:29"},"nodeType":"YulFunctionCall","src":"10296:31:29"},"nodeType":"YulExpressionStatement","src":"10296:31:29"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10226:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"10234:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10242:5:29","type":""}],"src":"10198:135:29"},{"body":{"nodeType":"YulBlock","src":"10382:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"10439:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10448:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10451:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10441:6:29"},"nodeType":"YulFunctionCall","src":"10441:12:29"},"nodeType":"YulExpressionStatement","src":"10441:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10405:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10430:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"10412:17:29"},"nodeType":"YulFunctionCall","src":"10412:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10402:2:29"},"nodeType":"YulFunctionCall","src":"10402:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10395:6:29"},"nodeType":"YulFunctionCall","src":"10395:43:29"},"nodeType":"YulIf","src":"10392:63:29"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10375:5:29","type":""}],"src":"10339:122:29"},{"body":{"nodeType":"YulBlock","src":"10519:87:29","statements":[{"nodeType":"YulAssignment","src":"10529:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10551:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10538:12:29"},"nodeType":"YulFunctionCall","src":"10538:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10529:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10594:5:29"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"10567:26:29"},"nodeType":"YulFunctionCall","src":"10567:33:29"},"nodeType":"YulExpressionStatement","src":"10567:33:29"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10497:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"10505:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10513:5:29","type":""}],"src":"10467:139:29"},{"body":{"nodeType":"YulBlock","src":"10778:1033:29","statements":[{"body":{"nodeType":"YulBlock","src":"10825:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10827:77:29"},"nodeType":"YulFunctionCall","src":"10827:79:29"},"nodeType":"YulExpressionStatement","src":"10827:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10799:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10808:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10795:3:29"},"nodeType":"YulFunctionCall","src":"10795:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"10820:3:29","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10791:3:29"},"nodeType":"YulFunctionCall","src":"10791:33:29"},"nodeType":"YulIf","src":"10788:120:29"},{"nodeType":"YulBlock","src":"10918:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10933:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10947:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10937:6:29","type":""}]},{"nodeType":"YulAssignment","src":"10962:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10997:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11008:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10993:3:29"},"nodeType":"YulFunctionCall","src":"10993:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11017:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10972:20:29"},"nodeType":"YulFunctionCall","src":"10972:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10962:6:29"}]}]},{"nodeType":"YulBlock","src":"11045:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11060:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11074:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11064:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11090:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11125:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11136:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11121:3:29"},"nodeType":"YulFunctionCall","src":"11121:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11145:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11100:20:29"},"nodeType":"YulFunctionCall","src":"11100:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11090:6:29"}]}]},{"nodeType":"YulBlock","src":"11173:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11188:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11202:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11192:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11218:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11253:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11264:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11249:3:29"},"nodeType":"YulFunctionCall","src":"11249:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11273:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11228:20:29"},"nodeType":"YulFunctionCall","src":"11228:53:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11218:6:29"}]}]},{"nodeType":"YulBlock","src":"11301:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11316:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11330:2:29","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11320:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11346:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11381:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11392:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11377:3:29"},"nodeType":"YulFunctionCall","src":"11377:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11401:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11356:20:29"},"nodeType":"YulFunctionCall","src":"11356:53:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11346:6:29"}]}]},{"nodeType":"YulBlock","src":"11429:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11444:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11458:3:29","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11448:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11475:61:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11508:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11519:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11504:3:29"},"nodeType":"YulFunctionCall","src":"11504:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11528:7:29"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"11485:18:29"},"nodeType":"YulFunctionCall","src":"11485:51:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11475:6:29"}]}]},{"nodeType":"YulBlock","src":"11556:119:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11571:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11585:3:29","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11575:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11602:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11637:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11648:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11633:3:29"},"nodeType":"YulFunctionCall","src":"11633:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11657:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11612:20:29"},"nodeType":"YulFunctionCall","src":"11612:53:29"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"11602:6:29"}]}]},{"nodeType":"YulBlock","src":"11685:119:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11700:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11714:3:29","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11704:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11731:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11766:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11777:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11762:3:29"},"nodeType":"YulFunctionCall","src":"11762:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11786:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11741:20:29"},"nodeType":"YulFunctionCall","src":"11741:53:29"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"11731:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10700:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10711:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10723:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10731:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10739:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10747:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10755:6:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10763:6:29","type":""},{"name":"value6","nodeType":"YulTypedName","src":"10771:6:29","type":""}],"src":"10612:1199:29"},{"body":{"nodeType":"YulBlock","src":"11900:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"11946:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11948:77:29"},"nodeType":"YulFunctionCall","src":"11948:79:29"},"nodeType":"YulExpressionStatement","src":"11948:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11921:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11930:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11917:3:29"},"nodeType":"YulFunctionCall","src":"11917:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"11942:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11913:3:29"},"nodeType":"YulFunctionCall","src":"11913:32:29"},"nodeType":"YulIf","src":"11910:119:29"},{"nodeType":"YulBlock","src":"12039:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12054:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"12068:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12058:6:29","type":""}]},{"nodeType":"YulAssignment","src":"12083:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12118:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12129:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12114:3:29"},"nodeType":"YulFunctionCall","src":"12114:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12138:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12093:20:29"},"nodeType":"YulFunctionCall","src":"12093:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12083:6:29"}]}]},{"nodeType":"YulBlock","src":"12166:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12181:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"12195:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12185:6:29","type":""}]},{"nodeType":"YulAssignment","src":"12211:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12246:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12257:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12242:3:29"},"nodeType":"YulFunctionCall","src":"12242:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12266:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12221:20:29"},"nodeType":"YulFunctionCall","src":"12221:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12211:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11862:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11873:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11885:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11893:6:29","type":""}],"src":"11817:474:29"},{"body":{"nodeType":"YulBlock","src":"12325:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12342:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12345:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12335:6:29"},"nodeType":"YulFunctionCall","src":"12335:88:29"},"nodeType":"YulExpressionStatement","src":"12335:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12439:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12442:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12432:6:29"},"nodeType":"YulFunctionCall","src":"12432:15:29"},"nodeType":"YulExpressionStatement","src":"12432:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12463:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12466:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12456:6:29"},"nodeType":"YulFunctionCall","src":"12456:15:29"},"nodeType":"YulExpressionStatement","src":"12456:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12297:180:29"},{"body":{"nodeType":"YulBlock","src":"12534:269:29","statements":[{"nodeType":"YulAssignment","src":"12544:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12558:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"12564:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12554:3:29"},"nodeType":"YulFunctionCall","src":"12554:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12544:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"12575:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12605:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"12611:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12601:3:29"},"nodeType":"YulFunctionCall","src":"12601:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12579:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"12652:51:29","statements":[{"nodeType":"YulAssignment","src":"12666:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12680:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12688:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12676:3:29"},"nodeType":"YulFunctionCall","src":"12676:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12666:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12632:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12625:6:29"},"nodeType":"YulFunctionCall","src":"12625:26:29"},"nodeType":"YulIf","src":"12622:81:29"},{"body":{"nodeType":"YulBlock","src":"12755:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"12769:16:29"},"nodeType":"YulFunctionCall","src":"12769:18:29"},"nodeType":"YulExpressionStatement","src":"12769:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12719:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12742:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12750:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12739:2:29"},"nodeType":"YulFunctionCall","src":"12739:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12716:2:29"},"nodeType":"YulFunctionCall","src":"12716:38:29"},"nodeType":"YulIf","src":"12713:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12518:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12527:6:29","type":""}],"src":"12483:320:29"},{"body":{"nodeType":"YulBlock","src":"12837:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12854:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12857:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12847:6:29"},"nodeType":"YulFunctionCall","src":"12847:88:29"},"nodeType":"YulExpressionStatement","src":"12847:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12951:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12954:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12944:6:29"},"nodeType":"YulFunctionCall","src":"12944:15:29"},"nodeType":"YulExpressionStatement","src":"12944:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12975:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12978:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12968:6:29"},"nodeType":"YulFunctionCall","src":"12968:15:29"},"nodeType":"YulExpressionStatement","src":"12968:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"12809:180:29"},{"body":{"nodeType":"YulBlock","src":"13233:537:29","statements":[{"nodeType":"YulAssignment","src":"13243:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13255:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13266:3:29","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13251:3:29"},"nodeType":"YulFunctionCall","src":"13251:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13243:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13324:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13337:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13348:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13333:3:29"},"nodeType":"YulFunctionCall","src":"13333:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"13280:43:29"},"nodeType":"YulFunctionCall","src":"13280:71:29"},"nodeType":"YulExpressionStatement","src":"13280:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13405:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13418:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13429:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13414:3:29"},"nodeType":"YulFunctionCall","src":"13414:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13361:43:29"},"nodeType":"YulFunctionCall","src":"13361:72:29"},"nodeType":"YulExpressionStatement","src":"13361:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13487:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13500:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13511:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13496:3:29"},"nodeType":"YulFunctionCall","src":"13496:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13443:43:29"},"nodeType":"YulFunctionCall","src":"13443:72:29"},"nodeType":"YulExpressionStatement","src":"13443:72:29"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13569:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13582:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13593:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13578:3:29"},"nodeType":"YulFunctionCall","src":"13578:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13525:43:29"},"nodeType":"YulFunctionCall","src":"13525:72:29"},"nodeType":"YulExpressionStatement","src":"13525:72:29"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"13651:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13664:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13675:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13660:3:29"},"nodeType":"YulFunctionCall","src":"13660:19:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13607:43:29"},"nodeType":"YulFunctionCall","src":"13607:73:29"},"nodeType":"YulExpressionStatement","src":"13607:73:29"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"13734:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13747:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13758:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13743:3:29"},"nodeType":"YulFunctionCall","src":"13743:19:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13690:43:29"},"nodeType":"YulFunctionCall","src":"13690:73:29"},"nodeType":"YulExpressionStatement","src":"13690:73:29"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13165:9:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"13177:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13185:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13193:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13201:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13209:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13217:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13228:4:29","type":""}],"src":"12995:775:29"},{"body":{"nodeType":"YulBlock","src":"13902:206:29","statements":[{"nodeType":"YulAssignment","src":"13912:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13924:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13935:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13920:3:29"},"nodeType":"YulFunctionCall","src":"13920:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13912:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13992:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14005:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14016:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14001:3:29"},"nodeType":"YulFunctionCall","src":"14001:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13948:43:29"},"nodeType":"YulFunctionCall","src":"13948:71:29"},"nodeType":"YulExpressionStatement","src":"13948:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14073:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14086:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14097:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14082:3:29"},"nodeType":"YulFunctionCall","src":"14082:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14029:43:29"},"nodeType":"YulFunctionCall","src":"14029:72:29"},"nodeType":"YulExpressionStatement","src":"14029:72:29"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13866:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13878:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13886:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13897:4:29","type":""}],"src":"13776:332:29"},{"body":{"nodeType":"YulBlock","src":"14268:288:29","statements":[{"nodeType":"YulAssignment","src":"14278:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14290:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14301:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14286:3:29"},"nodeType":"YulFunctionCall","src":"14286:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14278:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14358:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14371:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14382:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14367:3:29"},"nodeType":"YulFunctionCall","src":"14367:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14314:43:29"},"nodeType":"YulFunctionCall","src":"14314:71:29"},"nodeType":"YulExpressionStatement","src":"14314:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14439:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14452:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14463:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14448:3:29"},"nodeType":"YulFunctionCall","src":"14448:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14395:43:29"},"nodeType":"YulFunctionCall","src":"14395:72:29"},"nodeType":"YulExpressionStatement","src":"14395:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14521:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14534:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14545:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14530:3:29"},"nodeType":"YulFunctionCall","src":"14530:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14477:43:29"},"nodeType":"YulFunctionCall","src":"14477:72:29"},"nodeType":"YulExpressionStatement","src":"14477:72:29"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14224:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14236:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14244:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14252:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14263:4:29","type":""}],"src":"14114:442:29"},{"body":{"nodeType":"YulBlock","src":"14590:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14607:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14610:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14600:6:29"},"nodeType":"YulFunctionCall","src":"14600:88:29"},"nodeType":"YulExpressionStatement","src":"14600:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14704:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14707:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14697:6:29"},"nodeType":"YulFunctionCall","src":"14697:15:29"},"nodeType":"YulExpressionStatement","src":"14697:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14728:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14731:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14721:6:29"},"nodeType":"YulFunctionCall","src":"14721:15:29"},"nodeType":"YulExpressionStatement","src":"14721:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14562:180:29"},{"body":{"nodeType":"YulBlock","src":"14792:147:29","statements":[{"nodeType":"YulAssignment","src":"14802:25:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14825:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14807:17:29"},"nodeType":"YulFunctionCall","src":"14807:20:29"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14802:1:29"}]},{"nodeType":"YulAssignment","src":"14836:25:29","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14859:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14841:17:29"},"nodeType":"YulFunctionCall","src":"14841:20:29"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14836:1:29"}]},{"nodeType":"YulAssignment","src":"14870:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14881:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"14884:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14877:3:29"},"nodeType":"YulFunctionCall","src":"14877:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"14870:3:29"}]},{"body":{"nodeType":"YulBlock","src":"14910:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14912:16:29"},"nodeType":"YulFunctionCall","src":"14912:18:29"},"nodeType":"YulExpressionStatement","src":"14912:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14902:1:29"},{"name":"sum","nodeType":"YulIdentifier","src":"14905:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14899:2:29"},"nodeType":"YulFunctionCall","src":"14899:10:29"},"nodeType":"YulIf","src":"14896:36:29"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14779:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"14782:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"14788:3:29","type":""}],"src":"14748:191:29"},{"body":{"nodeType":"YulBlock","src":"15155:454:29","statements":[{"nodeType":"YulAssignment","src":"15165:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15177:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15188:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15173:3:29"},"nodeType":"YulFunctionCall","src":"15173:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15165:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15246:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15259:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15270:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15255:3:29"},"nodeType":"YulFunctionCall","src":"15255:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15202:43:29"},"nodeType":"YulFunctionCall","src":"15202:71:29"},"nodeType":"YulExpressionStatement","src":"15202:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15327:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15340:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15351:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15336:3:29"},"nodeType":"YulFunctionCall","src":"15336:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15283:43:29"},"nodeType":"YulFunctionCall","src":"15283:72:29"},"nodeType":"YulExpressionStatement","src":"15283:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15409:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15422:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15433:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15418:3:29"},"nodeType":"YulFunctionCall","src":"15418:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15365:43:29"},"nodeType":"YulFunctionCall","src":"15365:72:29"},"nodeType":"YulExpressionStatement","src":"15365:72:29"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15491:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15504:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15515:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15500:3:29"},"nodeType":"YulFunctionCall","src":"15500:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15447:43:29"},"nodeType":"YulFunctionCall","src":"15447:72:29"},"nodeType":"YulExpressionStatement","src":"15447:72:29"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"15573:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15586:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15597:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15582:3:29"},"nodeType":"YulFunctionCall","src":"15582:19:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15529:43:29"},"nodeType":"YulFunctionCall","src":"15529:73:29"},"nodeType":"YulExpressionStatement","src":"15529:73:29"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15095:9:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15107:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15115:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15123:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15131:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15139:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15150:4:29","type":""}],"src":"14945:664:29"},{"body":{"nodeType":"YulBlock","src":"15793:367:29","statements":[{"nodeType":"YulAssignment","src":"15803:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15815:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15826:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15811:3:29"},"nodeType":"YulFunctionCall","src":"15811:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15803:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15884:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15897:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15908:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15893:3:29"},"nodeType":"YulFunctionCall","src":"15893:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15840:43:29"},"nodeType":"YulFunctionCall","src":"15840:71:29"},"nodeType":"YulExpressionStatement","src":"15840:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15961:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15974:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15985:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15970:3:29"},"nodeType":"YulFunctionCall","src":"15970:18:29"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"15921:39:29"},"nodeType":"YulFunctionCall","src":"15921:68:29"},"nodeType":"YulExpressionStatement","src":"15921:68:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16043:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16056:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16067:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16052:3:29"},"nodeType":"YulFunctionCall","src":"16052:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15999:43:29"},"nodeType":"YulFunctionCall","src":"15999:72:29"},"nodeType":"YulExpressionStatement","src":"15999:72:29"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16125:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16138:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16149:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16134:3:29"},"nodeType":"YulFunctionCall","src":"16134:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"16081:43:29"},"nodeType":"YulFunctionCall","src":"16081:72:29"},"nodeType":"YulExpressionStatement","src":"16081:72:29"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15741:9:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15753:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15761:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15769:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15777:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15788:4:29","type":""}],"src":"15615:545:29"},{"body":{"nodeType":"YulBlock","src":"16194:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16211:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16214:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16204:6:29"},"nodeType":"YulFunctionCall","src":"16204:88:29"},"nodeType":"YulExpressionStatement","src":"16204:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16308:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16311:4:29","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16301:6:29"},"nodeType":"YulFunctionCall","src":"16301:15:29"},"nodeType":"YulExpressionStatement","src":"16301:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16332:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16335:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16325:6:29"},"nodeType":"YulFunctionCall","src":"16325:15:29"},"nodeType":"YulExpressionStatement","src":"16325:15:29"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"16166:180:29"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ComplianceModule_$8510_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ComplianceModule_$8510_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ComplianceModule_$8510_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ComplianceModule_$8510__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ComplianceModule_$8510_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3380":[{"length":32,"start":2883}],"3382":[{"length":32,"start":2842}],"3384":[{"length":32,"start":2756}],"3386":[{"length":32,"start":4807}],"3388":[{"length":32,"start":4840}],"3391":[{"length":32,"start":3480}],"3394":[{"length":32,"start":3539}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x373 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BB JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x6290865D EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22D JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x38F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x47D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x217 PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH2 0x519 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x53F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x1C94 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3CA SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x417 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x417 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3FA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x42C PUSH2 0x91D JUMP JUMPDEST SWAP1 POP PUSH2 0x439 DUP2 DUP6 DUP6 PUSH2 0x925 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x459 PUSH2 0x91D JUMP JUMPDEST SWAP1 POP PUSH2 0x466 DUP6 DUP3 DUP6 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x471 DUP6 DUP6 DUP6 PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x490 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x49D PUSH2 0xB77 JUMP JUMPDEST PUSH2 0x4A7 DUP3 DUP3 PUSH2 0xBFE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x521 PUSH2 0xB77 JUMP JUMPDEST PUSH2 0x52B PUSH1 0x0 PUSH2 0xC80 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x538 DUP3 PUSH2 0xD46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x553 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x55B PUSH2 0xDCA JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x57C JUMPI PUSH2 0x57B PUSH2 0x1DD6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5AA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x622 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x64E SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x69B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x670 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x69B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x67E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6B0 PUSH2 0x91D JUMP JUMPDEST SWAP1 POP PUSH2 0x6BD DUP2 DUP6 DUP6 PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x70D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x704 SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x73C DUP13 PUSH2 0xE05 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x752 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x775 DUP3 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x785 DUP3 DUP8 DUP8 DUP8 PUSH2 0xE76 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F9 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F0 SWAP3 SWAP2 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x804 DUP11 DUP11 DUP11 PUSH2 0x925 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x89F PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x911 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x91A DUP2 PUSH2 0xC80 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x932 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xEA6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x943 DUP5 DUP5 PUSH2 0x810 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x9C6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9B6 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C5 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xEA6 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA3E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAB0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xABB DUP4 DUP4 DUP4 PUSH2 0x107D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB3C JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xB69 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xB74 JUMP JUMPDEST PUSH2 0xB71 PUSH2 0x12A2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB7F PUSH2 0x91D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB9D PUSH2 0x5E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFC JUMPI PUSH2 0xBC0 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF3 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC70 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC67 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7C PUSH1 0x0 DUP4 DUP4 PUSH2 0x107D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDC5 PUSH1 0x5 PUSH32 0x0 PUSH2 0x1338 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE00 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1338 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6F PUSH2 0xE69 PUSH2 0xAC0 JUMP JUMPDEST DUP4 PUSH2 0x13E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xE88 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1429 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE98 DUP3 DUP3 PUSH2 0x151D JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF18 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0F SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF8A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF81 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1077 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x106E SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CF JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10C3 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x115B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1152 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11EB JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1238 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1295 SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x131D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1355 JUMPI PUSH2 0x134E DUP4 PUSH2 0x1681 JUMP JUMPDEST SWAP1 POP PUSH2 0x13E2 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1361 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x138D SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1469 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1513 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x148E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F7C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1504 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1513 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1531 JUMPI PUSH2 0x1530 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1544 JUMPI PUSH2 0x1543 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x167D JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x155E JUMPI PUSH2 0x155D PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1571 JUMPI PUSH2 0x1570 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x15A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15BC JUMPI PUSH2 0x15BB PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15CF JUMPI PUSH2 0x15CE PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1614 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160B SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1627 JUMPI PUSH2 0x1626 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x167C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1673 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x168E DUP4 PUSH2 0x16F5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16AD JUMPI PUSH2 0x16AC PUSH2 0x1DD6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16DF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x173C JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x177F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A7 DUP3 PUSH2 0x1745 JUMP JUMPDEST PUSH2 0x17B1 DUP2 DUP6 PUSH2 0x1750 JUMP JUMPDEST SWAP4 POP PUSH2 0x17C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x17CA DUP2 PUSH2 0x178B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17EF DUP2 DUP5 PUSH2 0x179C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1827 DUP3 PUSH2 0x17FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1837 DUP2 PUSH2 0x181C JUMP JUMPDEST DUP2 EQ PUSH2 0x1842 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1854 DUP2 PUSH2 0x182E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186D DUP2 PUSH2 0x185A JUMP JUMPDEST DUP2 EQ PUSH2 0x1878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x188A DUP2 PUSH2 0x1864 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A7 JUMPI PUSH2 0x18A6 PUSH2 0x17F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18B5 DUP6 DUP3 DUP7 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18C6 DUP6 DUP3 DUP7 ADD PUSH2 0x187B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E5 DUP2 PUSH2 0x18D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1900 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x190F DUP2 PUSH2 0x185A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x192A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1906 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1949 JUMPI PUSH2 0x1948 PUSH2 0x17F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1957 DUP7 DUP3 DUP8 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1968 DUP7 DUP3 DUP8 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1979 DUP7 DUP3 DUP8 ADD PUSH2 0x187B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1999 DUP2 PUSH2 0x1983 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1990 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CD DUP2 PUSH2 0x19BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A13 PUSH2 0x1A0E PUSH2 0x1A09 DUP5 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0x19EE JUMP JUMPDEST PUSH2 0x17FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A25 DUP3 PUSH2 0x19F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A37 DUP3 PUSH2 0x1A1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A47 DUP2 PUSH2 0x1A2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A62 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A7E JUMPI PUSH2 0x1A7D PUSH2 0x17F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A8C DUP5 DUP3 DUP6 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACA DUP2 PUSH2 0x1A95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1AD9 DUP2 PUSH2 0x181C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B14 DUP2 PUSH2 0x185A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B26 DUP4 DUP4 PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B4A DUP3 PUSH2 0x1ADF JUMP JUMPDEST PUSH2 0x1B54 DUP2 DUP6 PUSH2 0x1AEA JUMP JUMPDEST SWAP4 POP PUSH2 0x1B5F DUP4 PUSH2 0x1AFB JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B90 JUMPI DUP2 MLOAD PUSH2 0x1B77 DUP9 DUP3 PUSH2 0x1B1A JUMP JUMPDEST SWAP8 POP PUSH2 0x1B82 DUP4 PUSH2 0x1B32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B63 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1BB2 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1AC1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1BC4 DUP2 DUP10 PUSH2 0x179C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1BD8 DUP2 DUP9 PUSH2 0x179C JUMP JUMPDEST SWAP1 POP PUSH2 0x1BE7 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0x1BF4 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x1C01 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x19C4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1C13 DUP2 DUP5 PUSH2 0x1B3F JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C36 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C45 DUP2 PUSH2 0x1983 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C62 DUP2 PUSH2 0x1C3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C71 DUP2 PUSH2 0x19BA JUMP JUMPDEST DUP2 EQ PUSH2 0x1C7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C8E DUP2 PUSH2 0x1C68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1CB3 JUMPI PUSH2 0x1CB2 PUSH2 0x17F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CC1 DUP11 DUP3 DUP12 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1CD2 DUP11 DUP3 DUP12 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1CE3 DUP11 DUP3 DUP12 ADD PUSH2 0x187B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1CF4 DUP11 DUP3 DUP12 ADD PUSH2 0x187B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1D05 DUP11 DUP3 DUP12 ADD PUSH2 0x1C53 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1D16 DUP11 DUP3 DUP12 ADD PUSH2 0x1C7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1D27 DUP11 DUP3 DUP12 ADD PUSH2 0x1C7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D4D JUMPI PUSH2 0x1D4C PUSH2 0x17F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D5B DUP6 DUP3 DUP7 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D6C DUP6 DUP3 DUP7 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DBD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DD0 JUMPI PUSH2 0x1DCF PUSH2 0x1D76 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1E1A PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x1E27 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x1E34 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x1E41 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0x1E4E PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0x1E5B PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1906 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E7B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x1E88 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AD0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EA4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x1EB1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0x1EBE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1906 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F00 DUP3 PUSH2 0x185A JUMP JUMPDEST SWAP2 POP PUSH2 0x1F0B DUP4 PUSH2 0x185A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F23 JUMPI PUSH2 0x1F22 PUSH2 0x1EC6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1F3E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x1F4B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x1F58 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x1F65 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0x1F72 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1AD0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1F91 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x1F9E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x1FAB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x1FB8 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x19C4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xEF2002C8A161CC0BF6 COINBASE DUP16 PUSH20 0x11E40D8C50C98B6DB5627D3CF8539436D1862664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"218:758:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2614:112:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;526:95:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;268:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2379:143:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5228:557:15;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:672:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3455:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:3;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;2614:112:5:-;2673:7;2699:20;:18;:20::i;:::-;2692:27;;2614:112;:::o;526:95:25:-;1531:13:0;:11;:13::i;:::-;597:17:25::1;603:2;607:6;597:5;:17::i;:::-;526:95:::0;;:::o;268:34::-;;;;;;;;;;;;;:::o;2933:116:3:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2379:143:5:-;2470:7;2496:19;2509:5;2496:12;:19::i;:::-;2489:26;;2379:143;;;:::o;5228:557:15:-;5326:13;5353:18;5385:21;5420:15;5449:25;5488:12;5514:27;5617:13;:11;:13::i;:::-;5644:16;:14;:16::i;:::-;5674:13;5709:4;5736:1;5728:10;;5766:1;5752:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5566:212;;;;;;;;;;;;;;;;;;;;;5228:557;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3244:178::-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;1668:672:5:-;1889:8;1871:15;:26;1867:97;;;1944:8;1920:33;;;;;;;;;;;:::i;:::-;;;;;;;;1867:97;1974:18;1024:95;2033:5;2040:7;2049:5;2056:16;2066:5;2056:9;:16::i;:::-;2074:8;2005:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1995:89;;;;;;1974:110;;2095:12;2110:28;2127:10;2110:16;:28::i;:::-;2095:43;;2149:14;2166:28;2180:4;2186:1;2189;2192;2166:13;:28::i;:::-;2149:45;;2218:5;2208:15;;:6;:15;;;2204:88;;2267:6;2275:5;2246:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2204:88;2302:31;2311:5;2318:7;2327:5;2302:8;:31::i;:::-;1857:483;;;1668:672;;;;;;;:::o;3455:140:3:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8630:128:3:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;3945:262:15:-;3998:7;4038:11;4021:28;;4029:4;4021:28;;;:63;;;;;4070:14;4053:13;:31;4021:63;4017:184;;;4107:22;4100:29;;;;4017:184;4167:23;:21;:23::i;:::-;4160:30;;3945:262;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7362:208:3:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;538:107:9:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6105:126:15:-;6151:13;6183:41;6210:13;6183:5;:26;;:41;;;;:::i;:::-;6176:48;;6105:126;:::o;6557:135::-;6606:13;6638:47;6668:16;6638:8;:29;;:47;;;;:::i;:::-;6631:54;;6557:135;:::o;759:395:9:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;5017:176:15:-;5094:7;5120:66;5153:20;:18;:20::i;:::-;5175:10;5120:32;:66::i;:::-;5113:73;;5017:176;;;:::o;6887:260:14:-;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;7131:9;7124:16;;;;;6887:260;;;;;;:::o;9605:432:3:-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;4213:179:15:-;4268:7;2079:95;4326:11;4339:14;4355:13;4378:4;4304:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;:::o;3368:267:11:-;3462:13;1390:66;3520:17;;3510:5;3491:46;3487:142;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3487:142;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3368:267;;;;;:::o;3874:374:18:-;3967:14;4049:4;4043:11;4079:10;4074:3;4067:23;4126:15;4119:4;4114:3;4110:14;4103:39;4178:10;4171:4;4166:3;4162:14;4155:34;4227:4;4222:3;4212:20;4202:30;;4018:224;3874:374;;;;:::o;5203:1551:14:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;2078:378:11:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2375:3;2370;2363:16;2415:4;2408;2403:3;2399:14;2392:28;2446:3;2439:10;;;;2078:378;;;:::o;2528:245::-;2589:7;2608:14;2661:4;2652;2625:33;;:40;2608:57;;2688:2;2679:6;:11;2675:69;;;2713:20;;;;;;;;;;;;;;2675:69;2760:6;2753:13;;;2528:245;;;:::o;7:99:29:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:60::-;5316:3;5337:5;5330:12;;5288:60;;;:::o;5354:142::-;5404:9;5437:53;5455:34;5464:24;5482:5;5464:24;:::i;:::-;5455:34;:::i;:::-;5437:53;:::i;:::-;5424:66;;5354:142;;;:::o;5502:126::-;5552:9;5585:37;5616:5;5585:37;:::i;:::-;5572:50;;5502:126;;;:::o;5634:151::-;5709:9;5742:37;5773:5;5742:37;:::i;:::-;5729:50;;5634:151;;;:::o;5791:181::-;5903:62;5959:5;5903:62;:::i;:::-;5898:3;5891:75;5791:181;;:::o;5978:272::-;6096:4;6134:2;6123:9;6119:18;6111:26;;6147:96;6240:1;6229:9;6225:17;6216:6;6147:96;:::i;:::-;5978:272;;;;:::o;6256:329::-;6315:6;6364:2;6352:9;6343:7;6339:23;6335:32;6332:119;;;6370:79;;:::i;:::-;6332:119;6490:1;6515:53;6560:7;6551:6;6540:9;6536:22;6515:53;:::i;:::-;6505:63;;6461:117;6256:329;;;;:::o;6591:149::-;6627:7;6667:66;6660:5;6656:78;6645:89;;6591:149;;;:::o;6746:115::-;6831:23;6848:5;6831:23;:::i;:::-;6826:3;6819:36;6746:115;;:::o;6867:118::-;6954:24;6972:5;6954:24;:::i;:::-;6949:3;6942:37;6867:118;;:::o;6991:114::-;7058:6;7092:5;7086:12;7076:22;;6991:114;;;:::o;7111:184::-;7210:11;7244:6;7239:3;7232:19;7284:4;7279:3;7275:14;7260:29;;7111:184;;;;:::o;7301:132::-;7368:4;7391:3;7383:11;;7421:4;7416:3;7412:14;7404:22;;7301:132;;;:::o;7439:108::-;7516:24;7534:5;7516:24;:::i;:::-;7511:3;7504:37;7439:108;;:::o;7553:179::-;7622:10;7643:46;7685:3;7677:6;7643:46;:::i;:::-;7721:4;7716:3;7712:14;7698:28;;7553:179;;;;:::o;7738:113::-;7808:4;7840;7835:3;7831:14;7823:22;;7738:113;;;:::o;7887:732::-;8006:3;8035:54;8083:5;8035:54;:::i;:::-;8105:86;8184:6;8179:3;8105:86;:::i;:::-;8098:93;;8215:56;8265:5;8215:56;:::i;:::-;8294:7;8325:1;8310:284;8335:6;8332:1;8329:13;8310:284;;;8411:6;8405:13;8438:63;8497:3;8482:13;8438:63;:::i;:::-;8431:70;;8524:60;8577:6;8524:60;:::i;:::-;8514:70;;8370:224;8357:1;8354;8350:9;8345:14;;8310:284;;;8314:14;8610:3;8603:10;;8011:608;;;7887:732;;;;:::o;8625:1215::-;8974:4;9012:3;9001:9;8997:19;8989:27;;9026:69;9092:1;9081:9;9077:17;9068:6;9026:69;:::i;:::-;9142:9;9136:4;9132:20;9127:2;9116:9;9112:18;9105:48;9170:78;9243:4;9234:6;9170:78;:::i;:::-;9162:86;;9295:9;9289:4;9285:20;9280:2;9269:9;9265:18;9258:48;9323:78;9396:4;9387:6;9323:78;:::i;:::-;9315:86;;9411:72;9479:2;9468:9;9464:18;9455:6;9411:72;:::i;:::-;9493:73;9561:3;9550:9;9546:19;9537:6;9493:73;:::i;:::-;9576;9644:3;9633:9;9629:19;9620:6;9576:73;:::i;:::-;9697:9;9691:4;9687:20;9681:3;9670:9;9666:19;9659:49;9725:108;9828:4;9819:6;9725:108;:::i;:::-;9717:116;;8625:1215;;;;;;;;;;:::o;9846:222::-;9939:4;9977:2;9966:9;9962:18;9954:26;;9990:71;10058:1;10047:9;10043:17;10034:6;9990:71;:::i;:::-;9846:222;;;;:::o;10074:118::-;10145:22;10161:5;10145:22;:::i;:::-;10138:5;10135:33;10125:61;;10182:1;10179;10172:12;10125:61;10074:118;:::o;10198:135::-;10242:5;10280:6;10267:20;10258:29;;10296:31;10321:5;10296:31;:::i;:::-;10198:135;;;;:::o;10339:122::-;10412:24;10430:5;10412:24;:::i;:::-;10405:5;10402:35;10392:63;;10451:1;10448;10441:12;10392:63;10339:122;:::o;10467:139::-;10513:5;10551:6;10538:20;10529:29;;10567:33;10594:5;10567:33;:::i;:::-;10467:139;;;;:::o;10612:1199::-;10723:6;10731;10739;10747;10755;10763;10771;10820:3;10808:9;10799:7;10795:23;10791:33;10788:120;;;10827:79;;:::i;:::-;10788:120;10947:1;10972:53;11017:7;11008:6;10997:9;10993:22;10972:53;:::i;:::-;10962:63;;10918:117;11074:2;11100:53;11145:7;11136:6;11125:9;11121:22;11100:53;:::i;:::-;11090:63;;11045:118;11202:2;11228:53;11273:7;11264:6;11253:9;11249:22;11228:53;:::i;:::-;11218:63;;11173:118;11330:2;11356:53;11401:7;11392:6;11381:9;11377:22;11356:53;:::i;:::-;11346:63;;11301:118;11458:3;11485:51;11528:7;11519:6;11508:9;11504:22;11485:51;:::i;:::-;11475:61;;11429:117;11585:3;11612:53;11657:7;11648:6;11637:9;11633:22;11612:53;:::i;:::-;11602:63;;11556:119;11714:3;11741:53;11786:7;11777:6;11766:9;11762:22;11741:53;:::i;:::-;11731:63;;11685:119;10612:1199;;;;;;;;;;:::o;11817:474::-;11885:6;11893;11942:2;11930:9;11921:7;11917:23;11913:32;11910:119;;;11948:79;;:::i;:::-;11910:119;12068:1;12093:53;12138:7;12129:6;12118:9;12114:22;12093:53;:::i;:::-;12083:63;;12039:117;12195:2;12221:53;12266:7;12257:6;12246:9;12242:22;12221:53;:::i;:::-;12211:63;;12166:118;11817:474;;;;;:::o;12297:180::-;12345:77;12342:1;12335:88;12442:4;12439:1;12432:15;12466:4;12463:1;12456:15;12483:320;12527:6;12564:1;12558:4;12554:12;12544:22;;12611:1;12605:4;12601:12;12632:18;12622:81;;12688:4;12680:6;12676:17;12666:27;;12622:81;12750:2;12742:6;12739:14;12719:18;12716:38;12713:84;;12769:18;;:::i;:::-;12713:84;12534:269;12483:320;;;:::o;12809:180::-;12857:77;12854:1;12847:88;12954:4;12951:1;12944:15;12978:4;12975:1;12968:15;12995:775;13228:4;13266:3;13255:9;13251:19;13243:27;;13280:71;13348:1;13337:9;13333:17;13324:6;13280:71;:::i;:::-;13361:72;13429:2;13418:9;13414:18;13405:6;13361:72;:::i;:::-;13443;13511:2;13500:9;13496:18;13487:6;13443:72;:::i;:::-;13525;13593:2;13582:9;13578:18;13569:6;13525:72;:::i;:::-;13607:73;13675:3;13664:9;13660:19;13651:6;13607:73;:::i;:::-;13690;13758:3;13747:9;13743:19;13734:6;13690:73;:::i;:::-;12995:775;;;;;;;;;:::o;13776:332::-;13897:4;13935:2;13924:9;13920:18;13912:26;;13948:71;14016:1;14005:9;14001:17;13992:6;13948:71;:::i;:::-;14029:72;14097:2;14086:9;14082:18;14073:6;14029:72;:::i;:::-;13776:332;;;;;:::o;14114:442::-;14263:4;14301:2;14290:9;14286:18;14278:26;;14314:71;14382:1;14371:9;14367:17;14358:6;14314:71;:::i;:::-;14395:72;14463:2;14452:9;14448:18;14439:6;14395:72;:::i;:::-;14477;14545:2;14534:9;14530:18;14521:6;14477:72;:::i;:::-;14114:442;;;;;;:::o;14562:180::-;14610:77;14607:1;14600:88;14707:4;14704:1;14697:15;14731:4;14728:1;14721:15;14748:191;14788:3;14807:20;14825:1;14807:20;:::i;:::-;14802:25;;14841:20;14859:1;14841:20;:::i;:::-;14836:25;;14884:1;14881;14877:9;14870:16;;14905:3;14902:1;14899:10;14896:36;;;14912:18;;:::i;:::-;14896:36;14748:191;;;;:::o;14945:664::-;15150:4;15188:3;15177:9;15173:19;15165:27;;15202:71;15270:1;15259:9;15255:17;15246:6;15202:71;:::i;:::-;15283:72;15351:2;15340:9;15336:18;15327:6;15283:72;:::i;:::-;15365;15433:2;15422:9;15418:18;15409:6;15365:72;:::i;:::-;15447;15515:2;15504:9;15500:18;15491:6;15447:72;:::i;:::-;15529:73;15597:3;15586:9;15582:19;15573:6;15529:73;:::i;:::-;14945:664;;;;;;;;:::o;15615:545::-;15788:4;15826:3;15815:9;15811:19;15803:27;;15840:71;15908:1;15897:9;15893:17;15884:6;15840:71;:::i;:::-;15921:68;15985:2;15974:9;15970:18;15961:6;15921:68;:::i;:::-;15999:72;16067:2;16056:9;16052:18;16043:6;15999:72;:::i;:::-;16081;16149:2;16138:9;16134:18;16125:6;16081:72;:::i;:::-;15615:545;;;;;;;:::o;16166:180::-;16214:77;16211:1;16204:88;16311:4;16308:1;16301:15;16335:4;16332:1;16325:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","compliance()":"6290865d","decimals()":"313ce567","eip712Domain()":"84b0196e","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"contract ComplianceModule\",\"name\":\"_compliance\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compliance\",\"outputs\":[{\"internalType\":\"contract ComplianceModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ShareToken.sol\":\"ShareToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/ComplianceModule.sol\":{\"keccak256\":\"0x101df4585a4760a8d01060ea524a0e0b4934c553fdc50050eb95f18e27801f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12a3bc46bb74db0ded4b53fdf8f9192944de960196ce27213908449e16b060d2\",\"dweb:/ipfs/QmYicxvZexNHi8vzKF3hEHy8sgLxSPcmmsdtPUm3Ujg4pq\"]},\"contracts/ShareToken.sol\":{\"keccak256\":\"0x904af24224769d698725daa033cf1c1213e74e50b56dfd1736f511f9b843a6dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58c3049a7a8b74a92a72e33e187689cb8594df450e5adfeb400234852643cdfe\",\"dweb:/ipfs/QmfJsYt4yiZaMkwP8H63t4EzjxRRqcNYzyfxLuALJiZaNV\"]}},\"version\":1}"}},"contracts/Vault.sol":{"VaultContract":{"abi":[{"inputs":[{"internalType":"contract AssetTokenizer","name":"_assetTokenizer","type":"address"},{"internalType":"contract ShareToken","name":"_shareToken","type":"address"},{"internalType":"contract ComplianceModule","name":"_compliance","type":"address"},{"internalType":"contract YieldDistributor","name":"_yieldDistributor","type":"address"},{"internalType":"contract ZKModule","name":"_zkModule","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"WithdrawFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"WithdrawRequest","type":"event"},{"inputs":[],"name":"assetTokenizer","outputs":[{"internalType":"contract AssetTokenizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"compliance","outputs":[{"internalType":"contract ComplianceModule","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"depositAsset","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"depositedAssets","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"pendingWithdrawals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"requestWithdrawal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"signedReceipt","type":"bytes"}],"name":"settleWithdrawal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"shareToken","outputs":[{"internalType":"contract ShareToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"yieldDistributor","outputs":[{"internalType":"contract YieldDistributor","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"zkModule","outputs":[{"internalType":"contract ZKModule","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8730":{"entryPoint":null,"id":8730,"parameterSlots":5,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":527,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_contract$_AssetTokenizer_$8446_fromMemory":{"entryPoint":826,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_ComplianceModule_$8510_fromMemory":{"entryPoint":964,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_ShareToken_$8636_fromMemory":{"entryPoint":895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_YieldDistributor_$9008_fromMemory":{"entryPoint":1033,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_ZKModule_$9056_fromMemory":{"entryPoint":1102,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_AssetTokenizer_$8446t_contract$_ShareToken_$8636t_contract$_ComplianceModule_$8510t_contract$_YieldDistributor_$9008t_contract$_ZKModule_$9056_fromMemory":{"entryPoint":1125,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1261,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1278,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":760,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_AssetTokenizer_$8446":{"entryPoint":780,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_ComplianceModule_$8510":{"entryPoint":918,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_ShareToken_$8636":{"entryPoint":849,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_YieldDistributor_$9008":{"entryPoint":987,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_ZKModule_$9056":{"entryPoint":1056,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":728,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":723,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_contract$_AssetTokenizer_$8446":{"entryPoint":800,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_ComplianceModule_$8510":{"entryPoint":938,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_ShareToken_$8636":{"entryPoint":869,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_YieldDistributor_$9008":{"entryPoint":1007,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_ZKModule_$9056":{"entryPoint":1076,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4558:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"379:81:29","statements":[{"nodeType":"YulAssignment","src":"389:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:29"},"nodeType":"YulFunctionCall","src":"400:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:29","type":""}],"src":"334:126:29"},{"body":{"nodeType":"YulBlock","src":"511:51:29","statements":[{"nodeType":"YulAssignment","src":"521:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:29"},"nodeType":"YulFunctionCall","src":"532:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:29","type":""}],"src":"466:96:29"},{"body":{"nodeType":"YulBlock","src":"636:51:29","statements":[{"nodeType":"YulAssignment","src":"646:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"675:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"657:17:29"},"nodeType":"YulFunctionCall","src":"657:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"646:7:29"}]}]},"name":"cleanup_t_contract$_AssetTokenizer_$8446","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"618:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"628:7:29","type":""}],"src":"568:119:29"},{"body":{"nodeType":"YulBlock","src":"759:102:29","statements":[{"body":{"nodeType":"YulBlock","src":"839:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"848:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"851:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"841:6:29"},"nodeType":"YulFunctionCall","src":"841:12:29"},"nodeType":"YulExpressionStatement","src":"841:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"782:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"830:5:29"}],"functionName":{"name":"cleanup_t_contract$_AssetTokenizer_$8446","nodeType":"YulIdentifier","src":"789:40:29"},"nodeType":"YulFunctionCall","src":"789:47:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"779:2:29"},"nodeType":"YulFunctionCall","src":"779:58:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"772:6:29"},"nodeType":"YulFunctionCall","src":"772:66:29"},"nodeType":"YulIf","src":"769:86:29"}]},"name":"validator_revert_t_contract$_AssetTokenizer_$8446","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"752:5:29","type":""}],"src":"693:168:29"},{"body":{"nodeType":"YulBlock","src":"953:103:29","statements":[{"nodeType":"YulAssignment","src":"963:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"978:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"972:5:29"},"nodeType":"YulFunctionCall","src":"972:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"963:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1044:5:29"}],"functionName":{"name":"validator_revert_t_contract$_AssetTokenizer_$8446","nodeType":"YulIdentifier","src":"994:49:29"},"nodeType":"YulFunctionCall","src":"994:56:29"},"nodeType":"YulExpressionStatement","src":"994:56:29"}]},"name":"abi_decode_t_contract$_AssetTokenizer_$8446_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"931:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"939:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"947:5:29","type":""}],"src":"867:189:29"},{"body":{"nodeType":"YulBlock","src":"1126:51:29","statements":[{"nodeType":"YulAssignment","src":"1136:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1165:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1147:17:29"},"nodeType":"YulFunctionCall","src":"1147:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1136:7:29"}]}]},"name":"cleanup_t_contract$_ShareToken_$8636","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1108:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1118:7:29","type":""}],"src":"1062:115:29"},{"body":{"nodeType":"YulBlock","src":"1245:98:29","statements":[{"body":{"nodeType":"YulBlock","src":"1321:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1330:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1333:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1323:6:29"},"nodeType":"YulFunctionCall","src":"1323:12:29"},"nodeType":"YulExpressionStatement","src":"1323:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1268:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1312:5:29"}],"functionName":{"name":"cleanup_t_contract$_ShareToken_$8636","nodeType":"YulIdentifier","src":"1275:36:29"},"nodeType":"YulFunctionCall","src":"1275:43:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1265:2:29"},"nodeType":"YulFunctionCall","src":"1265:54:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1258:6:29"},"nodeType":"YulFunctionCall","src":"1258:62:29"},"nodeType":"YulIf","src":"1255:82:29"}]},"name":"validator_revert_t_contract$_ShareToken_$8636","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1238:5:29","type":""}],"src":"1183:160:29"},{"body":{"nodeType":"YulBlock","src":"1431:99:29","statements":[{"nodeType":"YulAssignment","src":"1441:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1456:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1450:5:29"},"nodeType":"YulFunctionCall","src":"1450:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1441:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1518:5:29"}],"functionName":{"name":"validator_revert_t_contract$_ShareToken_$8636","nodeType":"YulIdentifier","src":"1472:45:29"},"nodeType":"YulFunctionCall","src":"1472:52:29"},"nodeType":"YulExpressionStatement","src":"1472:52:29"}]},"name":"abi_decode_t_contract$_ShareToken_$8636_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1409:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"1417:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1425:5:29","type":""}],"src":"1349:181:29"},{"body":{"nodeType":"YulBlock","src":"1606:51:29","statements":[{"nodeType":"YulAssignment","src":"1616:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1645:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1627:17:29"},"nodeType":"YulFunctionCall","src":"1627:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1616:7:29"}]}]},"name":"cleanup_t_contract$_ComplianceModule_$8510","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1588:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1598:7:29","type":""}],"src":"1536:121:29"},{"body":{"nodeType":"YulBlock","src":"1731:104:29","statements":[{"body":{"nodeType":"YulBlock","src":"1813:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1822:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1825:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1815:6:29"},"nodeType":"YulFunctionCall","src":"1815:12:29"},"nodeType":"YulExpressionStatement","src":"1815:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1754:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1804:5:29"}],"functionName":{"name":"cleanup_t_contract$_ComplianceModule_$8510","nodeType":"YulIdentifier","src":"1761:42:29"},"nodeType":"YulFunctionCall","src":"1761:49:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1751:2:29"},"nodeType":"YulFunctionCall","src":"1751:60:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1744:6:29"},"nodeType":"YulFunctionCall","src":"1744:68:29"},"nodeType":"YulIf","src":"1741:88:29"}]},"name":"validator_revert_t_contract$_ComplianceModule_$8510","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1724:5:29","type":""}],"src":"1663:172:29"},{"body":{"nodeType":"YulBlock","src":"1929:105:29","statements":[{"nodeType":"YulAssignment","src":"1939:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1954:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1948:5:29"},"nodeType":"YulFunctionCall","src":"1948:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1939:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2022:5:29"}],"functionName":{"name":"validator_revert_t_contract$_ComplianceModule_$8510","nodeType":"YulIdentifier","src":"1970:51:29"},"nodeType":"YulFunctionCall","src":"1970:58:29"},"nodeType":"YulExpressionStatement","src":"1970:58:29"}]},"name":"abi_decode_t_contract$_ComplianceModule_$8510_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1907:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"1915:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1923:5:29","type":""}],"src":"1841:193:29"},{"body":{"nodeType":"YulBlock","src":"2110:51:29","statements":[{"nodeType":"YulAssignment","src":"2120:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2149:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2131:17:29"},"nodeType":"YulFunctionCall","src":"2131:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2120:7:29"}]}]},"name":"cleanup_t_contract$_YieldDistributor_$9008","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2092:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2102:7:29","type":""}],"src":"2040:121:29"},{"body":{"nodeType":"YulBlock","src":"2235:104:29","statements":[{"body":{"nodeType":"YulBlock","src":"2317:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2326:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2329:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2319:6:29"},"nodeType":"YulFunctionCall","src":"2319:12:29"},"nodeType":"YulExpressionStatement","src":"2319:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2258:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2308:5:29"}],"functionName":{"name":"cleanup_t_contract$_YieldDistributor_$9008","nodeType":"YulIdentifier","src":"2265:42:29"},"nodeType":"YulFunctionCall","src":"2265:49:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2255:2:29"},"nodeType":"YulFunctionCall","src":"2255:60:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2248:6:29"},"nodeType":"YulFunctionCall","src":"2248:68:29"},"nodeType":"YulIf","src":"2245:88:29"}]},"name":"validator_revert_t_contract$_YieldDistributor_$9008","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2228:5:29","type":""}],"src":"2167:172:29"},{"body":{"nodeType":"YulBlock","src":"2433:105:29","statements":[{"nodeType":"YulAssignment","src":"2443:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2458:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2452:5:29"},"nodeType":"YulFunctionCall","src":"2452:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2443:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2526:5:29"}],"functionName":{"name":"validator_revert_t_contract$_YieldDistributor_$9008","nodeType":"YulIdentifier","src":"2474:51:29"},"nodeType":"YulFunctionCall","src":"2474:58:29"},"nodeType":"YulExpressionStatement","src":"2474:58:29"}]},"name":"abi_decode_t_contract$_YieldDistributor_$9008_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2411:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2419:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2427:5:29","type":""}],"src":"2345:193:29"},{"body":{"nodeType":"YulBlock","src":"2606:51:29","statements":[{"nodeType":"YulAssignment","src":"2616:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2645:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2627:17:29"},"nodeType":"YulFunctionCall","src":"2627:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2616:7:29"}]}]},"name":"cleanup_t_contract$_ZKModule_$9056","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2588:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2598:7:29","type":""}],"src":"2544:113:29"},{"body":{"nodeType":"YulBlock","src":"2723:96:29","statements":[{"body":{"nodeType":"YulBlock","src":"2797:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2806:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2809:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2799:6:29"},"nodeType":"YulFunctionCall","src":"2799:12:29"},"nodeType":"YulExpressionStatement","src":"2799:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2746:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2788:5:29"}],"functionName":{"name":"cleanup_t_contract$_ZKModule_$9056","nodeType":"YulIdentifier","src":"2753:34:29"},"nodeType":"YulFunctionCall","src":"2753:41:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2743:2:29"},"nodeType":"YulFunctionCall","src":"2743:52:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2736:6:29"},"nodeType":"YulFunctionCall","src":"2736:60:29"},"nodeType":"YulIf","src":"2733:80:29"}]},"name":"validator_revert_t_contract$_ZKModule_$9056","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2716:5:29","type":""}],"src":"2663:156:29"},{"body":{"nodeType":"YulBlock","src":"2905:97:29","statements":[{"nodeType":"YulAssignment","src":"2915:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2930:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2924:5:29"},"nodeType":"YulFunctionCall","src":"2924:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2915:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2990:5:29"}],"functionName":{"name":"validator_revert_t_contract$_ZKModule_$9056","nodeType":"YulIdentifier","src":"2946:43:29"},"nodeType":"YulFunctionCall","src":"2946:50:29"},"nodeType":"YulExpressionStatement","src":"2946:50:29"}]},"name":"abi_decode_t_contract$_ZKModule_$9056_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2883:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2891:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2899:5:29","type":""}],"src":"2825:177:29"},{"body":{"nodeType":"YulBlock","src":"3262:941:29","statements":[{"body":{"nodeType":"YulBlock","src":"3309:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3311:77:29"},"nodeType":"YulFunctionCall","src":"3311:79:29"},"nodeType":"YulExpressionStatement","src":"3311:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3283:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3292:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3279:3:29"},"nodeType":"YulFunctionCall","src":"3279:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3304:3:29","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3275:3:29"},"nodeType":"YulFunctionCall","src":"3275:33:29"},"nodeType":"YulIf","src":"3272:120:29"},{"nodeType":"YulBlock","src":"3402:151:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3417:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3431:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3421:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3446:97:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3515:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3526:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3511:3:29"},"nodeType":"YulFunctionCall","src":"3511:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3535:7:29"}],"functionName":{"name":"abi_decode_t_contract$_AssetTokenizer_$8446_fromMemory","nodeType":"YulIdentifier","src":"3456:54:29"},"nodeType":"YulFunctionCall","src":"3456:87:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3446:6:29"}]}]},{"nodeType":"YulBlock","src":"3563:148:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3578:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3592:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3582:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3608:93:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3673:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3684:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3669:3:29"},"nodeType":"YulFunctionCall","src":"3669:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3693:7:29"}],"functionName":{"name":"abi_decode_t_contract$_ShareToken_$8636_fromMemory","nodeType":"YulIdentifier","src":"3618:50:29"},"nodeType":"YulFunctionCall","src":"3618:83:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3608:6:29"}]}]},{"nodeType":"YulBlock","src":"3721:154:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3736:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3750:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3740:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3766:99:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3837:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3848:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3833:3:29"},"nodeType":"YulFunctionCall","src":"3833:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3857:7:29"}],"functionName":{"name":"abi_decode_t_contract$_ComplianceModule_$8510_fromMemory","nodeType":"YulIdentifier","src":"3776:56:29"},"nodeType":"YulFunctionCall","src":"3776:89:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3766:6:29"}]}]},{"nodeType":"YulBlock","src":"3885:154:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3900:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3914:2:29","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3904:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3930:99:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4001:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4012:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3997:3:29"},"nodeType":"YulFunctionCall","src":"3997:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4021:7:29"}],"functionName":{"name":"abi_decode_t_contract$_YieldDistributor_$9008_fromMemory","nodeType":"YulIdentifier","src":"3940:56:29"},"nodeType":"YulFunctionCall","src":"3940:89:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3930:6:29"}]}]},{"nodeType":"YulBlock","src":"4049:147:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4064:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4078:3:29","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4068:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4095:91:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4169:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:29"},"nodeType":"YulFunctionCall","src":"4154:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4178:7:29"}],"functionName":{"name":"abi_decode_t_contract$_ZKModule_$9056_fromMemory","nodeType":"YulIdentifier","src":"4105:48:29"},"nodeType":"YulFunctionCall","src":"4105:81:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4095:6:29"}]}]}]},"name":"abi_decode_tuple_t_contract$_AssetTokenizer_$8446t_contract$_ShareToken_$8636t_contract$_ComplianceModule_$8510t_contract$_YieldDistributor_$9008t_contract$_ZKModule_$9056_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3200:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3211:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3223:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3231:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3239:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3247:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3255:6:29","type":""}],"src":"3008:1195:29"},{"body":{"nodeType":"YulBlock","src":"4274:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4291:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4314:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4296:17:29"},"nodeType":"YulFunctionCall","src":"4296:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4284:6:29"},"nodeType":"YulFunctionCall","src":"4284:37:29"},"nodeType":"YulExpressionStatement","src":"4284:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4262:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4269:3:29","type":""}],"src":"4209:118:29"},{"body":{"nodeType":"YulBlock","src":"4431:124:29","statements":[{"nodeType":"YulAssignment","src":"4441:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4453:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4464:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4449:3:29"},"nodeType":"YulFunctionCall","src":"4449:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4441:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4521:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4534:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4545:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4530:3:29"},"nodeType":"YulFunctionCall","src":"4530:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4477:43:29"},"nodeType":"YulFunctionCall","src":"4477:71:29"},"nodeType":"YulExpressionStatement","src":"4477:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4403:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4415:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4426:4:29","type":""}],"src":"4333:222:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_AssetTokenizer_$8446(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_AssetTokenizer_$8446(value) {\n        if iszero(eq(value, cleanup_t_contract$_AssetTokenizer_$8446(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_AssetTokenizer_$8446_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_AssetTokenizer_$8446(value)\n    }\n\n    function cleanup_t_contract$_ShareToken_$8636(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ShareToken_$8636(value) {\n        if iszero(eq(value, cleanup_t_contract$_ShareToken_$8636(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ShareToken_$8636_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ShareToken_$8636(value)\n    }\n\n    function cleanup_t_contract$_ComplianceModule_$8510(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ComplianceModule_$8510(value) {\n        if iszero(eq(value, cleanup_t_contract$_ComplianceModule_$8510(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ComplianceModule_$8510_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ComplianceModule_$8510(value)\n    }\n\n    function cleanup_t_contract$_YieldDistributor_$9008(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_YieldDistributor_$9008(value) {\n        if iszero(eq(value, cleanup_t_contract$_YieldDistributor_$9008(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_YieldDistributor_$9008_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_YieldDistributor_$9008(value)\n    }\n\n    function cleanup_t_contract$_ZKModule_$9056(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ZKModule_$9056(value) {\n        if iszero(eq(value, cleanup_t_contract$_ZKModule_$9056(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ZKModule_$9056_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ZKModule_$9056(value)\n    }\n\n    function abi_decode_tuple_t_contract$_AssetTokenizer_$8446t_contract$_ShareToken_$8636t_contract$_ComplianceModule_$8510t_contract$_YieldDistributor_$9008t_contract$_ZKModule_$9056_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_AssetTokenizer_$8446_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_ShareToken_$8636_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_ComplianceModule_$8510_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_contract$_YieldDistributor_$9008_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_contract$_ZKModule_$9056_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001d7638038062001d76833981810160405281019062000037919062000465565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a49190620004fe565b60405180910390fd5b620000be816200020f60201b60201c565b5084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050506200051b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030582620002d8565b9050919050565b60006200031982620002f8565b9050919050565b6200032b816200030c565b81146200033757600080fd5b50565b6000815190506200034b8162000320565b92915050565b60006200035e82620002f8565b9050919050565b620003708162000351565b81146200037c57600080fd5b50565b600081519050620003908162000365565b92915050565b6000620003a382620002f8565b9050919050565b620003b58162000396565b8114620003c157600080fd5b50565b600081519050620003d581620003aa565b92915050565b6000620003e882620002f8565b9050919050565b620003fa81620003db565b81146200040657600080fd5b50565b6000815190506200041a81620003ef565b92915050565b60006200042d82620002f8565b9050919050565b6200043f8162000420565b81146200044b57600080fd5b50565b6000815190506200045f8162000434565b92915050565b600080600080600060a08688031215620004845762000483620002d3565b5b600062000494888289016200033a565b9550506020620004a7888289016200037f565b9450506040620004ba88828901620003c4565b9350506060620004cd8882890162000409565b9250506080620004e0888289016200044e565b9150509295509295909350565b620004f881620002f8565b82525050565b6000602082019050620005156000830184620004ed565b92915050565b61184b806200052b6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639ee679e81161008c578063bc493fd611610066578063bc493fd6146101de578063f2fde38b146101fa578063f3f4370314610216578063fa2df41414610246576100cf565b80639ee679e814610174578063a38c2c3d14610190578063aa8d5705146101ae576100cf565b806352d91f9c146100d45780636290865d146100f25780636c9fa59e14610110578063715018a61461012e5780638c7bc6d0146101385780638da5cb5b14610156575b600080fd5b6100dc610262565b6040516100e99190610d8b565b60405180910390f35b6100fa610288565b6040516101079190610dc7565b60405180910390f35b6101186102ae565b6040516101259190610e03565b60405180910390f35b6101366102d4565b005b6101406102e8565b60405161014d9190610e3f565b60405180910390f35b61015e61030e565b60405161016b9190610e7b565b60405180910390f35b61018e60048036038101906101899190610ee0565b610337565b005b61019861055f565b6040516101a59190610f2e565b60405180910390f35b6101c860048036038101906101c39190610ee0565b610585565b6040516101d59190610f64565b60405180910390f35b6101f860048036038101906101f391906110c5565b6105a5565b005b610214600480360381019061020f919061113a565b610794565b005b610230600480360381019061022b919061113a565b61081a565b60405161023d9190611176565b60405180910390f35b610260600480360381019061025b9190610ee0565b610832565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102dc610bb9565b6102e66000610c40565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103939190610e7b565b602060405180830381865afa1580156103b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d491906111a6565b1015610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040c90611230565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161047493929190611250565b6020604051808303816000875af1158015610493573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b791906112b3565b5080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610507919061130f565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f17040713250ec5f668a1c39e7939900e78558350dbaff0ebef34268dfa8ea4ac826040516105549190611176565b60405180910390a250565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915054906101000a900460ff1681565b6105ad610bb9565b600080828060200190518101906105c49190611381565b9150915080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561064a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106419061140d565b60405180910390fd5b80600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610699919061142d565b92505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016106fd929190611461565b6020604051808303816000875af115801561071c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074091906112b3565b508173ffffffffffffffffffffffffffffffffffffffff167ffbded071a5348837e0658949d85d74b38bb1402e96ac47b17144ae3185a520bd826040516107879190611176565b60405180910390a2505050565b61079c610bb9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361080e5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108059190610e7b565b60405180910390fd5b61081781610c40565b50565b60076020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bad5b133336040518263ffffffff1660e01b815260040161088d91906114c1565b602060405180830381865afa1580156108aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ce91906112b3565b61090d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109049061153b565b60405180910390fd5b6006600082815260200190815260200160002060009054906101000a900460ff161561096e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610965906115a7565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bd2a58a282306040518363ffffffff1660e01b81526004016109cb9291906115c7565b600060405180830381600087803b1580156109e557600080fd5b505af11580156109f9573d6000803e3d6000fd5b5050505060016006600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eac8f5b8836040518263ffffffff1660e01b8152600401610a869190611176565b600060405180830381865afa158015610aa3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610acc91906117cc565b9050600081606001519050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401610b34929190611461565b600060405180830381600087803b158015610b4e57600080fd5b505af1158015610b62573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c84604051610bac9190611176565b60405180910390a2505050565b610bc1610d04565b73ffffffffffffffffffffffffffffffffffffffff16610bdf61030e565b73ffffffffffffffffffffffffffffffffffffffff1614610c3e57610c02610d04565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c359190610e7b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d51610d4c610d4784610d0c565b610d2c565b610d0c565b9050919050565b6000610d6382610d36565b9050919050565b6000610d7582610d58565b9050919050565b610d8581610d6a565b82525050565b6000602082019050610da06000830184610d7c565b92915050565b6000610db182610d58565b9050919050565b610dc181610da6565b82525050565b6000602082019050610ddc6000830184610db8565b92915050565b6000610ded82610d58565b9050919050565b610dfd81610de2565b82525050565b6000602082019050610e186000830184610df4565b92915050565b6000610e2982610d58565b9050919050565b610e3981610e1e565b82525050565b6000602082019050610e546000830184610e30565b92915050565b6000610e6582610d0c565b9050919050565b610e7581610e5a565b82525050565b6000602082019050610e906000830184610e6c565b92915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610ebd81610eaa565b8114610ec857600080fd5b50565b600081359050610eda81610eb4565b92915050565b600060208284031215610ef657610ef5610ea0565b5b6000610f0484828501610ecb565b91505092915050565b6000610f1882610d58565b9050919050565b610f2881610f0d565b82525050565b6000602082019050610f436000830184610f1f565b92915050565b60008115159050919050565b610f5e81610f49565b82525050565b6000602082019050610f796000830184610f55565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fd282610f89565b810181811067ffffffffffffffff82111715610ff157610ff0610f9a565b5b80604052505050565b6000611004610e96565b90506110108282610fc9565b919050565b600067ffffffffffffffff8211156110305761102f610f9a565b5b61103982610f89565b9050602081019050919050565b82818337600083830152505050565b600061106861106384611015565b610ffa565b90508281526020810184848401111561108457611083610f84565b5b61108f848285611046565b509392505050565b600082601f8301126110ac576110ab610f7f565b5b81356110bc848260208601611055565b91505092915050565b6000602082840312156110db576110da610ea0565b5b600082013567ffffffffffffffff8111156110f9576110f8610ea5565b5b61110584828501611097565b91505092915050565b61111781610e5a565b811461112257600080fd5b50565b6000813590506111348161110e565b92915050565b6000602082840312156111505761114f610ea0565b5b600061115e84828501611125565b91505092915050565b61117081610eaa565b82525050565b600060208201905061118b6000830184611167565b92915050565b6000815190506111a081610eb4565b92915050565b6000602082840312156111bc576111bb610ea0565b5b60006111ca84828501611191565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e742073686172657300000000000000000000000000600082015250565b600061121a6013836111d3565b9150611225826111e4565b602082019050919050565b600060208201905081810360008301526112498161120d565b9050919050565b60006060820190506112656000830186610e6c565b6112726020830185610e6c565b61127f6040830184611167565b949350505050565b61129081610f49565b811461129b57600080fd5b50565b6000815190506112ad81611287565b92915050565b6000602082840312156112c9576112c8610ea0565b5b60006112d78482850161129e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061131a82610eaa565b915061132583610eaa565b925082820190508082111561133d5761133c6112e0565b5b92915050565b600061134e82610d0c565b9050919050565b61135e81611343565b811461136957600080fd5b50565b60008151905061137b81611355565b92915050565b6000806040838503121561139857611397610ea0565b5b60006113a68582860161136c565b92505060206113b785828601611191565b9150509250929050565b7f4e6f2070656e64696e67207769746864726177616c0000000000000000000000600082015250565b60006113f76015836111d3565b9150611402826113c1565b602082019050919050565b60006020820190508181036000830152611426816113ea565b9050919050565b600061143882610eaa565b915061144383610eaa565b925082820390508181111561145b5761145a6112e0565b5b92915050565b60006040820190506114766000830185610e6c565b6114836020830184611167565b9392505050565b600082825260208201905092915050565b50565b60006114ab60008361148a565b91506114b68261149b565b600082019050919050565b60006040820190506114d66000830184610e6c565b81810360208301526114e78161149e565b905092915050565b7f4e6f7420636f6d706c69616e7400000000000000000000000000000000000000600082015250565b6000611525600d836111d3565b9150611530826114ef565b602082019050919050565b6000602082019050818103600083015261155481611518565b9050919050565b7f416c7265616479206465706f7369746564000000000000000000000000000000600082015250565b60006115916011836111d3565b915061159c8261155b565b602082019050919050565b600060208201905081810360008301526115c081611584565b9050919050565b60006040820190506115dc6000830185611167565b6115e96020830184610e6c565b9392505050565b600080fd5b600080fd5b600067ffffffffffffffff82111561161557611614610f9a565b5b61161e82610f89565b9050602081019050919050565b60005b8381101561164957808201518184015260208101905061162e565b60008484015250505050565b6000611668611663846115fa565b610ffa565b90508281526020810184848401111561168457611683610f84565b5b61168f84828561162b565b509392505050565b600082601f8301126116ac576116ab610f7f565b5b81516116bc848260208601611655565b91505092915050565b6000815190506116d48161110e565b92915050565b6000819050919050565b6116ed816116da565b81146116f857600080fd5b50565b60008151905061170a816116e4565b92915050565b600060c08284031215611726576117256115f0565b5b61173060c0610ffa565b9050600082015167ffffffffffffffff8111156117505761174f6115f5565b5b61175c84828501611697565b6000830152506020611770848285016116c5565b6020830152506040611784848285016116fb565b604083015250606061179884828501611191565b60608301525060806117ac84828501611191565b60808301525060a06117c08482850161129e565b60a08301525092915050565b6000602082840312156117e2576117e1610ea0565b5b600082015167ffffffffffffffff811115611800576117ff610ea5565b5b61180c84828501611710565b9150509291505056fea2646970667358221220402ee9f198bd9d12bb83a00a2382bdc35ec257792515b990f362df4a4caae93864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1D76 CODESIZE SUB DUP1 PUSH3 0x1D76 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x465 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x4FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0x20F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP PUSH3 0x51B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x305 DUP3 PUSH3 0x2D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x319 DUP3 PUSH3 0x2F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x32B DUP2 PUSH3 0x30C JUMP JUMPDEST DUP2 EQ PUSH3 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x34B DUP2 PUSH3 0x320 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x35E DUP3 PUSH3 0x2F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x370 DUP2 PUSH3 0x351 JUMP JUMPDEST DUP2 EQ PUSH3 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x390 DUP2 PUSH3 0x365 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A3 DUP3 PUSH3 0x2F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3B5 DUP2 PUSH3 0x396 JUMP JUMPDEST DUP2 EQ PUSH3 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3D5 DUP2 PUSH3 0x3AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3E8 DUP3 PUSH3 0x2F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3FA DUP2 PUSH3 0x3DB JUMP JUMPDEST DUP2 EQ PUSH3 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x41A DUP2 PUSH3 0x3EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x42D DUP3 PUSH3 0x2F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x43F DUP2 PUSH3 0x420 JUMP JUMPDEST DUP2 EQ PUSH3 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x45F DUP2 PUSH3 0x434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x484 JUMPI PUSH3 0x483 PUSH3 0x2D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x494 DUP9 DUP3 DUP10 ADD PUSH3 0x33A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x4A7 DUP9 DUP3 DUP10 ADD PUSH3 0x37F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x4BA DUP9 DUP3 DUP10 ADD PUSH3 0x3C4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x4CD DUP9 DUP3 DUP10 ADD PUSH3 0x409 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x4E0 DUP9 DUP3 DUP10 ADD PUSH3 0x44E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH3 0x4F8 DUP2 PUSH3 0x2F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x515 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x4ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x184B DUP1 PUSH3 0x52B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9EE679E8 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBC493FD6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBC493FD6 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xF3F43703 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xFA2DF414 EQ PUSH2 0x246 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x9EE679E8 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xA38C2C3D EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xAA8D5705 EQ PUSH2 0x1AE JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x52D91F9C EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6290865D EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x6C9FA59E EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x8C7BC6D0 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x156 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x2D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x140 PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x198 PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2DC PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x0 PUSH2 0xC40 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST LT ISZERO PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP1 PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x474 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x493 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x12B3 JUMP JUMPDEST POP DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17040713250EC5F668A1C39E7939900E78558350DBAFF0EBEF34268DFA8EA4AC DUP3 PUSH1 0x40 MLOAD PUSH2 0x554 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x5AD PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x641 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x699 SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP3 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x71C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x12B3 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFBDED071A5348837E0658949D85D74B38BB1402E96AC47B17144AE3185A520BD DUP3 PUSH1 0x40 MLOAD PUSH2 0x787 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x79C PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x80E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x805 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x817 DUP2 PUSH2 0xC40 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBAD5B133 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88D SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CE SWAP2 SWAP1 PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x904 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x96E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x965 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBD2A58A2 DUP3 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CB SWAP3 SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xEAC8F5B8 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA86 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xACC SWAP2 SWAP1 PUSH2 0x17CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB34 SWAP3 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C DUP5 PUSH1 0x40 MLOAD PUSH2 0xBAC SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xBC1 PUSH2 0xD04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBDF PUSH2 0x30E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC3E JUMPI PUSH2 0xC02 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC35 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD51 PUSH2 0xD4C PUSH2 0xD47 DUP5 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xD2C JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD63 DUP3 PUSH2 0xD36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD75 DUP3 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD85 DUP2 PUSH2 0xD6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB1 DUP3 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC1 DUP2 PUSH2 0xDA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDDC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDED DUP3 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDFD DUP2 PUSH2 0xDE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE29 DUP3 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE39 DUP2 PUSH2 0xE1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE54 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE65 DUP3 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE75 DUP2 PUSH2 0xE5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE90 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEBD DUP2 PUSH2 0xEAA JUMP JUMPDEST DUP2 EQ PUSH2 0xEC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEDA DUP2 PUSH2 0xEB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF6 JUMPI PUSH2 0xEF5 PUSH2 0xEA0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF04 DUP5 DUP3 DUP6 ADD PUSH2 0xECB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF18 DUP3 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF28 DUP2 PUSH2 0xF0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF43 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5E DUP2 PUSH2 0xF49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF79 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xFD2 DUP3 PUSH2 0xF89 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xFF1 JUMPI PUSH2 0xFF0 PUSH2 0xF9A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1004 PUSH2 0xE96 JUMP JUMPDEST SWAP1 POP PUSH2 0x1010 DUP3 DUP3 PUSH2 0xFC9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1030 JUMPI PUSH2 0x102F PUSH2 0xF9A JUMP JUMPDEST JUMPDEST PUSH2 0x1039 DUP3 PUSH2 0xF89 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1068 PUSH2 0x1063 DUP5 PUSH2 0x1015 JUMP JUMPDEST PUSH2 0xFFA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1084 JUMPI PUSH2 0x1083 PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH2 0x108F DUP5 DUP3 DUP6 PUSH2 0x1046 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10AC JUMPI PUSH2 0x10AB PUSH2 0xF7F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10DB JUMPI PUSH2 0x10DA PUSH2 0xEA0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10F9 JUMPI PUSH2 0x10F8 PUSH2 0xEA5 JUMP JUMPDEST JUMPDEST PUSH2 0x1105 DUP5 DUP3 DUP6 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1117 DUP2 PUSH2 0xE5A JUMP JUMPDEST DUP2 EQ PUSH2 0x1122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1134 DUP2 PUSH2 0x110E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1150 JUMPI PUSH2 0x114F PUSH2 0xEA0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x115E DUP5 DUP3 DUP6 ADD PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1170 DUP2 PUSH2 0xEAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x118B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1167 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11A0 DUP2 PUSH2 0xEB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11BC JUMPI PUSH2 0x11BB PUSH2 0xEA0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11CA DUP5 DUP3 DUP6 ADD PUSH2 0x1191 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742073686172657300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121A PUSH1 0x13 DUP4 PUSH2 0x11D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1225 DUP3 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1249 DUP2 PUSH2 0x120D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1265 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0x1272 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0x127F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1167 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1290 DUP2 PUSH2 0xF49 JUMP JUMPDEST DUP2 EQ PUSH2 0x129B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12AD DUP2 PUSH2 0x1287 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C9 JUMPI PUSH2 0x12C8 PUSH2 0xEA0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12D7 DUP5 DUP3 DUP6 ADD PUSH2 0x129E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x131A DUP3 PUSH2 0xEAA JUMP JUMPDEST SWAP2 POP PUSH2 0x1325 DUP4 PUSH2 0xEAA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x133D JUMPI PUSH2 0x133C PUSH2 0x12E0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134E DUP3 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135E DUP2 PUSH2 0x1343 JUMP JUMPDEST DUP2 EQ PUSH2 0x1369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x137B DUP2 PUSH2 0x1355 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1398 JUMPI PUSH2 0x1397 PUSH2 0xEA0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13A6 DUP6 DUP3 DUP7 ADD PUSH2 0x136C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13B7 DUP6 DUP3 DUP7 ADD PUSH2 0x1191 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2070656E64696E67207769746864726177616C0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F7 PUSH1 0x15 DUP4 PUSH2 0x11D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1402 DUP3 PUSH2 0x13C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1426 DUP2 PUSH2 0x13EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1438 DUP3 PUSH2 0xEAA JUMP JUMPDEST SWAP2 POP PUSH2 0x1443 DUP4 PUSH2 0xEAA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x145B JUMPI PUSH2 0x145A PUSH2 0x12E0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1476 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0x1483 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1167 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AB PUSH1 0x0 DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x14B6 DUP3 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14D6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x14E7 DUP2 PUSH2 0x149E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420636F6D706C69616E7400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1525 PUSH1 0xD DUP4 PUSH2 0x11D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1530 DUP3 PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1554 DUP2 PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479206465706F7369746564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1591 PUSH1 0x11 DUP4 PUSH2 0x11D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x159C DUP3 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15C0 DUP2 PUSH2 0x1584 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15DC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x15E9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1615 JUMPI PUSH2 0x1614 PUSH2 0xF9A JUMP JUMPDEST JUMPDEST PUSH2 0x161E DUP3 PUSH2 0xF89 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1649 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x162E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1668 PUSH2 0x1663 DUP5 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0xFFA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1684 JUMPI PUSH2 0x1683 PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH2 0x168F DUP5 DUP3 DUP6 PUSH2 0x162B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16AC JUMPI PUSH2 0x16AB PUSH2 0xF7F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x16BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1655 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16D4 DUP2 PUSH2 0x110E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16ED DUP2 PUSH2 0x16DA JUMP JUMPDEST DUP2 EQ PUSH2 0x16F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x170A DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1726 JUMPI PUSH2 0x1725 PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST PUSH2 0x1730 PUSH1 0xC0 PUSH2 0xFFA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1750 JUMPI PUSH2 0x174F PUSH2 0x15F5 JUMP JUMPDEST JUMPDEST PUSH2 0x175C DUP5 DUP3 DUP6 ADD PUSH2 0x1697 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1770 DUP5 DUP3 DUP6 ADD PUSH2 0x16C5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1784 DUP5 DUP3 DUP6 ADD PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1798 DUP5 DUP3 DUP6 ADD PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x17AC DUP5 DUP3 DUP6 ADD PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x17C0 DUP5 DUP3 DUP6 ADD PUSH2 0x129E JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E2 JUMPI PUSH2 0x17E1 PUSH2 0xEA0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1800 JUMPI PUSH2 0x17FF PUSH2 0xEA5 JUMP JUMPDEST JUMPDEST PUSH2 0x180C DUP5 DUP3 DUP6 ADD PUSH2 0x1710 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x2E 0xE9 CALL SWAP9 0xBD SWAP14 SLT 0xBB DUP4 LOG0 EXP 0x23 DUP3 0xBD 0xC3 0x5E 0xC2 JUMPI PUSH26 0x2515B990F362DF4A4CAAE93864736F6C63430008140033000000 ","sourceMap":"261:2362:26:-:0;;;803:413;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1011:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1050:15:26::1;1033:14;;:32;;;;;;;;;;;;;;;;;;1088:11;1075:10;;:24;;;;;;;;;;;;;;;;;;1122:11;1109:10;;:24;;;;;;;;;;;;;;;;;;1162:17;1143:16;;:36;;;;;;;;;;;;;;;;;;1200:9;1189:8;;:20;;;;;;;;;;;;;;;;;;803:413:::0;;;;;261:2362;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:29:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:119::-;628:7;657:24;675:5;657:24;:::i;:::-;646:35;;568:119;;;:::o;693:168::-;789:47;830:5;789:47;:::i;:::-;782:5;779:58;769:86;;851:1;848;841:12;769:86;693:168;:::o;867:189::-;947:5;978:6;972:13;963:22;;994:56;1044:5;994:56;:::i;:::-;867:189;;;;:::o;1062:115::-;1118:7;1147:24;1165:5;1147:24;:::i;:::-;1136:35;;1062:115;;;:::o;1183:160::-;1275:43;1312:5;1275:43;:::i;:::-;1268:5;1265:54;1255:82;;1333:1;1330;1323:12;1255:82;1183:160;:::o;1349:181::-;1425:5;1456:6;1450:13;1441:22;;1472:52;1518:5;1472:52;:::i;:::-;1349:181;;;;:::o;1536:121::-;1598:7;1627:24;1645:5;1627:24;:::i;:::-;1616:35;;1536:121;;;:::o;1663:172::-;1761:49;1804:5;1761:49;:::i;:::-;1754:5;1751:60;1741:88;;1825:1;1822;1815:12;1741:88;1663:172;:::o;1841:193::-;1923:5;1954:6;1948:13;1939:22;;1970:58;2022:5;1970:58;:::i;:::-;1841:193;;;;:::o;2040:121::-;2102:7;2131:24;2149:5;2131:24;:::i;:::-;2120:35;;2040:121;;;:::o;2167:172::-;2265:49;2308:5;2265:49;:::i;:::-;2258:5;2255:60;2245:88;;2329:1;2326;2319:12;2245:88;2167:172;:::o;2345:193::-;2427:5;2458:6;2452:13;2443:22;;2474:58;2526:5;2474:58;:::i;:::-;2345:193;;;;:::o;2544:113::-;2598:7;2627:24;2645:5;2627:24;:::i;:::-;2616:35;;2544:113;;;:::o;2663:156::-;2753:41;2788:5;2753:41;:::i;:::-;2746:5;2743:52;2733:80;;2809:1;2806;2799:12;2733:80;2663:156;:::o;2825:177::-;2899:5;2930:6;2924:13;2915:22;;2946:50;2990:5;2946:50;:::i;:::-;2825:177;;;;:::o;3008:1195::-;3223:6;3231;3239;3247;3255;3304:3;3292:9;3283:7;3279:23;3275:33;3272:120;;;3311:79;;:::i;:::-;3272:120;3431:1;3456:87;3535:7;3526:6;3515:9;3511:22;3456:87;:::i;:::-;3446:97;;3402:151;3592:2;3618:83;3693:7;3684:6;3673:9;3669:22;3618:83;:::i;:::-;3608:93;;3563:148;3750:2;3776:89;3857:7;3848:6;3837:9;3833:22;3776:89;:::i;:::-;3766:99;;3721:154;3914:2;3940:89;4021:7;4012:6;4001:9;3997:22;3940:89;:::i;:::-;3930:99;;3885:154;4078:3;4105:81;4178:7;4169:6;4158:9;4154:22;4105:81;:::i;:::-;4095:91;;4049:147;3008:1195;;;;;;;;:::o;4209:118::-;4296:24;4314:5;4296:24;:::i;:::-;4291:3;4284:37;4209:118;;:::o;4333:222::-;4426:4;4464:2;4453:9;4449:18;4441:26;;4477:71;4545:1;4534:9;4530:17;4521:6;4477:71;:::i;:::-;4333:222;;;;:::o;261:2362:26:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":3001,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1130":{"entryPoint":3332,"id":1130,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":3136,"id":146,"parameterSlots":1,"returnSlots":0},"@assetTokenizer_8649":{"entryPoint":610,"id":8649,"parameterSlots":0,"returnSlots":0},"@compliance_8655":{"entryPoint":648,"id":8655,"parameterSlots":0,"returnSlots":0},"@depositAsset_8799":{"entryPoint":2098,"id":8799,"parameterSlots":1,"returnSlots":0},"@depositedAssets_8665":{"entryPoint":1413,"id":8665,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":782,"id":67,"parameterSlots":0,"returnSlots":1},"@pendingWithdrawals_8669":{"entryPoint":2074,"id":8669,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":724,"id":98,"parameterSlots":0,"returnSlots":0},"@requestWithdrawal_8841":{"entryPoint":823,"id":8841,"parameterSlots":1,"returnSlots":0},"@settleWithdrawal_8890":{"entryPoint":1445,"id":8890,"parameterSlots":1,"returnSlots":0},"@shareToken_8652":{"entryPoint":686,"id":8652,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1940,"id":126,"parameterSlots":1,"returnSlots":0},"@yieldDistributor_8658":{"entryPoint":1375,"id":8658,"parameterSlots":0,"returnSlots":0},"@zkModule_8661":{"entryPoint":744,"id":8661,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":4181,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":5717,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":4389,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":5829,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable_fromMemory":{"entryPoint":4972,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":4766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":5883,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":4247,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":5783,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_Asset_$8335_memory_ptr_fromMemory":{"entryPoint":5904,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3787,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":4497,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4410,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256_fromMemory":{"entryPoint":4993,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4787,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":4293,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_Asset_$8335_memory_ptr_fromMemory":{"entryPoint":6092,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3808,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":4518,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3692,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3925,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_AssetTokenizer_$8446_to_t_address_fromStack":{"entryPoint":3452,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ComplianceModule_$8510_to_t_address_fromStack":{"entryPoint":3512,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ShareToken_$8636_to_t_address_fromStack":{"entryPoint":3572,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_YieldDistributor_$9008_to_t_address_fromStack":{"entryPoint":3871,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ZKModule_$9056_to_t_address_fromStack":{"entryPoint":3632,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665_to_t_string_memory_ptr_fromStack":{"entryPoint":4621,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_17419afcab1c167f08f938e3106ddedd944771ad063fce021c6a28601eb524bb_to_t_string_memory_ptr_fromStack":{"entryPoint":5508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bbb560f347d1c9050f16c9293282144e9b7319b314930adfa2ec3268995e3c4f_to_t_string_memory_ptr_fromStack":{"entryPoint":5400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack":{"entryPoint":5278,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40_to_t_string_memory_ptr_fromStack":{"entryPoint":5098,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4455,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":4688,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":5217,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_AssetTokenizer_$8446__to_t_address__fromStack_reversed":{"entryPoint":3467,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ComplianceModule_$8510__to_t_address__fromStack_reversed":{"entryPoint":3527,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ShareToken_$8636__to_t_address__fromStack_reversed":{"entryPoint":3587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_YieldDistributor_$9008__to_t_address__fromStack_reversed":{"entryPoint":3886,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ZKModule_$9056__to_t_address__fromStack_reversed":{"entryPoint":3647,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4656,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_17419afcab1c167f08f938e3106ddedd944771ad063fce021c6a28601eb524bb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5543,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bbb560f347d1c9050f16c9293282144e9b7319b314930adfa2ec3268995e3c4f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5133,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4470,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":5575,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":4090,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3734,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":4117,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":5626,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":5258,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4563,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4879,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5165,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3674,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":4931,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3913,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5850,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3340,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3754,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_AssetTokenizer_$8446_to_t_address":{"entryPoint":3434,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ComplianceModule_$8510_to_t_address":{"entryPoint":3494,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ShareToken_$8636_to_t_address":{"entryPoint":3554,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_YieldDistributor_$9008_to_t_address":{"entryPoint":3853,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ZKModule_$9056_to_t_address":{"entryPoint":3614,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":3416,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":3382,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":4166,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5675,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":4041,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":3372,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4832,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3994,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3967,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":5616,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":5621,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":3972,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3749,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3744,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3977,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665":{"entryPoint":4580,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_17419afcab1c167f08f938e3106ddedd944771ad063fce021c6a28601eb524bb":{"entryPoint":5467,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bbb560f347d1c9050f16c9293282144e9b7319b314930adfa2ec3268995e3c4f":{"entryPoint":5359,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":5275,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40":{"entryPoint":5057,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4366,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":4949,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":4743,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":5860,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3764,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22331:29","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:29","statements":[{"nodeType":"YulAssignment","src":"62:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:29"},"nodeType":"YulFunctionCall","src":"73:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:29","type":""}],"src":"7:126:29"},{"body":{"nodeType":"YulBlock","src":"171:28:29","statements":[{"nodeType":"YulAssignment","src":"181:12:29","value":{"name":"value","nodeType":"YulIdentifier","src":"188:5:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"181:3:29"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"157:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"167:3:29","type":""}],"src":"139:60:29"},{"body":{"nodeType":"YulBlock","src":"265:82:29","statements":[{"nodeType":"YulAssignment","src":"275:66:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"333:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"315:17:29"},"nodeType":"YulFunctionCall","src":"315:24:29"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"306:8:29"},"nodeType":"YulFunctionCall","src":"306:34:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"288:17:29"},"nodeType":"YulFunctionCall","src":"288:53:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"275:9:29"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"245:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"255:9:29","type":""}],"src":"205:142:29"},{"body":{"nodeType":"YulBlock","src":"413:66:29","statements":[{"nodeType":"YulAssignment","src":"423:50:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"467:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"436:30:29"},"nodeType":"YulFunctionCall","src":"436:37:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"423:9:29"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"393:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"403:9:29","type":""}],"src":"353:126:29"},{"body":{"nodeType":"YulBlock","src":"568:66:29","statements":[{"nodeType":"YulAssignment","src":"578:50:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"622:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"591:30:29"},"nodeType":"YulFunctionCall","src":"591:37:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"578:9:29"}]}]},"name":"convert_t_contract$_AssetTokenizer_$8446_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"548:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"558:9:29","type":""}],"src":"485:149:29"},{"body":{"nodeType":"YulBlock","src":"728:89:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"745:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"804:5:29"}],"functionName":{"name":"convert_t_contract$_AssetTokenizer_$8446_to_t_address","nodeType":"YulIdentifier","src":"750:53:29"},"nodeType":"YulFunctionCall","src":"750:60:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"738:6:29"},"nodeType":"YulFunctionCall","src":"738:73:29"},"nodeType":"YulExpressionStatement","src":"738:73:29"}]},"name":"abi_encode_t_contract$_AssetTokenizer_$8446_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"716:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"723:3:29","type":""}],"src":"640:177:29"},{"body":{"nodeType":"YulBlock","src":"944:147:29","statements":[{"nodeType":"YulAssignment","src":"954:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"966:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"977:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"962:3:29"},"nodeType":"YulFunctionCall","src":"962:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"954:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1057:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1070:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1081:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1066:3:29"},"nodeType":"YulFunctionCall","src":"1066:17:29"}],"functionName":{"name":"abi_encode_t_contract$_AssetTokenizer_$8446_to_t_address_fromStack","nodeType":"YulIdentifier","src":"990:66:29"},"nodeType":"YulFunctionCall","src":"990:94:29"},"nodeType":"YulExpressionStatement","src":"990:94:29"}]},"name":"abi_encode_tuple_t_contract$_AssetTokenizer_$8446__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"916:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"928:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"939:4:29","type":""}],"src":"823:268:29"},{"body":{"nodeType":"YulBlock","src":"1182:66:29","statements":[{"nodeType":"YulAssignment","src":"1192:50:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1236:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"1205:30:29"},"nodeType":"YulFunctionCall","src":"1205:37:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1192:9:29"}]}]},"name":"convert_t_contract$_ComplianceModule_$8510_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1162:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1172:9:29","type":""}],"src":"1097:151:29"},{"body":{"nodeType":"YulBlock","src":"1344:91:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1361:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1422:5:29"}],"functionName":{"name":"convert_t_contract$_ComplianceModule_$8510_to_t_address","nodeType":"YulIdentifier","src":"1366:55:29"},"nodeType":"YulFunctionCall","src":"1366:62:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1354:6:29"},"nodeType":"YulFunctionCall","src":"1354:75:29"},"nodeType":"YulExpressionStatement","src":"1354:75:29"}]},"name":"abi_encode_t_contract$_ComplianceModule_$8510_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1332:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1339:3:29","type":""}],"src":"1254:181:29"},{"body":{"nodeType":"YulBlock","src":"1564:149:29","statements":[{"nodeType":"YulAssignment","src":"1574:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1586:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1597:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:29"},"nodeType":"YulFunctionCall","src":"1582:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1574:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1679:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1692:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1703:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1688:3:29"},"nodeType":"YulFunctionCall","src":"1688:17:29"}],"functionName":{"name":"abi_encode_t_contract$_ComplianceModule_$8510_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1610:68:29"},"nodeType":"YulFunctionCall","src":"1610:96:29"},"nodeType":"YulExpressionStatement","src":"1610:96:29"}]},"name":"abi_encode_tuple_t_contract$_ComplianceModule_$8510__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1536:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1548:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1559:4:29","type":""}],"src":"1441:272:29"},{"body":{"nodeType":"YulBlock","src":"1798:66:29","statements":[{"nodeType":"YulAssignment","src":"1808:50:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1852:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"1821:30:29"},"nodeType":"YulFunctionCall","src":"1821:37:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1808:9:29"}]}]},"name":"convert_t_contract$_ShareToken_$8636_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1778:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1788:9:29","type":""}],"src":"1719:145:29"},{"body":{"nodeType":"YulBlock","src":"1954:85:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1971:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2026:5:29"}],"functionName":{"name":"convert_t_contract$_ShareToken_$8636_to_t_address","nodeType":"YulIdentifier","src":"1976:49:29"},"nodeType":"YulFunctionCall","src":"1976:56:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1964:6:29"},"nodeType":"YulFunctionCall","src":"1964:69:29"},"nodeType":"YulExpressionStatement","src":"1964:69:29"}]},"name":"abi_encode_t_contract$_ShareToken_$8636_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1942:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1949:3:29","type":""}],"src":"1870:169:29"},{"body":{"nodeType":"YulBlock","src":"2162:143:29","statements":[{"nodeType":"YulAssignment","src":"2172:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2184:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2195:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2180:3:29"},"nodeType":"YulFunctionCall","src":"2180:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2172:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2271:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2284:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2295:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2280:3:29"},"nodeType":"YulFunctionCall","src":"2280:17:29"}],"functionName":{"name":"abi_encode_t_contract$_ShareToken_$8636_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2208:62:29"},"nodeType":"YulFunctionCall","src":"2208:90:29"},"nodeType":"YulExpressionStatement","src":"2208:90:29"}]},"name":"abi_encode_tuple_t_contract$_ShareToken_$8636__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2134:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2146:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2157:4:29","type":""}],"src":"2045:260:29"},{"body":{"nodeType":"YulBlock","src":"2388:66:29","statements":[{"nodeType":"YulAssignment","src":"2398:50:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2442:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"2411:30:29"},"nodeType":"YulFunctionCall","src":"2411:37:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2398:9:29"}]}]},"name":"convert_t_contract$_ZKModule_$9056_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2368:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2378:9:29","type":""}],"src":"2311:143:29"},{"body":{"nodeType":"YulBlock","src":"2542:83:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2559:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2612:5:29"}],"functionName":{"name":"convert_t_contract$_ZKModule_$9056_to_t_address","nodeType":"YulIdentifier","src":"2564:47:29"},"nodeType":"YulFunctionCall","src":"2564:54:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2552:6:29"},"nodeType":"YulFunctionCall","src":"2552:67:29"},"nodeType":"YulExpressionStatement","src":"2552:67:29"}]},"name":"abi_encode_t_contract$_ZKModule_$9056_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2530:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2537:3:29","type":""}],"src":"2460:165:29"},{"body":{"nodeType":"YulBlock","src":"2746:141:29","statements":[{"nodeType":"YulAssignment","src":"2756:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2768:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2779:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2764:3:29"},"nodeType":"YulFunctionCall","src":"2764:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2756:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2853:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2866:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2877:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2862:3:29"},"nodeType":"YulFunctionCall","src":"2862:17:29"}],"functionName":{"name":"abi_encode_t_contract$_ZKModule_$9056_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2792:60:29"},"nodeType":"YulFunctionCall","src":"2792:88:29"},"nodeType":"YulExpressionStatement","src":"2792:88:29"}]},"name":"abi_encode_tuple_t_contract$_ZKModule_$9056__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2718:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2730:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2741:4:29","type":""}],"src":"2631:256:29"},{"body":{"nodeType":"YulBlock","src":"2938:51:29","statements":[{"nodeType":"YulAssignment","src":"2948:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2977:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2959:17:29"},"nodeType":"YulFunctionCall","src":"2959:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2948:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2920:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2930:7:29","type":""}],"src":"2893:96:29"},{"body":{"nodeType":"YulBlock","src":"3060:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3077:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3100:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3082:17:29"},"nodeType":"YulFunctionCall","src":"3082:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3070:6:29"},"nodeType":"YulFunctionCall","src":"3070:37:29"},"nodeType":"YulExpressionStatement","src":"3070:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3048:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3055:3:29","type":""}],"src":"2995:118:29"},{"body":{"nodeType":"YulBlock","src":"3217:124:29","statements":[{"nodeType":"YulAssignment","src":"3227:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3239:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3250:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3235:3:29"},"nodeType":"YulFunctionCall","src":"3235:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3227:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3307:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3320:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3331:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3316:3:29"},"nodeType":"YulFunctionCall","src":"3316:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3263:43:29"},"nodeType":"YulFunctionCall","src":"3263:71:29"},"nodeType":"YulExpressionStatement","src":"3263:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3189:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3201:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3212:4:29","type":""}],"src":"3119:222:29"},{"body":{"nodeType":"YulBlock","src":"3387:35:29","statements":[{"nodeType":"YulAssignment","src":"3397:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3413:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3407:5:29"},"nodeType":"YulFunctionCall","src":"3407:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3397:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3380:6:29","type":""}],"src":"3347:75:29"},{"body":{"nodeType":"YulBlock","src":"3517:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3534:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3537:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3527:6:29"},"nodeType":"YulFunctionCall","src":"3527:12:29"},"nodeType":"YulExpressionStatement","src":"3527:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3428:117:29"},{"body":{"nodeType":"YulBlock","src":"3640:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3657:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3660:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3650:6:29"},"nodeType":"YulFunctionCall","src":"3650:12:29"},"nodeType":"YulExpressionStatement","src":"3650:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"3551:117:29"},{"body":{"nodeType":"YulBlock","src":"3719:32:29","statements":[{"nodeType":"YulAssignment","src":"3729:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3740:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3729:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3701:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3711:7:29","type":""}],"src":"3674:77:29"},{"body":{"nodeType":"YulBlock","src":"3800:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"3857:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3866:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3869:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3859:6:29"},"nodeType":"YulFunctionCall","src":"3859:12:29"},"nodeType":"YulExpressionStatement","src":"3859:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3823:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3848:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3830:17:29"},"nodeType":"YulFunctionCall","src":"3830:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3820:2:29"},"nodeType":"YulFunctionCall","src":"3820:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3813:6:29"},"nodeType":"YulFunctionCall","src":"3813:43:29"},"nodeType":"YulIf","src":"3810:63:29"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3793:5:29","type":""}],"src":"3757:122:29"},{"body":{"nodeType":"YulBlock","src":"3937:87:29","statements":[{"nodeType":"YulAssignment","src":"3947:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3969:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3956:12:29"},"nodeType":"YulFunctionCall","src":"3956:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3947:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4012:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3985:26:29"},"nodeType":"YulFunctionCall","src":"3985:33:29"},"nodeType":"YulExpressionStatement","src":"3985:33:29"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3915:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3923:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3931:5:29","type":""}],"src":"3885:139:29"},{"body":{"nodeType":"YulBlock","src":"4096:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"4142:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4144:77:29"},"nodeType":"YulFunctionCall","src":"4144:79:29"},"nodeType":"YulExpressionStatement","src":"4144:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4117:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4126:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4113:3:29"},"nodeType":"YulFunctionCall","src":"4113:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4138:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4109:3:29"},"nodeType":"YulFunctionCall","src":"4109:32:29"},"nodeType":"YulIf","src":"4106:119:29"},{"nodeType":"YulBlock","src":"4235:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4250:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4264:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4254:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4279:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4314:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4325:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4310:3:29"},"nodeType":"YulFunctionCall","src":"4310:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4334:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4289:20:29"},"nodeType":"YulFunctionCall","src":"4289:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4279:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4066:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4077:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4089:6:29","type":""}],"src":"4030:329:29"},{"body":{"nodeType":"YulBlock","src":"4450:66:29","statements":[{"nodeType":"YulAssignment","src":"4460:50:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4504:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"4473:30:29"},"nodeType":"YulFunctionCall","src":"4473:37:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4460:9:29"}]}]},"name":"convert_t_contract$_YieldDistributor_$9008_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4430:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4440:9:29","type":""}],"src":"4365:151:29"},{"body":{"nodeType":"YulBlock","src":"4612:91:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4629:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4690:5:29"}],"functionName":{"name":"convert_t_contract$_YieldDistributor_$9008_to_t_address","nodeType":"YulIdentifier","src":"4634:55:29"},"nodeType":"YulFunctionCall","src":"4634:62:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4622:6:29"},"nodeType":"YulFunctionCall","src":"4622:75:29"},"nodeType":"YulExpressionStatement","src":"4622:75:29"}]},"name":"abi_encode_t_contract$_YieldDistributor_$9008_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4600:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4607:3:29","type":""}],"src":"4522:181:29"},{"body":{"nodeType":"YulBlock","src":"4832:149:29","statements":[{"nodeType":"YulAssignment","src":"4842:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4854:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4865:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4850:3:29"},"nodeType":"YulFunctionCall","src":"4850:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4842:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4947:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4960:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4971:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4956:3:29"},"nodeType":"YulFunctionCall","src":"4956:17:29"}],"functionName":{"name":"abi_encode_t_contract$_YieldDistributor_$9008_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4878:68:29"},"nodeType":"YulFunctionCall","src":"4878:96:29"},"nodeType":"YulExpressionStatement","src":"4878:96:29"}]},"name":"abi_encode_tuple_t_contract$_YieldDistributor_$9008__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4804:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4816:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4827:4:29","type":""}],"src":"4709:272:29"},{"body":{"nodeType":"YulBlock","src":"5029:48:29","statements":[{"nodeType":"YulAssignment","src":"5039:32:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5064:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5057:6:29"},"nodeType":"YulFunctionCall","src":"5057:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5050:6:29"},"nodeType":"YulFunctionCall","src":"5050:21:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5039:7:29"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5011:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5021:7:29","type":""}],"src":"4987:90:29"},{"body":{"nodeType":"YulBlock","src":"5142:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5159:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5179:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5164:14:29"},"nodeType":"YulFunctionCall","src":"5164:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5152:6:29"},"nodeType":"YulFunctionCall","src":"5152:34:29"},"nodeType":"YulExpressionStatement","src":"5152:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5130:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5137:3:29","type":""}],"src":"5083:109:29"},{"body":{"nodeType":"YulBlock","src":"5290:118:29","statements":[{"nodeType":"YulAssignment","src":"5300:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5312:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5323:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5308:3:29"},"nodeType":"YulFunctionCall","src":"5308:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5300:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5374:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5387:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5398:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5383:3:29"},"nodeType":"YulFunctionCall","src":"5383:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5336:37:29"},"nodeType":"YulFunctionCall","src":"5336:65:29"},"nodeType":"YulExpressionStatement","src":"5336:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5262:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5274:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5285:4:29","type":""}],"src":"5198:210:29"},{"body":{"nodeType":"YulBlock","src":"5503:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5520:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5523:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5513:6:29"},"nodeType":"YulFunctionCall","src":"5513:12:29"},"nodeType":"YulExpressionStatement","src":"5513:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5414:117:29"},{"body":{"nodeType":"YulBlock","src":"5626:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5643:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5646:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5636:6:29"},"nodeType":"YulFunctionCall","src":"5636:12:29"},"nodeType":"YulExpressionStatement","src":"5636:12:29"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"5537:117:29"},{"body":{"nodeType":"YulBlock","src":"5708:54:29","statements":[{"nodeType":"YulAssignment","src":"5718:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5736:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"5743:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5732:3:29"},"nodeType":"YulFunctionCall","src":"5732:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5752:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5748:3:29"},"nodeType":"YulFunctionCall","src":"5748:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5728:3:29"},"nodeType":"YulFunctionCall","src":"5728:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5718:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5691:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5701:6:29","type":""}],"src":"5660:102:29"},{"body":{"nodeType":"YulBlock","src":"5796:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5813:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5816:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5806:6:29"},"nodeType":"YulFunctionCall","src":"5806:88:29"},"nodeType":"YulExpressionStatement","src":"5806:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5910:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5913:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5903:6:29"},"nodeType":"YulFunctionCall","src":"5903:15:29"},"nodeType":"YulExpressionStatement","src":"5903:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5934:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5937:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5927:6:29"},"nodeType":"YulFunctionCall","src":"5927:15:29"},"nodeType":"YulExpressionStatement","src":"5927:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5768:180:29"},{"body":{"nodeType":"YulBlock","src":"5997:238:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6007:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6029:6:29"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6059:4:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6037:21:29"},"nodeType":"YulFunctionCall","src":"6037:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6025:3:29"},"nodeType":"YulFunctionCall","src":"6025:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6011:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6176:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6178:16:29"},"nodeType":"YulFunctionCall","src":"6178:18:29"},"nodeType":"YulExpressionStatement","src":"6178:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6119:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"6131:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6116:2:29"},"nodeType":"YulFunctionCall","src":"6116:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6155:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6167:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6152:2:29"},"nodeType":"YulFunctionCall","src":"6152:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6113:2:29"},"nodeType":"YulFunctionCall","src":"6113:62:29"},"nodeType":"YulIf","src":"6110:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6214:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6218:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6207:6:29"},"nodeType":"YulFunctionCall","src":"6207:22:29"},"nodeType":"YulExpressionStatement","src":"6207:22:29"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5983:6:29","type":""},{"name":"size","nodeType":"YulTypedName","src":"5991:4:29","type":""}],"src":"5954:281:29"},{"body":{"nodeType":"YulBlock","src":"6282:88:29","statements":[{"nodeType":"YulAssignment","src":"6292:30:29","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6302:18:29"},"nodeType":"YulFunctionCall","src":"6302:20:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6292:6:29"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6351:6:29"},{"name":"size","nodeType":"YulIdentifier","src":"6359:4:29"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6331:19:29"},"nodeType":"YulFunctionCall","src":"6331:33:29"},"nodeType":"YulExpressionStatement","src":"6331:33:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6266:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6275:6:29","type":""}],"src":"6241:129:29"},{"body":{"nodeType":"YulBlock","src":"6442:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"6547:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6549:16:29"},"nodeType":"YulFunctionCall","src":"6549:18:29"},"nodeType":"YulExpressionStatement","src":"6549:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6519:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6527:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6516:2:29"},"nodeType":"YulFunctionCall","src":"6516:30:29"},"nodeType":"YulIf","src":"6513:56:29"},{"nodeType":"YulAssignment","src":"6579:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6609:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6587:21:29"},"nodeType":"YulFunctionCall","src":"6587:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6579:4:29"}]},{"nodeType":"YulAssignment","src":"6653:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6665:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"6671:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6661:3:29"},"nodeType":"YulFunctionCall","src":"6661:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6653:4:29"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6426:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6437:4:29","type":""}],"src":"6376:307:29"},{"body":{"nodeType":"YulBlock","src":"6753:82:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6776:3:29"},{"name":"src","nodeType":"YulIdentifier","src":"6781:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"6786:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6763:12:29"},"nodeType":"YulFunctionCall","src":"6763:30:29"},"nodeType":"YulExpressionStatement","src":"6763:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6813:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"6818:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6809:3:29"},"nodeType":"YulFunctionCall","src":"6809:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"6827:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6802:6:29"},"nodeType":"YulFunctionCall","src":"6802:27:29"},"nodeType":"YulExpressionStatement","src":"6802:27:29"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6735:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6740:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"6745:6:29","type":""}],"src":"6689:146:29"},{"body":{"nodeType":"YulBlock","src":"6924:340:29","statements":[{"nodeType":"YulAssignment","src":"6934:74:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7000:6:29"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6959:40:29"},"nodeType":"YulFunctionCall","src":"6959:48:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6943:15:29"},"nodeType":"YulFunctionCall","src":"6943:65:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6934:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7024:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"7031:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7017:6:29"},"nodeType":"YulFunctionCall","src":"7017:21:29"},"nodeType":"YulExpressionStatement","src":"7017:21:29"},{"nodeType":"YulVariableDeclaration","src":"7047:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7062:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"7069:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7058:3:29"},"nodeType":"YulFunctionCall","src":"7058:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7051:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7112:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"7114:77:29"},"nodeType":"YulFunctionCall","src":"7114:79:29"},"nodeType":"YulExpressionStatement","src":"7114:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7093:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7098:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7089:3:29"},"nodeType":"YulFunctionCall","src":"7089:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"7107:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7086:2:29"},"nodeType":"YulFunctionCall","src":"7086:25:29"},"nodeType":"YulIf","src":"7083:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7241:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"7246:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7251:6:29"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7204:36:29"},"nodeType":"YulFunctionCall","src":"7204:54:29"},"nodeType":"YulExpressionStatement","src":"7204:54:29"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6897:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"6902:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"6910:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6918:5:29","type":""}],"src":"6841:423:29"},{"body":{"nodeType":"YulBlock","src":"7344:277:29","statements":[{"body":{"nodeType":"YulBlock","src":"7393:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7395:77:29"},"nodeType":"YulFunctionCall","src":"7395:79:29"},"nodeType":"YulExpressionStatement","src":"7395:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7372:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7380:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7368:3:29"},"nodeType":"YulFunctionCall","src":"7368:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"7387:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7364:3:29"},"nodeType":"YulFunctionCall","src":"7364:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7357:6:29"},"nodeType":"YulFunctionCall","src":"7357:35:29"},"nodeType":"YulIf","src":"7354:122:29"},{"nodeType":"YulVariableDeclaration","src":"7485:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7512:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7499:12:29"},"nodeType":"YulFunctionCall","src":"7499:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7489:6:29","type":""}]},{"nodeType":"YulAssignment","src":"7528:87:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7588:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7596:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7584:3:29"},"nodeType":"YulFunctionCall","src":"7584:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"7603:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"7611:3:29"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7537:46:29"},"nodeType":"YulFunctionCall","src":"7537:78:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7528:5:29"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7322:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"7330:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7338:5:29","type":""}],"src":"7283:338:29"},{"body":{"nodeType":"YulBlock","src":"7702:432:29","statements":[{"body":{"nodeType":"YulBlock","src":"7748:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7750:77:29"},"nodeType":"YulFunctionCall","src":"7750:79:29"},"nodeType":"YulExpressionStatement","src":"7750:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7723:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7732:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7719:3:29"},"nodeType":"YulFunctionCall","src":"7719:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"7744:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7715:3:29"},"nodeType":"YulFunctionCall","src":"7715:32:29"},"nodeType":"YulIf","src":"7712:119:29"},{"nodeType":"YulBlock","src":"7841:286:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7856:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7887:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7898:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7883:3:29"},"nodeType":"YulFunctionCall","src":"7883:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7870:12:29"},"nodeType":"YulFunctionCall","src":"7870:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7860:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7948:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7950:77:29"},"nodeType":"YulFunctionCall","src":"7950:79:29"},"nodeType":"YulExpressionStatement","src":"7950:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7920:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7928:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7917:2:29"},"nodeType":"YulFunctionCall","src":"7917:30:29"},"nodeType":"YulIf","src":"7914:117:29"},{"nodeType":"YulAssignment","src":"8045:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8089:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"8100:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8085:3:29"},"nodeType":"YulFunctionCall","src":"8085:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8109:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8055:29:29"},"nodeType":"YulFunctionCall","src":"8055:62:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8045:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7672:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7683:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7695:6:29","type":""}],"src":"7627:507:29"},{"body":{"nodeType":"YulBlock","src":"8183:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"8240:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8249:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8252:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8242:6:29"},"nodeType":"YulFunctionCall","src":"8242:12:29"},"nodeType":"YulExpressionStatement","src":"8242:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8206:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8231:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8213:17:29"},"nodeType":"YulFunctionCall","src":"8213:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8203:2:29"},"nodeType":"YulFunctionCall","src":"8203:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8196:6:29"},"nodeType":"YulFunctionCall","src":"8196:43:29"},"nodeType":"YulIf","src":"8193:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8176:5:29","type":""}],"src":"8140:122:29"},{"body":{"nodeType":"YulBlock","src":"8320:87:29","statements":[{"nodeType":"YulAssignment","src":"8330:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8352:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8339:12:29"},"nodeType":"YulFunctionCall","src":"8339:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8330:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8395:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"8368:26:29"},"nodeType":"YulFunctionCall","src":"8368:33:29"},"nodeType":"YulExpressionStatement","src":"8368:33:29"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8298:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"8306:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8314:5:29","type":""}],"src":"8268:139:29"},{"body":{"nodeType":"YulBlock","src":"8479:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"8525:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8527:77:29"},"nodeType":"YulFunctionCall","src":"8527:79:29"},"nodeType":"YulExpressionStatement","src":"8527:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8500:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"8509:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8496:3:29"},"nodeType":"YulFunctionCall","src":"8496:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"8521:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8492:3:29"},"nodeType":"YulFunctionCall","src":"8492:32:29"},"nodeType":"YulIf","src":"8489:119:29"},{"nodeType":"YulBlock","src":"8618:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8633:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"8647:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8637:6:29","type":""}]},{"nodeType":"YulAssignment","src":"8662:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8697:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"8708:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8693:3:29"},"nodeType":"YulFunctionCall","src":"8693:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8717:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8672:20:29"},"nodeType":"YulFunctionCall","src":"8672:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8662:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8449:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8460:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8472:6:29","type":""}],"src":"8413:329:29"},{"body":{"nodeType":"YulBlock","src":"8813:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8830:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8853:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8835:17:29"},"nodeType":"YulFunctionCall","src":"8835:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8823:6:29"},"nodeType":"YulFunctionCall","src":"8823:37:29"},"nodeType":"YulExpressionStatement","src":"8823:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8801:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8808:3:29","type":""}],"src":"8748:118:29"},{"body":{"nodeType":"YulBlock","src":"8970:124:29","statements":[{"nodeType":"YulAssignment","src":"8980:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8992:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9003:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8988:3:29"},"nodeType":"YulFunctionCall","src":"8988:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8980:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9060:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9073:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9084:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9069:3:29"},"nodeType":"YulFunctionCall","src":"9069:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9016:43:29"},"nodeType":"YulFunctionCall","src":"9016:71:29"},"nodeType":"YulExpressionStatement","src":"9016:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8942:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8954:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8965:4:29","type":""}],"src":"8872:222:29"},{"body":{"nodeType":"YulBlock","src":"9163:80:29","statements":[{"nodeType":"YulAssignment","src":"9173:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9188:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9182:5:29"},"nodeType":"YulFunctionCall","src":"9182:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9173:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9231:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"9204:26:29"},"nodeType":"YulFunctionCall","src":"9204:33:29"},"nodeType":"YulExpressionStatement","src":"9204:33:29"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9141:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"9149:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9157:5:29","type":""}],"src":"9100:143:29"},{"body":{"nodeType":"YulBlock","src":"9326:274:29","statements":[{"body":{"nodeType":"YulBlock","src":"9372:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9374:77:29"},"nodeType":"YulFunctionCall","src":"9374:79:29"},"nodeType":"YulExpressionStatement","src":"9374:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9347:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"9356:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9343:3:29"},"nodeType":"YulFunctionCall","src":"9343:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"9368:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9339:3:29"},"nodeType":"YulFunctionCall","src":"9339:32:29"},"nodeType":"YulIf","src":"9336:119:29"},{"nodeType":"YulBlock","src":"9465:128:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9480:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"9494:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9484:6:29","type":""}]},{"nodeType":"YulAssignment","src":"9509:74:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9555:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"9566:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9551:3:29"},"nodeType":"YulFunctionCall","src":"9551:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9575:7:29"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"9519:31:29"},"nodeType":"YulFunctionCall","src":"9519:64:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9509:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9296:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9307:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9319:6:29","type":""}],"src":"9249:351:29"},{"body":{"nodeType":"YulBlock","src":"9702:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9719:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"9724:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9712:6:29"},"nodeType":"YulFunctionCall","src":"9712:19:29"},"nodeType":"YulExpressionStatement","src":"9712:19:29"},{"nodeType":"YulAssignment","src":"9740:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9759:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9764:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9755:3:29"},"nodeType":"YulFunctionCall","src":"9755:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9740:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9674:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"9679:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9690:11:29","type":""}],"src":"9606:169:29"},{"body":{"nodeType":"YulBlock","src":"9887:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9909:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9917:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9905:3:29"},"nodeType":"YulFunctionCall","src":"9905:14:29"},{"hexValue":"496e73756666696369656e7420736861726573","kind":"string","nodeType":"YulLiteral","src":"9921:21:29","type":"","value":"Insufficient shares"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9898:6:29"},"nodeType":"YulFunctionCall","src":"9898:45:29"},"nodeType":"YulExpressionStatement","src":"9898:45:29"}]},"name":"store_literal_in_memory_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9879:6:29","type":""}],"src":"9781:169:29"},{"body":{"nodeType":"YulBlock","src":"10102:220:29","statements":[{"nodeType":"YulAssignment","src":"10112:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10178:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"10183:2:29","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10119:58:29"},"nodeType":"YulFunctionCall","src":"10119:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10112:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10284:3:29"}],"functionName":{"name":"store_literal_in_memory_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665","nodeType":"YulIdentifier","src":"10195:88:29"},"nodeType":"YulFunctionCall","src":"10195:93:29"},"nodeType":"YulExpressionStatement","src":"10195:93:29"},{"nodeType":"YulAssignment","src":"10297:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10308:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"10313:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10304:3:29"},"nodeType":"YulFunctionCall","src":"10304:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10297:3:29"}]}]},"name":"abi_encode_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10090:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10098:3:29","type":""}],"src":"9956:366:29"},{"body":{"nodeType":"YulBlock","src":"10499:248:29","statements":[{"nodeType":"YulAssignment","src":"10509:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10521:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10532:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10517:3:29"},"nodeType":"YulFunctionCall","src":"10517:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10509:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10556:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10567:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10552:3:29"},"nodeType":"YulFunctionCall","src":"10552:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10575:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10581:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10571:3:29"},"nodeType":"YulFunctionCall","src":"10571:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10545:6:29"},"nodeType":"YulFunctionCall","src":"10545:47:29"},"nodeType":"YulExpressionStatement","src":"10545:47:29"},{"nodeType":"YulAssignment","src":"10601:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10735:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10609:124:29"},"nodeType":"YulFunctionCall","src":"10609:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10601:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10479:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10494:4:29","type":""}],"src":"10328:419:29"},{"body":{"nodeType":"YulBlock","src":"10907:288:29","statements":[{"nodeType":"YulAssignment","src":"10917:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10929:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10940:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10925:3:29"},"nodeType":"YulFunctionCall","src":"10925:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10917:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10997:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11010:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11021:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11006:3:29"},"nodeType":"YulFunctionCall","src":"11006:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10953:43:29"},"nodeType":"YulFunctionCall","src":"10953:71:29"},"nodeType":"YulExpressionStatement","src":"10953:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11078:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11091:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11102:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11087:3:29"},"nodeType":"YulFunctionCall","src":"11087:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11034:43:29"},"nodeType":"YulFunctionCall","src":"11034:72:29"},"nodeType":"YulExpressionStatement","src":"11034:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11160:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11173:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11184:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11169:3:29"},"nodeType":"YulFunctionCall","src":"11169:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11116:43:29"},"nodeType":"YulFunctionCall","src":"11116:72:29"},"nodeType":"YulExpressionStatement","src":"11116:72:29"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10863:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10875:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10883:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10891:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10902:4:29","type":""}],"src":"10753:442:29"},{"body":{"nodeType":"YulBlock","src":"11241:76:29","statements":[{"body":{"nodeType":"YulBlock","src":"11295:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11304:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11307:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11297:6:29"},"nodeType":"YulFunctionCall","src":"11297:12:29"},"nodeType":"YulExpressionStatement","src":"11297:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11264:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11286:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"11271:14:29"},"nodeType":"YulFunctionCall","src":"11271:21:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11261:2:29"},"nodeType":"YulFunctionCall","src":"11261:32:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11254:6:29"},"nodeType":"YulFunctionCall","src":"11254:40:29"},"nodeType":"YulIf","src":"11251:60:29"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11234:5:29","type":""}],"src":"11201:116:29"},{"body":{"nodeType":"YulBlock","src":"11383:77:29","statements":[{"nodeType":"YulAssignment","src":"11393:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11408:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11402:5:29"},"nodeType":"YulFunctionCall","src":"11402:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11393:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11448:5:29"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"11424:23:29"},"nodeType":"YulFunctionCall","src":"11424:30:29"},"nodeType":"YulExpressionStatement","src":"11424:30:29"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11361:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"11369:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11377:5:29","type":""}],"src":"11323:137:29"},{"body":{"nodeType":"YulBlock","src":"11540:271:29","statements":[{"body":{"nodeType":"YulBlock","src":"11586:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11588:77:29"},"nodeType":"YulFunctionCall","src":"11588:79:29"},"nodeType":"YulExpressionStatement","src":"11588:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11561:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11570:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11557:3:29"},"nodeType":"YulFunctionCall","src":"11557:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"11582:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11553:3:29"},"nodeType":"YulFunctionCall","src":"11553:32:29"},"nodeType":"YulIf","src":"11550:119:29"},{"nodeType":"YulBlock","src":"11679:125:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11694:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11708:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11698:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11723:71:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11766:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11777:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11762:3:29"},"nodeType":"YulFunctionCall","src":"11762:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11786:7:29"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"11733:28:29"},"nodeType":"YulFunctionCall","src":"11733:61:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11723:6:29"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11510:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11521:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11533:6:29","type":""}],"src":"11466:345:29"},{"body":{"nodeType":"YulBlock","src":"11845:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11862:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11865:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11855:6:29"},"nodeType":"YulFunctionCall","src":"11855:88:29"},"nodeType":"YulExpressionStatement","src":"11855:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11959:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11962:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11952:6:29"},"nodeType":"YulFunctionCall","src":"11952:15:29"},"nodeType":"YulExpressionStatement","src":"11952:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11983:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11986:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11976:6:29"},"nodeType":"YulFunctionCall","src":"11976:15:29"},"nodeType":"YulExpressionStatement","src":"11976:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11817:180:29"},{"body":{"nodeType":"YulBlock","src":"12047:147:29","statements":[{"nodeType":"YulAssignment","src":"12057:25:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12080:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12062:17:29"},"nodeType":"YulFunctionCall","src":"12062:20:29"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12057:1:29"}]},{"nodeType":"YulAssignment","src":"12091:25:29","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12114:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12096:17:29"},"nodeType":"YulFunctionCall","src":"12096:20:29"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12091:1:29"}]},{"nodeType":"YulAssignment","src":"12125:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12136:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"12139:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12132:3:29"},"nodeType":"YulFunctionCall","src":"12132:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12125:3:29"}]},{"body":{"nodeType":"YulBlock","src":"12165:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12167:16:29"},"nodeType":"YulFunctionCall","src":"12167:18:29"},"nodeType":"YulExpressionStatement","src":"12167:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12157:1:29"},{"name":"sum","nodeType":"YulIdentifier","src":"12160:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12154:2:29"},"nodeType":"YulFunctionCall","src":"12154:10:29"},"nodeType":"YulIf","src":"12151:36:29"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12034:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"12037:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12043:3:29","type":""}],"src":"12003:191:29"},{"body":{"nodeType":"YulBlock","src":"12253:51:29","statements":[{"nodeType":"YulAssignment","src":"12263:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12292:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12274:17:29"},"nodeType":"YulFunctionCall","src":"12274:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12263:7:29"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12235:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12245:7:29","type":""}],"src":"12200:104:29"},{"body":{"nodeType":"YulBlock","src":"12361:87:29","statements":[{"body":{"nodeType":"YulBlock","src":"12426:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12435:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12438:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12428:6:29"},"nodeType":"YulFunctionCall","src":"12428:12:29"},"nodeType":"YulExpressionStatement","src":"12428:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12384:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12417:5:29"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"12391:25:29"},"nodeType":"YulFunctionCall","src":"12391:32:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12381:2:29"},"nodeType":"YulFunctionCall","src":"12381:43:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12374:6:29"},"nodeType":"YulFunctionCall","src":"12374:51:29"},"nodeType":"YulIf","src":"12371:71:29"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12354:5:29","type":""}],"src":"12310:138:29"},{"body":{"nodeType":"YulBlock","src":"12525:88:29","statements":[{"nodeType":"YulAssignment","src":"12535:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12550:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12544:5:29"},"nodeType":"YulFunctionCall","src":"12544:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12535:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12601:5:29"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"12566:34:29"},"nodeType":"YulFunctionCall","src":"12566:41:29"},"nodeType":"YulExpressionStatement","src":"12566:41:29"}]},"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12503:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"12511:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12519:5:29","type":""}],"src":"12454:159:29"},{"body":{"nodeType":"YulBlock","src":"12721:421:29","statements":[{"body":{"nodeType":"YulBlock","src":"12767:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12769:77:29"},"nodeType":"YulFunctionCall","src":"12769:79:29"},"nodeType":"YulExpressionStatement","src":"12769:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12742:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"12751:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12738:3:29"},"nodeType":"YulFunctionCall","src":"12738:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"12763:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12734:3:29"},"nodeType":"YulFunctionCall","src":"12734:32:29"},"nodeType":"YulIf","src":"12731:119:29"},{"nodeType":"YulBlock","src":"12860:136:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12875:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"12889:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12879:6:29","type":""}]},{"nodeType":"YulAssignment","src":"12904:82:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12958:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12969:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12954:3:29"},"nodeType":"YulFunctionCall","src":"12954:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12978:7:29"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulIdentifier","src":"12914:39:29"},"nodeType":"YulFunctionCall","src":"12914:72:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12904:6:29"}]}]},{"nodeType":"YulBlock","src":"13006:129:29","statements":[{"nodeType":"YulVariableDeclaration","src":"13021:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"13035:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13025:6:29","type":""}]},{"nodeType":"YulAssignment","src":"13051:74:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13097:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"13108:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13093:3:29"},"nodeType":"YulFunctionCall","src":"13093:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13117:7:29"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"13061:31:29"},"nodeType":"YulFunctionCall","src":"13061:64:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13051:6:29"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12683:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12694:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12706:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12714:6:29","type":""}],"src":"12619:523:29"},{"body":{"nodeType":"YulBlock","src":"13254:65:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13276:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"13284:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13272:3:29"},"nodeType":"YulFunctionCall","src":"13272:14:29"},{"hexValue":"4e6f2070656e64696e67207769746864726177616c","kind":"string","nodeType":"YulLiteral","src":"13288:23:29","type":"","value":"No pending withdrawal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13265:6:29"},"nodeType":"YulFunctionCall","src":"13265:47:29"},"nodeType":"YulExpressionStatement","src":"13265:47:29"}]},"name":"store_literal_in_memory_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13246:6:29","type":""}],"src":"13148:171:29"},{"body":{"nodeType":"YulBlock","src":"13471:220:29","statements":[{"nodeType":"YulAssignment","src":"13481:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13547:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"13552:2:29","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13488:58:29"},"nodeType":"YulFunctionCall","src":"13488:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13481:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13653:3:29"}],"functionName":{"name":"store_literal_in_memory_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40","nodeType":"YulIdentifier","src":"13564:88:29"},"nodeType":"YulFunctionCall","src":"13564:93:29"},"nodeType":"YulExpressionStatement","src":"13564:93:29"},{"nodeType":"YulAssignment","src":"13666:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13677:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"13682:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13673:3:29"},"nodeType":"YulFunctionCall","src":"13673:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13666:3:29"}]}]},"name":"abi_encode_t_stringliteral_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13459:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13467:3:29","type":""}],"src":"13325:366:29"},{"body":{"nodeType":"YulBlock","src":"13868:248:29","statements":[{"nodeType":"YulAssignment","src":"13878:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13890:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13901:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13886:3:29"},"nodeType":"YulFunctionCall","src":"13886:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13878:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13925:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13936:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13921:3:29"},"nodeType":"YulFunctionCall","src":"13921:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13944:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"13950:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13940:3:29"},"nodeType":"YulFunctionCall","src":"13940:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13914:6:29"},"nodeType":"YulFunctionCall","src":"13914:47:29"},"nodeType":"YulExpressionStatement","src":"13914:47:29"},{"nodeType":"YulAssignment","src":"13970:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14104:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13978:124:29"},"nodeType":"YulFunctionCall","src":"13978:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13970:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13848:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13863:4:29","type":""}],"src":"13697:419:29"},{"body":{"nodeType":"YulBlock","src":"14167:149:29","statements":[{"nodeType":"YulAssignment","src":"14177:25:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14200:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14182:17:29"},"nodeType":"YulFunctionCall","src":"14182:20:29"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14177:1:29"}]},{"nodeType":"YulAssignment","src":"14211:25:29","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14234:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14216:17:29"},"nodeType":"YulFunctionCall","src":"14216:20:29"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14211:1:29"}]},{"nodeType":"YulAssignment","src":"14245:17:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14257:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"14260:1:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14253:3:29"},"nodeType":"YulFunctionCall","src":"14253:9:29"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"14245:4:29"}]},{"body":{"nodeType":"YulBlock","src":"14287:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14289:16:29"},"nodeType":"YulFunctionCall","src":"14289:18:29"},"nodeType":"YulExpressionStatement","src":"14289:18:29"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"14278:4:29"},{"name":"x","nodeType":"YulIdentifier","src":"14284:1:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14275:2:29"},"nodeType":"YulFunctionCall","src":"14275:11:29"},"nodeType":"YulIf","src":"14272:37:29"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14153:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"14156:1:29","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"14162:4:29","type":""}],"src":"14122:194:29"},{"body":{"nodeType":"YulBlock","src":"14448:206:29","statements":[{"nodeType":"YulAssignment","src":"14458:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14470:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14481:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14466:3:29"},"nodeType":"YulFunctionCall","src":"14466:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14458:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14538:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14551:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14562:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14547:3:29"},"nodeType":"YulFunctionCall","src":"14547:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14494:43:29"},"nodeType":"YulFunctionCall","src":"14494:71:29"},"nodeType":"YulExpressionStatement","src":"14494:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14619:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14632:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14643:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14628:3:29"},"nodeType":"YulFunctionCall","src":"14628:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14575:43:29"},"nodeType":"YulFunctionCall","src":"14575:72:29"},"nodeType":"YulExpressionStatement","src":"14575:72:29"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14412:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14424:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14432:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14443:4:29","type":""}],"src":"14322:332:29"},{"body":{"nodeType":"YulBlock","src":"14755:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14772:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"14777:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14765:6:29"},"nodeType":"YulFunctionCall","src":"14765:19:29"},"nodeType":"YulExpressionStatement","src":"14765:19:29"},{"nodeType":"YulAssignment","src":"14793:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14812:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"14817:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14808:3:29"},"nodeType":"YulFunctionCall","src":"14808:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"14793:11:29"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14727:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"14732:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14743:11:29","type":""}],"src":"14660:168:29"},{"body":{"nodeType":"YulBlock","src":"14940:8:29","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14932:6:29","type":""}],"src":"14834:114:29"},{"body":{"nodeType":"YulBlock","src":"15099:217:29","statements":[{"nodeType":"YulAssignment","src":"15109:72:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15174:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"15179:1:29","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15116:57:29"},"nodeType":"YulFunctionCall","src":"15116:65:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15109:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15279:3:29"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"15190:88:29"},"nodeType":"YulFunctionCall","src":"15190:93:29"},"nodeType":"YulExpressionStatement","src":"15190:93:29"},{"nodeType":"YulAssignment","src":"15292:18:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15303:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"15308:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15299:3:29"},"nodeType":"YulFunctionCall","src":"15299:11:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15292:3:29"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15087:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15095:3:29","type":""}],"src":"14954:362:29"},{"body":{"nodeType":"YulBlock","src":"15520:329:29","statements":[{"nodeType":"YulAssignment","src":"15530:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15542:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15553:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15538:3:29"},"nodeType":"YulFunctionCall","src":"15538:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15530:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15610:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15623:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15634:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15619:3:29"},"nodeType":"YulFunctionCall","src":"15619:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15566:43:29"},"nodeType":"YulFunctionCall","src":"15566:71:29"},"nodeType":"YulExpressionStatement","src":"15566:71:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15658:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15669:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15654:3:29"},"nodeType":"YulFunctionCall","src":"15654:18:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15678:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"15684:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15674:3:29"},"nodeType":"YulFunctionCall","src":"15674:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15647:6:29"},"nodeType":"YulFunctionCall","src":"15647:48:29"},"nodeType":"YulExpressionStatement","src":"15647:48:29"},{"nodeType":"YulAssignment","src":"15704:138:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15837:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15712:123:29"},"nodeType":"YulFunctionCall","src":"15712:130:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15704:4:29"}]}]},"name":"abi_encode_tuple_t_address_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15492:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15504:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15515:4:29","type":""}],"src":"15322:527:29"},{"body":{"nodeType":"YulBlock","src":"15961:57:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15983:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"15991:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15979:3:29"},"nodeType":"YulFunctionCall","src":"15979:14:29"},{"hexValue":"4e6f7420636f6d706c69616e74","kind":"string","nodeType":"YulLiteral","src":"15995:15:29","type":"","value":"Not compliant"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15972:6:29"},"nodeType":"YulFunctionCall","src":"15972:39:29"},"nodeType":"YulExpressionStatement","src":"15972:39:29"}]},"name":"store_literal_in_memory_bbb560f347d1c9050f16c9293282144e9b7319b314930adfa2ec3268995e3c4f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15953:6:29","type":""}],"src":"15855:163:29"},{"body":{"nodeType":"YulBlock","src":"16170:220:29","statements":[{"nodeType":"YulAssignment","src":"16180:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16246:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"16251:2:29","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16187:58:29"},"nodeType":"YulFunctionCall","src":"16187:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16180:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16352:3:29"}],"functionName":{"name":"store_literal_in_memory_bbb560f347d1c9050f16c9293282144e9b7319b314930adfa2ec3268995e3c4f","nodeType":"YulIdentifier","src":"16263:88:29"},"nodeType":"YulFunctionCall","src":"16263:93:29"},"nodeType":"YulExpressionStatement","src":"16263:93:29"},{"nodeType":"YulAssignment","src":"16365:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16376:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"16381:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16372:3:29"},"nodeType":"YulFunctionCall","src":"16372:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16365:3:29"}]}]},"name":"abi_encode_t_stringliteral_bbb560f347d1c9050f16c9293282144e9b7319b314930adfa2ec3268995e3c4f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16158:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16166:3:29","type":""}],"src":"16024:366:29"},{"body":{"nodeType":"YulBlock","src":"16567:248:29","statements":[{"nodeType":"YulAssignment","src":"16577:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16589:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16600:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16585:3:29"},"nodeType":"YulFunctionCall","src":"16585:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16577:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16624:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16635:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16620:3:29"},"nodeType":"YulFunctionCall","src":"16620:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16643:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"16649:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16639:3:29"},"nodeType":"YulFunctionCall","src":"16639:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16613:6:29"},"nodeType":"YulFunctionCall","src":"16613:47:29"},"nodeType":"YulExpressionStatement","src":"16613:47:29"},{"nodeType":"YulAssignment","src":"16669:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16803:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_bbb560f347d1c9050f16c9293282144e9b7319b314930adfa2ec3268995e3c4f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16677:124:29"},"nodeType":"YulFunctionCall","src":"16677:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16669:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_bbb560f347d1c9050f16c9293282144e9b7319b314930adfa2ec3268995e3c4f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16547:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16562:4:29","type":""}],"src":"16396:419:29"},{"body":{"nodeType":"YulBlock","src":"16927:61:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16949:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"16957:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16945:3:29"},"nodeType":"YulFunctionCall","src":"16945:14:29"},{"hexValue":"416c7265616479206465706f7369746564","kind":"string","nodeType":"YulLiteral","src":"16961:19:29","type":"","value":"Already deposited"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16938:6:29"},"nodeType":"YulFunctionCall","src":"16938:43:29"},"nodeType":"YulExpressionStatement","src":"16938:43:29"}]},"name":"store_literal_in_memory_17419afcab1c167f08f938e3106ddedd944771ad063fce021c6a28601eb524bb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16919:6:29","type":""}],"src":"16821:167:29"},{"body":{"nodeType":"YulBlock","src":"17140:220:29","statements":[{"nodeType":"YulAssignment","src":"17150:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17216:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"17221:2:29","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17157:58:29"},"nodeType":"YulFunctionCall","src":"17157:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17150:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17322:3:29"}],"functionName":{"name":"store_literal_in_memory_17419afcab1c167f08f938e3106ddedd944771ad063fce021c6a28601eb524bb","nodeType":"YulIdentifier","src":"17233:88:29"},"nodeType":"YulFunctionCall","src":"17233:93:29"},"nodeType":"YulExpressionStatement","src":"17233:93:29"},{"nodeType":"YulAssignment","src":"17335:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17346:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"17351:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17342:3:29"},"nodeType":"YulFunctionCall","src":"17342:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17335:3:29"}]}]},"name":"abi_encode_t_stringliteral_17419afcab1c167f08f938e3106ddedd944771ad063fce021c6a28601eb524bb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17128:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17136:3:29","type":""}],"src":"16994:366:29"},{"body":{"nodeType":"YulBlock","src":"17537:248:29","statements":[{"nodeType":"YulAssignment","src":"17547:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17559:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17570:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17555:3:29"},"nodeType":"YulFunctionCall","src":"17555:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17547:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17594:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17605:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17590:3:29"},"nodeType":"YulFunctionCall","src":"17590:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17613:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"17619:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17609:3:29"},"nodeType":"YulFunctionCall","src":"17609:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17583:6:29"},"nodeType":"YulFunctionCall","src":"17583:47:29"},"nodeType":"YulExpressionStatement","src":"17583:47:29"},{"nodeType":"YulAssignment","src":"17639:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17773:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_17419afcab1c167f08f938e3106ddedd944771ad063fce021c6a28601eb524bb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17647:124:29"},"nodeType":"YulFunctionCall","src":"17647:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17639:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_17419afcab1c167f08f938e3106ddedd944771ad063fce021c6a28601eb524bb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17517:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17532:4:29","type":""}],"src":"17366:419:29"},{"body":{"nodeType":"YulBlock","src":"17917:206:29","statements":[{"nodeType":"YulAssignment","src":"17927:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17939:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17950:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17935:3:29"},"nodeType":"YulFunctionCall","src":"17935:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17927:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18007:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18020:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18031:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18016:3:29"},"nodeType":"YulFunctionCall","src":"18016:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17963:43:29"},"nodeType":"YulFunctionCall","src":"17963:71:29"},"nodeType":"YulExpressionStatement","src":"17963:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18088:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18101:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18112:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18097:3:29"},"nodeType":"YulFunctionCall","src":"18097:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18044:43:29"},"nodeType":"YulFunctionCall","src":"18044:72:29"},"nodeType":"YulExpressionStatement","src":"18044:72:29"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17881:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17893:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17901:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17912:4:29","type":""}],"src":"17791:332:29"},{"body":{"nodeType":"YulBlock","src":"18218:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18235:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18238:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18228:6:29"},"nodeType":"YulFunctionCall","src":"18228:12:29"},"nodeType":"YulExpressionStatement","src":"18228:12:29"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"18129:117:29"},{"body":{"nodeType":"YulBlock","src":"18341:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18358:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18361:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18351:6:29"},"nodeType":"YulFunctionCall","src":"18351:12:29"},"nodeType":"YulExpressionStatement","src":"18351:12:29"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"18252:117:29"},{"body":{"nodeType":"YulBlock","src":"18442:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"18547:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18549:16:29"},"nodeType":"YulFunctionCall","src":"18549:18:29"},"nodeType":"YulExpressionStatement","src":"18549:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18519:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"18527:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18516:2:29"},"nodeType":"YulFunctionCall","src":"18516:30:29"},"nodeType":"YulIf","src":"18513:56:29"},{"nodeType":"YulAssignment","src":"18579:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18609:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"18587:21:29"},"nodeType":"YulFunctionCall","src":"18587:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"18579:4:29"}]},{"nodeType":"YulAssignment","src":"18653:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"18665:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"18671:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18661:3:29"},"nodeType":"YulFunctionCall","src":"18661:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"18653:4:29"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"18426:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"18437:4:29","type":""}],"src":"18375:308:29"},{"body":{"nodeType":"YulBlock","src":"18751:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"18761:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"18770:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18765:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"18830:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18855:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"18860:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18851:3:29"},"nodeType":"YulFunctionCall","src":"18851:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18874:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"18879:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18870:3:29"},"nodeType":"YulFunctionCall","src":"18870:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18864:5:29"},"nodeType":"YulFunctionCall","src":"18864:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18844:6:29"},"nodeType":"YulFunctionCall","src":"18844:39:29"},"nodeType":"YulExpressionStatement","src":"18844:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18791:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"18794:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18788:2:29"},"nodeType":"YulFunctionCall","src":"18788:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18802:19:29","statements":[{"nodeType":"YulAssignment","src":"18804:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18813:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"18816:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18809:3:29"},"nodeType":"YulFunctionCall","src":"18809:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18804:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"18784:3:29","statements":[]},"src":"18780:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18913:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"18918:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18909:3:29"},"nodeType":"YulFunctionCall","src":"18909:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"18927:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18902:6:29"},"nodeType":"YulFunctionCall","src":"18902:27:29"},"nodeType":"YulExpressionStatement","src":"18902:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18733:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18738:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"18743:6:29","type":""}],"src":"18689:246:29"},{"body":{"nodeType":"YulBlock","src":"19036:339:29","statements":[{"nodeType":"YulAssignment","src":"19046:75:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19113:6:29"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19071:41:29"},"nodeType":"YulFunctionCall","src":"19071:49:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"19055:15:29"},"nodeType":"YulFunctionCall","src":"19055:66:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"19046:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19137:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"19144:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19130:6:29"},"nodeType":"YulFunctionCall","src":"19130:21:29"},"nodeType":"YulExpressionStatement","src":"19130:21:29"},{"nodeType":"YulVariableDeclaration","src":"19160:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19175:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"19182:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19171:3:29"},"nodeType":"YulFunctionCall","src":"19171:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"19164:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"19225:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"19227:77:29"},"nodeType":"YulFunctionCall","src":"19227:79:29"},"nodeType":"YulExpressionStatement","src":"19227:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19206:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"19211:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19202:3:29"},"nodeType":"YulFunctionCall","src":"19202:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"19220:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19199:2:29"},"nodeType":"YulFunctionCall","src":"19199:25:29"},"nodeType":"YulIf","src":"19196:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19352:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"19357:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"19362:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"19317:34:29"},"nodeType":"YulFunctionCall","src":"19317:52:29"},"nodeType":"YulExpressionStatement","src":"19317:52:29"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"19009:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"19014:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"19022:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"19030:5:29","type":""}],"src":"18941:434:29"},{"body":{"nodeType":"YulBlock","src":"19468:282:29","statements":[{"body":{"nodeType":"YulBlock","src":"19517:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"19519:77:29"},"nodeType":"YulFunctionCall","src":"19519:79:29"},"nodeType":"YulExpressionStatement","src":"19519:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19496:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"19504:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19492:3:29"},"nodeType":"YulFunctionCall","src":"19492:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"19511:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19488:3:29"},"nodeType":"YulFunctionCall","src":"19488:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19481:6:29"},"nodeType":"YulFunctionCall","src":"19481:35:29"},"nodeType":"YulIf","src":"19478:122:29"},{"nodeType":"YulVariableDeclaration","src":"19609:27:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19629:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19623:5:29"},"nodeType":"YulFunctionCall","src":"19623:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19613:6:29","type":""}]},{"nodeType":"YulAssignment","src":"19645:99:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19717:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"19725:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19713:3:29"},"nodeType":"YulFunctionCall","src":"19713:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"19732:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"19740:3:29"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"19654:58:29"},"nodeType":"YulFunctionCall","src":"19654:90:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"19645:5:29"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19446:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"19454:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"19462:5:29","type":""}],"src":"19395:355:29"},{"body":{"nodeType":"YulBlock","src":"19819:80:29","statements":[{"nodeType":"YulAssignment","src":"19829:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19844:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19838:5:29"},"nodeType":"YulFunctionCall","src":"19838:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19829:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19887:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"19860:26:29"},"nodeType":"YulFunctionCall","src":"19860:33:29"},"nodeType":"YulExpressionStatement","src":"19860:33:29"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19797:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"19805:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19813:5:29","type":""}],"src":"19756:143:29"},{"body":{"nodeType":"YulBlock","src":"19950:32:29","statements":[{"nodeType":"YulAssignment","src":"19960:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"19971:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19960:7:29"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19932:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19942:7:29","type":""}],"src":"19905:77:29"},{"body":{"nodeType":"YulBlock","src":"20031:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"20088:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20097:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20100:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20090:6:29"},"nodeType":"YulFunctionCall","src":"20090:12:29"},"nodeType":"YulExpressionStatement","src":"20090:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20054:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20079:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"20061:17:29"},"nodeType":"YulFunctionCall","src":"20061:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20051:2:29"},"nodeType":"YulFunctionCall","src":"20051:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20044:6:29"},"nodeType":"YulFunctionCall","src":"20044:43:29"},"nodeType":"YulIf","src":"20041:63:29"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20024:5:29","type":""}],"src":"19988:122:29"},{"body":{"nodeType":"YulBlock","src":"20179:80:29","statements":[{"nodeType":"YulAssignment","src":"20189:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20204:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20198:5:29"},"nodeType":"YulFunctionCall","src":"20198:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20189:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20247:5:29"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"20220:26:29"},"nodeType":"YulFunctionCall","src":"20220:33:29"},"nodeType":"YulExpressionStatement","src":"20220:33:29"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"20157:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"20165:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"20173:5:29","type":""}],"src":"20116:143:29"},{"body":{"nodeType":"YulBlock","src":"20389:1383:29","statements":[{"body":{"nodeType":"YulBlock","src":"20433:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"20435:77:29"},"nodeType":"YulFunctionCall","src":"20435:79:29"},"nodeType":"YulExpressionStatement","src":"20435:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"20410:3:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"20415:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20406:3:29"},"nodeType":"YulFunctionCall","src":"20406:19:29"},{"kind":"number","nodeType":"YulLiteral","src":"20427:4:29","type":"","value":"0xc0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20402:3:29"},"nodeType":"YulFunctionCall","src":"20402:30:29"},"nodeType":"YulIf","src":"20399:117:29"},{"nodeType":"YulAssignment","src":"20525:30:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20550:4:29","type":"","value":"0xc0"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"20534:15:29"},"nodeType":"YulFunctionCall","src":"20534:21:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20525:5:29"}]},{"nodeType":"YulBlock","src":"20565:323:29","statements":[{"nodeType":"YulVariableDeclaration","src":"20599:38:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20623:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20634:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20619:3:29"},"nodeType":"YulFunctionCall","src":"20619:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20613:5:29"},"nodeType":"YulFunctionCall","src":"20613:24:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20603:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"20684:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"20686:77:29"},"nodeType":"YulFunctionCall","src":"20686:79:29"},"nodeType":"YulExpressionStatement","src":"20686:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20656:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"20664:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20653:2:29"},"nodeType":"YulFunctionCall","src":"20653:30:29"},"nodeType":"YulIf","src":"20650:117:29"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20792:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"20799:4:29","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20788:3:29"},"nodeType":"YulFunctionCall","src":"20788:16:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20852:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"20863:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20848:3:29"},"nodeType":"YulFunctionCall","src":"20848:22:29"},{"name":"end","nodeType":"YulIdentifier","src":"20872:3:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"20806:41:29"},"nodeType":"YulFunctionCall","src":"20806:70:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20781:6:29"},"nodeType":"YulFunctionCall","src":"20781:96:29"},"nodeType":"YulExpressionStatement","src":"20781:96:29"}]},{"nodeType":"YulBlock","src":"20898:164:29","statements":[{"nodeType":"YulVariableDeclaration","src":"20935:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"20949:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20939:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20976:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"20983:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20972:3:29"},"nodeType":"YulFunctionCall","src":"20972:16:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21026:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"21037:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21022:3:29"},"nodeType":"YulFunctionCall","src":"21022:22:29"},{"name":"end","nodeType":"YulIdentifier","src":"21046:3:29"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"20990:31:29"},"nodeType":"YulFunctionCall","src":"20990:60:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20965:6:29"},"nodeType":"YulFunctionCall","src":"20965:86:29"},"nodeType":"YulExpressionStatement","src":"20965:86:29"}]},{"nodeType":"YulBlock","src":"21072:167:29","statements":[{"nodeType":"YulVariableDeclaration","src":"21112:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"21126:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21116:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21153:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"21160:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21149:3:29"},"nodeType":"YulFunctionCall","src":"21149:16:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21203:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"21214:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21199:3:29"},"nodeType":"YulFunctionCall","src":"21199:22:29"},{"name":"end","nodeType":"YulIdentifier","src":"21223:3:29"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"21167:31:29"},"nodeType":"YulFunctionCall","src":"21167:60:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21142:6:29"},"nodeType":"YulFunctionCall","src":"21142:86:29"},"nodeType":"YulExpressionStatement","src":"21142:86:29"}]},{"nodeType":"YulBlock","src":"21249:167:29","statements":[{"nodeType":"YulVariableDeclaration","src":"21289:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"21303:2:29","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21293:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21330:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"21337:4:29","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21326:3:29"},"nodeType":"YulFunctionCall","src":"21326:16:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21380:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"21391:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21376:3:29"},"nodeType":"YulFunctionCall","src":"21376:22:29"},{"name":"end","nodeType":"YulIdentifier","src":"21400:3:29"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"21344:31:29"},"nodeType":"YulFunctionCall","src":"21344:60:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21319:6:29"},"nodeType":"YulFunctionCall","src":"21319:86:29"},"nodeType":"YulExpressionStatement","src":"21319:86:29"}]},{"nodeType":"YulBlock","src":"21426:167:29","statements":[{"nodeType":"YulVariableDeclaration","src":"21465:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"21479:3:29","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21469:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21507:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"21514:4:29","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21503:3:29"},"nodeType":"YulFunctionCall","src":"21503:16:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21557:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"21568:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21553:3:29"},"nodeType":"YulFunctionCall","src":"21553:22:29"},{"name":"end","nodeType":"YulIdentifier","src":"21577:3:29"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"21521:31:29"},"nodeType":"YulFunctionCall","src":"21521:60:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21496:6:29"},"nodeType":"YulFunctionCall","src":"21496:86:29"},"nodeType":"YulExpressionStatement","src":"21496:86:29"}]},{"nodeType":"YulBlock","src":"21603:162:29","statements":[{"nodeType":"YulVariableDeclaration","src":"21640:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"21654:3:29","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21644:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21682:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"21689:4:29","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21678:3:29"},"nodeType":"YulFunctionCall","src":"21678:16:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21729:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"21740:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21725:3:29"},"nodeType":"YulFunctionCall","src":"21725:22:29"},{"name":"end","nodeType":"YulIdentifier","src":"21749:3:29"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"21696:28:29"},"nodeType":"YulFunctionCall","src":"21696:57:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21671:6:29"},"nodeType":"YulFunctionCall","src":"21671:83:29"},"nodeType":"YulExpressionStatement","src":"21671:83:29"}]}]},"name":"abi_decode_t_struct$_Asset_$8335_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20364:9:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"20375:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"20383:5:29","type":""}],"src":"20300:1472:29"},{"body":{"nodeType":"YulBlock","src":"21878:450:29","statements":[{"body":{"nodeType":"YulBlock","src":"21924:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21926:77:29"},"nodeType":"YulFunctionCall","src":"21926:79:29"},"nodeType":"YulExpressionStatement","src":"21926:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21899:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"21908:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21895:3:29"},"nodeType":"YulFunctionCall","src":"21895:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"21920:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21891:3:29"},"nodeType":"YulFunctionCall","src":"21891:32:29"},"nodeType":"YulIf","src":"21888:119:29"},{"nodeType":"YulBlock","src":"22017:304:29","statements":[{"nodeType":"YulVariableDeclaration","src":"22032:38:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22056:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22067:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22052:3:29"},"nodeType":"YulFunctionCall","src":"22052:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22046:5:29"},"nodeType":"YulFunctionCall","src":"22046:24:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22036:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"22117:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"22119:77:29"},"nodeType":"YulFunctionCall","src":"22119:79:29"},"nodeType":"YulExpressionStatement","src":"22119:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22089:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"22097:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22086:2:29"},"nodeType":"YulFunctionCall","src":"22086:30:29"},"nodeType":"YulIf","src":"22083:117:29"},{"nodeType":"YulAssignment","src":"22214:97:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22283:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"22294:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22279:3:29"},"nodeType":"YulFunctionCall","src":"22279:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22303:7:29"}],"functionName":{"name":"abi_decode_t_struct$_Asset_$8335_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"22224:54:29"},"nodeType":"YulFunctionCall","src":"22224:87:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22214:6:29"}]}]}]},"name":"abi_decode_tuple_t_struct$_Asset_$8335_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21848:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21859:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21871:6:29","type":""}],"src":"21778:550:29"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AssetTokenizer_$8446_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AssetTokenizer_$8446_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AssetTokenizer_$8446_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AssetTokenizer_$8446__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AssetTokenizer_$8446_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ComplianceModule_$8510_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ComplianceModule_$8510_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ComplianceModule_$8510_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ComplianceModule_$8510__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ComplianceModule_$8510_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ShareToken_$8636_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ShareToken_$8636_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ShareToken_$8636_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ShareToken_$8636__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ShareToken_$8636_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ZKModule_$9056_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ZKModule_$9056_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ZKModule_$9056_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ZKModule_$9056__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ZKModule_$9056_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_YieldDistributor_$9008_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_YieldDistributor_$9008_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_YieldDistributor_$9008_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_YieldDistributor_$9008__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_YieldDistributor_$9008_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient shares\")\n\n    }\n\n    function abi_encode_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40(memPtr) {\n\n        mstore(add(memPtr, 0), \"No pending withdrawal\")\n\n    }\n\n    function abi_encode_t_stringliteral_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_address_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bbb560f347d1c9050f16c9293282144e9b7319b314930adfa2ec3268995e3c4f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not compliant\")\n\n    }\n\n    function abi_encode_t_stringliteral_bbb560f347d1c9050f16c9293282144e9b7319b314930adfa2ec3268995e3c4f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_bbb560f347d1c9050f16c9293282144e9b7319b314930adfa2ec3268995e3c4f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bbb560f347d1c9050f16c9293282144e9b7319b314930adfa2ec3268995e3c4f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bbb560f347d1c9050f16c9293282144e9b7319b314930adfa2ec3268995e3c4f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_17419afcab1c167f08f938e3106ddedd944771ad063fce021c6a28601eb524bb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already deposited\")\n\n    }\n\n    function abi_encode_t_stringliteral_17419afcab1c167f08f938e3106ddedd944771ad063fce021c6a28601eb524bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_17419afcab1c167f08f938e3106ddedd944771ad063fce021c6a28601eb524bb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_17419afcab1c167f08f938e3106ddedd944771ad063fce021c6a28601eb524bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_17419afcab1c167f08f938e3106ddedd944771ad063fce021c6a28601eb524bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // struct AssetTokenizer.Asset\n    function abi_decode_t_struct$_Asset_$8335_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xc0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xc0)\n\n        {\n            // uri\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x00), abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // issuer\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // proofHash\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_bytes32_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // valuation\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // maturity\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // locked\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_Asset_$8335_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_Asset_$8335_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639ee679e81161008c578063bc493fd611610066578063bc493fd6146101de578063f2fde38b146101fa578063f3f4370314610216578063fa2df41414610246576100cf565b80639ee679e814610174578063a38c2c3d14610190578063aa8d5705146101ae576100cf565b806352d91f9c146100d45780636290865d146100f25780636c9fa59e14610110578063715018a61461012e5780638c7bc6d0146101385780638da5cb5b14610156575b600080fd5b6100dc610262565b6040516100e99190610d8b565b60405180910390f35b6100fa610288565b6040516101079190610dc7565b60405180910390f35b6101186102ae565b6040516101259190610e03565b60405180910390f35b6101366102d4565b005b6101406102e8565b60405161014d9190610e3f565b60405180910390f35b61015e61030e565b60405161016b9190610e7b565b60405180910390f35b61018e60048036038101906101899190610ee0565b610337565b005b61019861055f565b6040516101a59190610f2e565b60405180910390f35b6101c860048036038101906101c39190610ee0565b610585565b6040516101d59190610f64565b60405180910390f35b6101f860048036038101906101f391906110c5565b6105a5565b005b610214600480360381019061020f919061113a565b610794565b005b610230600480360381019061022b919061113a565b61081a565b60405161023d9190611176565b60405180910390f35b610260600480360381019061025b9190610ee0565b610832565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102dc610bb9565b6102e66000610c40565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103939190610e7b565b602060405180830381865afa1580156103b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d491906111a6565b1015610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040c90611230565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161047493929190611250565b6020604051808303816000875af1158015610493573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b791906112b3565b5080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610507919061130f565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f17040713250ec5f668a1c39e7939900e78558350dbaff0ebef34268dfa8ea4ac826040516105549190611176565b60405180910390a250565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915054906101000a900460ff1681565b6105ad610bb9565b600080828060200190518101906105c49190611381565b9150915080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561064a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106419061140d565b60405180910390fd5b80600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610699919061142d565b92505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016106fd929190611461565b6020604051808303816000875af115801561071c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074091906112b3565b508173ffffffffffffffffffffffffffffffffffffffff167ffbded071a5348837e0658949d85d74b38bb1402e96ac47b17144ae3185a520bd826040516107879190611176565b60405180910390a2505050565b61079c610bb9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361080e5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108059190610e7b565b60405180910390fd5b61081781610c40565b50565b60076020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bad5b133336040518263ffffffff1660e01b815260040161088d91906114c1565b602060405180830381865afa1580156108aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ce91906112b3565b61090d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109049061153b565b60405180910390fd5b6006600082815260200190815260200160002060009054906101000a900460ff161561096e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610965906115a7565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bd2a58a282306040518363ffffffff1660e01b81526004016109cb9291906115c7565b600060405180830381600087803b1580156109e557600080fd5b505af11580156109f9573d6000803e3d6000fd5b5050505060016006600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eac8f5b8836040518263ffffffff1660e01b8152600401610a869190611176565b600060405180830381865afa158015610aa3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610acc91906117cc565b9050600081606001519050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401610b34929190611461565b600060405180830381600087803b158015610b4e57600080fd5b505af1158015610b62573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c84604051610bac9190611176565b60405180910390a2505050565b610bc1610d04565b73ffffffffffffffffffffffffffffffffffffffff16610bdf61030e565b73ffffffffffffffffffffffffffffffffffffffff1614610c3e57610c02610d04565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c359190610e7b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d51610d4c610d4784610d0c565b610d2c565b610d0c565b9050919050565b6000610d6382610d36565b9050919050565b6000610d7582610d58565b9050919050565b610d8581610d6a565b82525050565b6000602082019050610da06000830184610d7c565b92915050565b6000610db182610d58565b9050919050565b610dc181610da6565b82525050565b6000602082019050610ddc6000830184610db8565b92915050565b6000610ded82610d58565b9050919050565b610dfd81610de2565b82525050565b6000602082019050610e186000830184610df4565b92915050565b6000610e2982610d58565b9050919050565b610e3981610e1e565b82525050565b6000602082019050610e546000830184610e30565b92915050565b6000610e6582610d0c565b9050919050565b610e7581610e5a565b82525050565b6000602082019050610e906000830184610e6c565b92915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610ebd81610eaa565b8114610ec857600080fd5b50565b600081359050610eda81610eb4565b92915050565b600060208284031215610ef657610ef5610ea0565b5b6000610f0484828501610ecb565b91505092915050565b6000610f1882610d58565b9050919050565b610f2881610f0d565b82525050565b6000602082019050610f436000830184610f1f565b92915050565b60008115159050919050565b610f5e81610f49565b82525050565b6000602082019050610f796000830184610f55565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fd282610f89565b810181811067ffffffffffffffff82111715610ff157610ff0610f9a565b5b80604052505050565b6000611004610e96565b90506110108282610fc9565b919050565b600067ffffffffffffffff8211156110305761102f610f9a565b5b61103982610f89565b9050602081019050919050565b82818337600083830152505050565b600061106861106384611015565b610ffa565b90508281526020810184848401111561108457611083610f84565b5b61108f848285611046565b509392505050565b600082601f8301126110ac576110ab610f7f565b5b81356110bc848260208601611055565b91505092915050565b6000602082840312156110db576110da610ea0565b5b600082013567ffffffffffffffff8111156110f9576110f8610ea5565b5b61110584828501611097565b91505092915050565b61111781610e5a565b811461112257600080fd5b50565b6000813590506111348161110e565b92915050565b6000602082840312156111505761114f610ea0565b5b600061115e84828501611125565b91505092915050565b61117081610eaa565b82525050565b600060208201905061118b6000830184611167565b92915050565b6000815190506111a081610eb4565b92915050565b6000602082840312156111bc576111bb610ea0565b5b60006111ca84828501611191565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e742073686172657300000000000000000000000000600082015250565b600061121a6013836111d3565b9150611225826111e4565b602082019050919050565b600060208201905081810360008301526112498161120d565b9050919050565b60006060820190506112656000830186610e6c565b6112726020830185610e6c565b61127f6040830184611167565b949350505050565b61129081610f49565b811461129b57600080fd5b50565b6000815190506112ad81611287565b92915050565b6000602082840312156112c9576112c8610ea0565b5b60006112d78482850161129e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061131a82610eaa565b915061132583610eaa565b925082820190508082111561133d5761133c6112e0565b5b92915050565b600061134e82610d0c565b9050919050565b61135e81611343565b811461136957600080fd5b50565b60008151905061137b81611355565b92915050565b6000806040838503121561139857611397610ea0565b5b60006113a68582860161136c565b92505060206113b785828601611191565b9150509250929050565b7f4e6f2070656e64696e67207769746864726177616c0000000000000000000000600082015250565b60006113f76015836111d3565b9150611402826113c1565b602082019050919050565b60006020820190508181036000830152611426816113ea565b9050919050565b600061143882610eaa565b915061144383610eaa565b925082820390508181111561145b5761145a6112e0565b5b92915050565b60006040820190506114766000830185610e6c565b6114836020830184611167565b9392505050565b600082825260208201905092915050565b50565b60006114ab60008361148a565b91506114b68261149b565b600082019050919050565b60006040820190506114d66000830184610e6c565b81810360208301526114e78161149e565b905092915050565b7f4e6f7420636f6d706c69616e7400000000000000000000000000000000000000600082015250565b6000611525600d836111d3565b9150611530826114ef565b602082019050919050565b6000602082019050818103600083015261155481611518565b9050919050565b7f416c7265616479206465706f7369746564000000000000000000000000000000600082015250565b60006115916011836111d3565b915061159c8261155b565b602082019050919050565b600060208201905081810360008301526115c081611584565b9050919050565b60006040820190506115dc6000830185611167565b6115e96020830184610e6c565b9392505050565b600080fd5b600080fd5b600067ffffffffffffffff82111561161557611614610f9a565b5b61161e82610f89565b9050602081019050919050565b60005b8381101561164957808201518184015260208101905061162e565b60008484015250505050565b6000611668611663846115fa565b610ffa565b90508281526020810184848401111561168457611683610f84565b5b61168f84828561162b565b509392505050565b600082601f8301126116ac576116ab610f7f565b5b81516116bc848260208601611655565b91505092915050565b6000815190506116d48161110e565b92915050565b6000819050919050565b6116ed816116da565b81146116f857600080fd5b50565b60008151905061170a816116e4565b92915050565b600060c08284031215611726576117256115f0565b5b61173060c0610ffa565b9050600082015167ffffffffffffffff8111156117505761174f6115f5565b5b61175c84828501611697565b6000830152506020611770848285016116c5565b6020830152506040611784848285016116fb565b604083015250606061179884828501611191565b60608301525060806117ac84828501611191565b60808301525060a06117c08482850161129e565b60a08301525092915050565b6000602082840312156117e2576117e1610ea0565b5b600082015167ffffffffffffffff811115611800576117ff610ea5565b5b61180c84828501611710565b9150509291505056fea2646970667358221220402ee9f198bd9d12bb83a00a2382bdc35ec257792515b990f362df4a4caae93864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9EE679E8 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBC493FD6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBC493FD6 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xF3F43703 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xFA2DF414 EQ PUSH2 0x246 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x9EE679E8 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xA38C2C3D EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xAA8D5705 EQ PUSH2 0x1AE JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x52D91F9C EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6290865D EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x6C9FA59E EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x8C7BC6D0 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x156 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x2D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x140 PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x198 PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2DC PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x0 PUSH2 0xC40 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST LT ISZERO PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP1 PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x474 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x493 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x12B3 JUMP JUMPDEST POP DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17040713250EC5F668A1C39E7939900E78558350DBAFF0EBEF34268DFA8EA4AC DUP3 PUSH1 0x40 MLOAD PUSH2 0x554 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x5AD PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x641 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x699 SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP3 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x71C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x12B3 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFBDED071A5348837E0658949D85D74B38BB1402E96AC47B17144AE3185A520BD DUP3 PUSH1 0x40 MLOAD PUSH2 0x787 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x79C PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x80E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x805 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x817 DUP2 PUSH2 0xC40 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBAD5B133 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88D SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CE SWAP2 SWAP1 PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x904 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x96E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x965 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBD2A58A2 DUP3 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CB SWAP3 SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xEAC8F5B8 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA86 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xACC SWAP2 SWAP1 PUSH2 0x17CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB34 SWAP3 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C DUP5 PUSH1 0x40 MLOAD PUSH2 0xBAC SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xBC1 PUSH2 0xD04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBDF PUSH2 0x30E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC3E JUMPI PUSH2 0xC02 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC35 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD51 PUSH2 0xD4C PUSH2 0xD47 DUP5 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xD2C JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD63 DUP3 PUSH2 0xD36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD75 DUP3 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD85 DUP2 PUSH2 0xD6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB1 DUP3 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC1 DUP2 PUSH2 0xDA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDDC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDED DUP3 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDFD DUP2 PUSH2 0xDE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE29 DUP3 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE39 DUP2 PUSH2 0xE1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE54 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE65 DUP3 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE75 DUP2 PUSH2 0xE5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE90 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEBD DUP2 PUSH2 0xEAA JUMP JUMPDEST DUP2 EQ PUSH2 0xEC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEDA DUP2 PUSH2 0xEB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF6 JUMPI PUSH2 0xEF5 PUSH2 0xEA0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF04 DUP5 DUP3 DUP6 ADD PUSH2 0xECB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF18 DUP3 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF28 DUP2 PUSH2 0xF0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF43 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5E DUP2 PUSH2 0xF49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF79 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xFD2 DUP3 PUSH2 0xF89 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xFF1 JUMPI PUSH2 0xFF0 PUSH2 0xF9A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1004 PUSH2 0xE96 JUMP JUMPDEST SWAP1 POP PUSH2 0x1010 DUP3 DUP3 PUSH2 0xFC9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1030 JUMPI PUSH2 0x102F PUSH2 0xF9A JUMP JUMPDEST JUMPDEST PUSH2 0x1039 DUP3 PUSH2 0xF89 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1068 PUSH2 0x1063 DUP5 PUSH2 0x1015 JUMP JUMPDEST PUSH2 0xFFA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1084 JUMPI PUSH2 0x1083 PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH2 0x108F DUP5 DUP3 DUP6 PUSH2 0x1046 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10AC JUMPI PUSH2 0x10AB PUSH2 0xF7F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10DB JUMPI PUSH2 0x10DA PUSH2 0xEA0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10F9 JUMPI PUSH2 0x10F8 PUSH2 0xEA5 JUMP JUMPDEST JUMPDEST PUSH2 0x1105 DUP5 DUP3 DUP6 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1117 DUP2 PUSH2 0xE5A JUMP JUMPDEST DUP2 EQ PUSH2 0x1122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1134 DUP2 PUSH2 0x110E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1150 JUMPI PUSH2 0x114F PUSH2 0xEA0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x115E DUP5 DUP3 DUP6 ADD PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1170 DUP2 PUSH2 0xEAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x118B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1167 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11A0 DUP2 PUSH2 0xEB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11BC JUMPI PUSH2 0x11BB PUSH2 0xEA0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11CA DUP5 DUP3 DUP6 ADD PUSH2 0x1191 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742073686172657300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121A PUSH1 0x13 DUP4 PUSH2 0x11D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1225 DUP3 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1249 DUP2 PUSH2 0x120D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1265 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0x1272 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0x127F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1167 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1290 DUP2 PUSH2 0xF49 JUMP JUMPDEST DUP2 EQ PUSH2 0x129B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12AD DUP2 PUSH2 0x1287 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C9 JUMPI PUSH2 0x12C8 PUSH2 0xEA0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12D7 DUP5 DUP3 DUP6 ADD PUSH2 0x129E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x131A DUP3 PUSH2 0xEAA JUMP JUMPDEST SWAP2 POP PUSH2 0x1325 DUP4 PUSH2 0xEAA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x133D JUMPI PUSH2 0x133C PUSH2 0x12E0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134E DUP3 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135E DUP2 PUSH2 0x1343 JUMP JUMPDEST DUP2 EQ PUSH2 0x1369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x137B DUP2 PUSH2 0x1355 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1398 JUMPI PUSH2 0x1397 PUSH2 0xEA0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13A6 DUP6 DUP3 DUP7 ADD PUSH2 0x136C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13B7 DUP6 DUP3 DUP7 ADD PUSH2 0x1191 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2070656E64696E67207769746864726177616C0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F7 PUSH1 0x15 DUP4 PUSH2 0x11D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1402 DUP3 PUSH2 0x13C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1426 DUP2 PUSH2 0x13EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1438 DUP3 PUSH2 0xEAA JUMP JUMPDEST SWAP2 POP PUSH2 0x1443 DUP4 PUSH2 0xEAA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x145B JUMPI PUSH2 0x145A PUSH2 0x12E0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1476 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0x1483 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1167 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AB PUSH1 0x0 DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x14B6 DUP3 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14D6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x14E7 DUP2 PUSH2 0x149E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420636F6D706C69616E7400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1525 PUSH1 0xD DUP4 PUSH2 0x11D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1530 DUP3 PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1554 DUP2 PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479206465706F7369746564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1591 PUSH1 0x11 DUP4 PUSH2 0x11D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x159C DUP3 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15C0 DUP2 PUSH2 0x1584 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15DC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x15E9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1615 JUMPI PUSH2 0x1614 PUSH2 0xF9A JUMP JUMPDEST JUMPDEST PUSH2 0x161E DUP3 PUSH2 0xF89 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1649 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x162E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1668 PUSH2 0x1663 DUP5 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0xFFA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1684 JUMPI PUSH2 0x1683 PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH2 0x168F DUP5 DUP3 DUP6 PUSH2 0x162B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16AC JUMPI PUSH2 0x16AB PUSH2 0xF7F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x16BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1655 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16D4 DUP2 PUSH2 0x110E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16ED DUP2 PUSH2 0x16DA JUMP JUMPDEST DUP2 EQ PUSH2 0x16F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x170A DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1726 JUMPI PUSH2 0x1725 PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST PUSH2 0x1730 PUSH1 0xC0 PUSH2 0xFFA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1750 JUMPI PUSH2 0x174F PUSH2 0x15F5 JUMP JUMPDEST JUMPDEST PUSH2 0x175C DUP5 DUP3 DUP6 ADD PUSH2 0x1697 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1770 DUP5 DUP3 DUP6 ADD PUSH2 0x16C5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1784 DUP5 DUP3 DUP6 ADD PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1798 DUP5 DUP3 DUP6 ADD PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x17AC DUP5 DUP3 DUP6 ADD PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x17C0 DUP5 DUP3 DUP6 ADD PUSH2 0x129E JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E2 JUMPI PUSH2 0x17E1 PUSH2 0xEA0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1800 JUMPI PUSH2 0x17FF PUSH2 0xEA5 JUMP JUMPDEST JUMPDEST PUSH2 0x180C DUP5 DUP3 DUP6 ADD PUSH2 0x1710 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x2E 0xE9 CALL SWAP9 0xBD SWAP14 SLT 0xBB DUP4 LOG0 EXP 0x23 DUP3 0xBD 0xC3 0x5E 0xC2 JUMPI PUSH26 0x2515B990F362DF4A4CAAE93864736F6C63430008140033000000 ","sourceMap":"261:2362:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;301:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;377:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;343:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;463:24:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1863:311:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;417:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;494:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2180:441;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;547:53:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1222:635;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;301:36;;;;;;;;;;;;;:::o;377:34::-;;;;;;;;;;;;;:::o;343:28::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;463:24:26:-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1863:311:26:-;1969:6;1933:10;;;;;;;;;;;:20;;;1954:10;1933:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;1925:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2009:10;;;;;;;;;;;:23;;;2033:10;2053:4;2060:6;2009:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2111:6;2077:18;:30;2096:10;2077:30;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;2148:10;2132:35;;;2160:6;2132:35;;;;;;:::i;:::-;;;;;;;;1863:311;:::o;417:40::-;;;;;;;;;;;;;:::o;494:47::-;;;;;;;;;;;;;;;;;;;;;;:::o;2180:441::-;1531:13:0;:11;:13::i;:::-;2326:12:26::1;2340:14:::0;2369:13:::1;2358:45;;;;;;;;;;;;:::i;:::-;2325:78;;;;2449:6;2421:18;:24;2440:4;2421:24;;;;;;;;;;;;;;;;:34;;2413:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2519:6;2491:18;:24;2510:4;2491:24;;;;;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;;;;;2535:10;;;;;;;;;;;:19;;;2555:4;2561:6;2535:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2601:4;2583:31;;;2607:6;2583:31;;;;;;:::i;:::-;;;;;;;;2253:368;;2180:441:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;547:53:26:-;;;;;;;;;;;;;;;;;:::o;1222:635::-;1288:10;;;;;;;;;;;:28;;;1317:10;1288:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1280:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1384:15;:24;1400:7;1384:24;;;;;;;;;;;;;;;;;;;;;1383:25;1375:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1475:14;;;;;;;;;;;:32;;;1508:7;1525:4;1475:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:4;1541:15;:24;1557:7;1541:24;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1624:33;1660:14;;;;;;;;;;;:23;;;1684:7;1660:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1624:68;;1702:17;1722:5;:15;;;1702:35;;1747:10;;;;;;;;;;;:15;;;1763:10;1775:9;1747:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1830:10;1822:28;;;1842:7;1822:28;;;;;;:::i;:::-;;;;;;;;1270:587;;1222:635;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;7:126:29:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:149::-;558:9;591:37;622:5;591:37;:::i;:::-;578:50;;485:149;;;:::o;640:177::-;750:60;804:5;750:60;:::i;:::-;745:3;738:73;640:177;;:::o;823:268::-;939:4;977:2;966:9;962:18;954:26;;990:94;1081:1;1070:9;1066:17;1057:6;990:94;:::i;:::-;823:268;;;;:::o;1097:151::-;1172:9;1205:37;1236:5;1205:37;:::i;:::-;1192:50;;1097:151;;;:::o;1254:181::-;1366:62;1422:5;1366:62;:::i;:::-;1361:3;1354:75;1254:181;;:::o;1441:272::-;1559:4;1597:2;1586:9;1582:18;1574:26;;1610:96;1703:1;1692:9;1688:17;1679:6;1610:96;:::i;:::-;1441:272;;;;:::o;1719:145::-;1788:9;1821:37;1852:5;1821:37;:::i;:::-;1808:50;;1719:145;;;:::o;1870:169::-;1976:56;2026:5;1976:56;:::i;:::-;1971:3;1964:69;1870:169;;:::o;2045:260::-;2157:4;2195:2;2184:9;2180:18;2172:26;;2208:90;2295:1;2284:9;2280:17;2271:6;2208:90;:::i;:::-;2045:260;;;;:::o;2311:143::-;2378:9;2411:37;2442:5;2411:37;:::i;:::-;2398:50;;2311:143;;;:::o;2460:165::-;2564:54;2612:5;2564:54;:::i;:::-;2559:3;2552:67;2460:165;;:::o;2631:256::-;2741:4;2779:2;2768:9;2764:18;2756:26;;2792:88;2877:1;2866:9;2862:17;2853:6;2792:88;:::i;:::-;2631:256;;;;:::o;2893:96::-;2930:7;2959:24;2977:5;2959:24;:::i;:::-;2948:35;;2893:96;;;:::o;2995:118::-;3082:24;3100:5;3082:24;:::i;:::-;3077:3;3070:37;2995:118;;:::o;3119:222::-;3212:4;3250:2;3239:9;3235:18;3227:26;;3263:71;3331:1;3320:9;3316:17;3307:6;3263:71;:::i;:::-;3119:222;;;;:::o;3347:75::-;3380:6;3413:2;3407:9;3397:19;;3347:75;:::o;3428:117::-;3537:1;3534;3527:12;3551:117;3660:1;3657;3650:12;3674:77;3711:7;3740:5;3729:16;;3674:77;;;:::o;3757:122::-;3830:24;3848:5;3830:24;:::i;:::-;3823:5;3820:35;3810:63;;3869:1;3866;3859:12;3810:63;3757:122;:::o;3885:139::-;3931:5;3969:6;3956:20;3947:29;;3985:33;4012:5;3985:33;:::i;:::-;3885:139;;;;:::o;4030:329::-;4089:6;4138:2;4126:9;4117:7;4113:23;4109:32;4106:119;;;4144:79;;:::i;:::-;4106:119;4264:1;4289:53;4334:7;4325:6;4314:9;4310:22;4289:53;:::i;:::-;4279:63;;4235:117;4030:329;;;;:::o;4365:151::-;4440:9;4473:37;4504:5;4473:37;:::i;:::-;4460:50;;4365:151;;;:::o;4522:181::-;4634:62;4690:5;4634:62;:::i;:::-;4629:3;4622:75;4522:181;;:::o;4709:272::-;4827:4;4865:2;4854:9;4850:18;4842:26;;4878:96;4971:1;4960:9;4956:17;4947:6;4878:96;:::i;:::-;4709:272;;;;:::o;4987:90::-;5021:7;5064:5;5057:13;5050:21;5039:32;;4987:90;;;:::o;5083:109::-;5164:21;5179:5;5164:21;:::i;:::-;5159:3;5152:34;5083:109;;:::o;5198:210::-;5285:4;5323:2;5312:9;5308:18;5300:26;;5336:65;5398:1;5387:9;5383:17;5374:6;5336:65;:::i;:::-;5198:210;;;;:::o;5414:117::-;5523:1;5520;5513:12;5537:117;5646:1;5643;5636:12;5660:102;5701:6;5752:2;5748:7;5743:2;5736:5;5732:14;5728:28;5718:38;;5660:102;;;:::o;5768:180::-;5816:77;5813:1;5806:88;5913:4;5910:1;5903:15;5937:4;5934:1;5927:15;5954:281;6037:27;6059:4;6037:27;:::i;:::-;6029:6;6025:40;6167:6;6155:10;6152:22;6131:18;6119:10;6116:34;6113:62;6110:88;;;6178:18;;:::i;:::-;6110:88;6218:10;6214:2;6207:22;5997:238;5954:281;;:::o;6241:129::-;6275:6;6302:20;;:::i;:::-;6292:30;;6331:33;6359:4;6351:6;6331:33;:::i;:::-;6241:129;;;:::o;6376:307::-;6437:4;6527:18;6519:6;6516:30;6513:56;;;6549:18;;:::i;:::-;6513:56;6587:29;6609:6;6587:29;:::i;:::-;6579:37;;6671:4;6665;6661:15;6653:23;;6376:307;;;:::o;6689:146::-;6786:6;6781:3;6776;6763:30;6827:1;6818:6;6813:3;6809:16;6802:27;6689:146;;;:::o;6841:423::-;6918:5;6943:65;6959:48;7000:6;6959:48;:::i;:::-;6943:65;:::i;:::-;6934:74;;7031:6;7024:5;7017:21;7069:4;7062:5;7058:16;7107:3;7098:6;7093:3;7089:16;7086:25;7083:112;;;7114:79;;:::i;:::-;7083:112;7204:54;7251:6;7246:3;7241;7204:54;:::i;:::-;6924:340;6841:423;;;;;:::o;7283:338::-;7338:5;7387:3;7380:4;7372:6;7368:17;7364:27;7354:122;;7395:79;;:::i;:::-;7354:122;7512:6;7499:20;7537:78;7611:3;7603:6;7596:4;7588:6;7584:17;7537:78;:::i;:::-;7528:87;;7344:277;7283:338;;;;:::o;7627:507::-;7695:6;7744:2;7732:9;7723:7;7719:23;7715:32;7712:119;;;7750:79;;:::i;:::-;7712:119;7898:1;7887:9;7883:17;7870:31;7928:18;7920:6;7917:30;7914:117;;;7950:79;;:::i;:::-;7914:117;8055:62;8109:7;8100:6;8089:9;8085:22;8055:62;:::i;:::-;8045:72;;7841:286;7627:507;;;;:::o;8140:122::-;8213:24;8231:5;8213:24;:::i;:::-;8206:5;8203:35;8193:63;;8252:1;8249;8242:12;8193:63;8140:122;:::o;8268:139::-;8314:5;8352:6;8339:20;8330:29;;8368:33;8395:5;8368:33;:::i;:::-;8268:139;;;;:::o;8413:329::-;8472:6;8521:2;8509:9;8500:7;8496:23;8492:32;8489:119;;;8527:79;;:::i;:::-;8489:119;8647:1;8672:53;8717:7;8708:6;8697:9;8693:22;8672:53;:::i;:::-;8662:63;;8618:117;8413:329;;;;:::o;8748:118::-;8835:24;8853:5;8835:24;:::i;:::-;8830:3;8823:37;8748:118;;:::o;8872:222::-;8965:4;9003:2;8992:9;8988:18;8980:26;;9016:71;9084:1;9073:9;9069:17;9060:6;9016:71;:::i;:::-;8872:222;;;;:::o;9100:143::-;9157:5;9188:6;9182:13;9173:22;;9204:33;9231:5;9204:33;:::i;:::-;9100:143;;;;:::o;9249:351::-;9319:6;9368:2;9356:9;9347:7;9343:23;9339:32;9336:119;;;9374:79;;:::i;:::-;9336:119;9494:1;9519:64;9575:7;9566:6;9555:9;9551:22;9519:64;:::i;:::-;9509:74;;9465:128;9249:351;;;;:::o;9606:169::-;9690:11;9724:6;9719:3;9712:19;9764:4;9759:3;9755:14;9740:29;;9606:169;;;;:::o;9781:::-;9921:21;9917:1;9909:6;9905:14;9898:45;9781:169;:::o;9956:366::-;10098:3;10119:67;10183:2;10178:3;10119:67;:::i;:::-;10112:74;;10195:93;10284:3;10195:93;:::i;:::-;10313:2;10308:3;10304:12;10297:19;;9956:366;;;:::o;10328:419::-;10494:4;10532:2;10521:9;10517:18;10509:26;;10581:9;10575:4;10571:20;10567:1;10556:9;10552:17;10545:47;10609:131;10735:4;10609:131;:::i;:::-;10601:139;;10328:419;;;:::o;10753:442::-;10902:4;10940:2;10929:9;10925:18;10917:26;;10953:71;11021:1;11010:9;11006:17;10997:6;10953:71;:::i;:::-;11034:72;11102:2;11091:9;11087:18;11078:6;11034:72;:::i;:::-;11116;11184:2;11173:9;11169:18;11160:6;11116:72;:::i;:::-;10753:442;;;;;;:::o;11201:116::-;11271:21;11286:5;11271:21;:::i;:::-;11264:5;11261:32;11251:60;;11307:1;11304;11297:12;11251:60;11201:116;:::o;11323:137::-;11377:5;11408:6;11402:13;11393:22;;11424:30;11448:5;11424:30;:::i;:::-;11323:137;;;;:::o;11466:345::-;11533:6;11582:2;11570:9;11561:7;11557:23;11553:32;11550:119;;;11588:79;;:::i;:::-;11550:119;11708:1;11733:61;11786:7;11777:6;11766:9;11762:22;11733:61;:::i;:::-;11723:71;;11679:125;11466:345;;;;:::o;11817:180::-;11865:77;11862:1;11855:88;11962:4;11959:1;11952:15;11986:4;11983:1;11976:15;12003:191;12043:3;12062:20;12080:1;12062:20;:::i;:::-;12057:25;;12096:20;12114:1;12096:20;:::i;:::-;12091:25;;12139:1;12136;12132:9;12125:16;;12160:3;12157:1;12154:10;12151:36;;;12167:18;;:::i;:::-;12151:36;12003:191;;;;:::o;12200:104::-;12245:7;12274:24;12292:5;12274:24;:::i;:::-;12263:35;;12200:104;;;:::o;12310:138::-;12391:32;12417:5;12391:32;:::i;:::-;12384:5;12381:43;12371:71;;12438:1;12435;12428:12;12371:71;12310:138;:::o;12454:159::-;12519:5;12550:6;12544:13;12535:22;;12566:41;12601:5;12566:41;:::i;:::-;12454:159;;;;:::o;12619:523::-;12706:6;12714;12763:2;12751:9;12742:7;12738:23;12734:32;12731:119;;;12769:79;;:::i;:::-;12731:119;12889:1;12914:72;12978:7;12969:6;12958:9;12954:22;12914:72;:::i;:::-;12904:82;;12860:136;13035:2;13061:64;13117:7;13108:6;13097:9;13093:22;13061:64;:::i;:::-;13051:74;;13006:129;12619:523;;;;;:::o;13148:171::-;13288:23;13284:1;13276:6;13272:14;13265:47;13148:171;:::o;13325:366::-;13467:3;13488:67;13552:2;13547:3;13488:67;:::i;:::-;13481:74;;13564:93;13653:3;13564:93;:::i;:::-;13682:2;13677:3;13673:12;13666:19;;13325:366;;;:::o;13697:419::-;13863:4;13901:2;13890:9;13886:18;13878:26;;13950:9;13944:4;13940:20;13936:1;13925:9;13921:17;13914:47;13978:131;14104:4;13978:131;:::i;:::-;13970:139;;13697:419;;;:::o;14122:194::-;14162:4;14182:20;14200:1;14182:20;:::i;:::-;14177:25;;14216:20;14234:1;14216:20;:::i;:::-;14211:25;;14260:1;14257;14253:9;14245:17;;14284:1;14278:4;14275:11;14272:37;;;14289:18;;:::i;:::-;14272:37;14122:194;;;;:::o;14322:332::-;14443:4;14481:2;14470:9;14466:18;14458:26;;14494:71;14562:1;14551:9;14547:17;14538:6;14494:71;:::i;:::-;14575:72;14643:2;14632:9;14628:18;14619:6;14575:72;:::i;:::-;14322:332;;;;;:::o;14660:168::-;14743:11;14777:6;14772:3;14765:19;14817:4;14812:3;14808:14;14793:29;;14660:168;;;;:::o;14834:114::-;;:::o;14954:362::-;15095:3;15116:65;15179:1;15174:3;15116:65;:::i;:::-;15109:72;;15190:93;15279:3;15190:93;:::i;:::-;15308:1;15303:3;15299:11;15292:18;;14954:362;;;:::o;15322:527::-;15515:4;15553:2;15542:9;15538:18;15530:26;;15566:71;15634:1;15623:9;15619:17;15610:6;15566:71;:::i;:::-;15684:9;15678:4;15674:20;15669:2;15658:9;15654:18;15647:48;15712:130;15837:4;15712:130;:::i;:::-;15704:138;;15322:527;;;;:::o;15855:163::-;15995:15;15991:1;15983:6;15979:14;15972:39;15855:163;:::o;16024:366::-;16166:3;16187:67;16251:2;16246:3;16187:67;:::i;:::-;16180:74;;16263:93;16352:3;16263:93;:::i;:::-;16381:2;16376:3;16372:12;16365:19;;16024:366;;;:::o;16396:419::-;16562:4;16600:2;16589:9;16585:18;16577:26;;16649:9;16643:4;16639:20;16635:1;16624:9;16620:17;16613:47;16677:131;16803:4;16677:131;:::i;:::-;16669:139;;16396:419;;;:::o;16821:167::-;16961:19;16957:1;16949:6;16945:14;16938:43;16821:167;:::o;16994:366::-;17136:3;17157:67;17221:2;17216:3;17157:67;:::i;:::-;17150:74;;17233:93;17322:3;17233:93;:::i;:::-;17351:2;17346:3;17342:12;17335:19;;16994:366;;;:::o;17366:419::-;17532:4;17570:2;17559:9;17555:18;17547:26;;17619:9;17613:4;17609:20;17605:1;17594:9;17590:17;17583:47;17647:131;17773:4;17647:131;:::i;:::-;17639:139;;17366:419;;;:::o;17791:332::-;17912:4;17950:2;17939:9;17935:18;17927:26;;17963:71;18031:1;18020:9;18016:17;18007:6;17963:71;:::i;:::-;18044:72;18112:2;18101:9;18097:18;18088:6;18044:72;:::i;:::-;17791:332;;;;;:::o;18129:117::-;18238:1;18235;18228:12;18252:117;18361:1;18358;18351:12;18375:308;18437:4;18527:18;18519:6;18516:30;18513:56;;;18549:18;;:::i;:::-;18513:56;18587:29;18609:6;18587:29;:::i;:::-;18579:37;;18671:4;18665;18661:15;18653:23;;18375:308;;;:::o;18689:246::-;18770:1;18780:113;18794:6;18791:1;18788:13;18780:113;;;18879:1;18874:3;18870:11;18864:18;18860:1;18855:3;18851:11;18844:39;18816:2;18813:1;18809:10;18804:15;;18780:113;;;18927:1;18918:6;18913:3;18909:16;18902:27;18751:184;18689:246;;;:::o;18941:434::-;19030:5;19055:66;19071:49;19113:6;19071:49;:::i;:::-;19055:66;:::i;:::-;19046:75;;19144:6;19137:5;19130:21;19182:4;19175:5;19171:16;19220:3;19211:6;19206:3;19202:16;19199:25;19196:112;;;19227:79;;:::i;:::-;19196:112;19317:52;19362:6;19357:3;19352;19317:52;:::i;:::-;19036:339;18941:434;;;;;:::o;19395:355::-;19462:5;19511:3;19504:4;19496:6;19492:17;19488:27;19478:122;;19519:79;;:::i;:::-;19478:122;19629:6;19623:13;19654:90;19740:3;19732:6;19725:4;19717:6;19713:17;19654:90;:::i;:::-;19645:99;;19468:282;19395:355;;;;:::o;19756:143::-;19813:5;19844:6;19838:13;19829:22;;19860:33;19887:5;19860:33;:::i;:::-;19756:143;;;;:::o;19905:77::-;19942:7;19971:5;19960:16;;19905:77;;;:::o;19988:122::-;20061:24;20079:5;20061:24;:::i;:::-;20054:5;20051:35;20041:63;;20100:1;20097;20090:12;20041:63;19988:122;:::o;20116:143::-;20173:5;20204:6;20198:13;20189:22;;20220:33;20247:5;20220:33;:::i;:::-;20116:143;;;;:::o;20300:1472::-;20383:5;20427:4;20415:9;20410:3;20406:19;20402:30;20399:117;;;20435:79;;:::i;:::-;20399:117;20534:21;20550:4;20534:21;:::i;:::-;20525:30;;20634:1;20623:9;20619:17;20613:24;20664:18;20656:6;20653:30;20650:117;;;20686:79;;:::i;:::-;20650:117;20806:70;20872:3;20863:6;20852:9;20848:22;20806:70;:::i;:::-;20799:4;20792:5;20788:16;20781:96;20565:323;20949:2;20990:60;21046:3;21037:6;21026:9;21022:22;20990:60;:::i;:::-;20983:4;20976:5;20972:16;20965:86;20898:164;21126:2;21167:60;21223:3;21214:6;21203:9;21199:22;21167:60;:::i;:::-;21160:4;21153:5;21149:16;21142:86;21072:167;21303:2;21344:60;21400:3;21391:6;21380:9;21376:22;21344:60;:::i;:::-;21337:4;21330:5;21326:16;21319:86;21249:167;21479:3;21521:60;21577:3;21568:6;21557:9;21553:22;21521:60;:::i;:::-;21514:4;21507:5;21503:16;21496:86;21426:167;21654:3;21696:57;21749:3;21740:6;21729:9;21725:22;21696:57;:::i;:::-;21689:4;21682:5;21678:16;21671:83;21603:162;20300:1472;;;;:::o;21778:550::-;21871:6;21920:2;21908:9;21899:7;21895:23;21891:32;21888:119;;;21926:79;;:::i;:::-;21888:119;22067:1;22056:9;22052:17;22046:24;22097:18;22089:6;22086:30;22083:117;;;22119:79;;:::i;:::-;22083:117;22224:87;22303:7;22294:6;22283:9;22279:22;22224:87;:::i;:::-;22214:97;;22017:304;21778:550;;;;:::o"},"methodIdentifiers":{"assetTokenizer()":"52d91f9c","compliance()":"6290865d","depositAsset(uint256)":"fa2df414","depositedAssets(uint256)":"aa8d5705","owner()":"8da5cb5b","pendingWithdrawals(address)":"f3f43703","renounceOwnership()":"715018a6","requestWithdrawal(uint256)":"9ee679e8","settleWithdrawal(bytes)":"bc493fd6","shareToken()":"6c9fa59e","transferOwnership(address)":"f2fde38b","yieldDistributor()":"a38c2c3d","zkModule()":"8c7bc6d0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AssetTokenizer\",\"name\":\"_assetTokenizer\",\"type\":\"address\"},{\"internalType\":\"contract ShareToken\",\"name\":\"_shareToken\",\"type\":\"address\"},{\"internalType\":\"contract ComplianceModule\",\"name\":\"_compliance\",\"type\":\"address\"},{\"internalType\":\"contract YieldDistributor\",\"name\":\"_yieldDistributor\",\"type\":\"address\"},{\"internalType\":\"contract ZKModule\",\"name\":\"_zkModule\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"WithdrawFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"WithdrawRequest\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"assetTokenizer\",\"outputs\":[{\"internalType\":\"contract AssetTokenizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compliance\",\"outputs\":[{\"internalType\":\"contract ComplianceModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"depositAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"depositedAssets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"requestWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signedReceipt\",\"type\":\"bytes\"}],\"name\":\"settleWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shareToken\",\"outputs\":[{\"internalType\":\"contract ShareToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldDistributor\",\"outputs\":[{\"internalType\":\"contract YieldDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zkModule\",\"outputs\":[{\"internalType\":\"contract ZKModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vault.sol\":\"VaultContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/AssetTokenizer.sol\":{\"keccak256\":\"0x6965b4021fdc67c5c654bce7e5b3cb3aa7c8fd9879fbd96ce59b6d0951635891\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2ee6c592eaab9772564d065549d709526154592f1fd8d3e017f2e6d7562d46c\",\"dweb:/ipfs/QmYCb2GucbK28b6QKJvJxPHQNFQz6JfUqdzXKwCZsEEbcj\"]},\"contracts/ComplianceModule.sol\":{\"keccak256\":\"0x101df4585a4760a8d01060ea524a0e0b4934c553fdc50050eb95f18e27801f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12a3bc46bb74db0ded4b53fdf8f9192944de960196ce27213908449e16b060d2\",\"dweb:/ipfs/QmYicxvZexNHi8vzKF3hEHy8sgLxSPcmmsdtPUm3Ujg4pq\"]},\"contracts/ShareToken.sol\":{\"keccak256\":\"0x904af24224769d698725daa033cf1c1213e74e50b56dfd1736f511f9b843a6dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58c3049a7a8b74a92a72e33e187689cb8594df450e5adfeb400234852643cdfe\",\"dweb:/ipfs/QmfJsYt4yiZaMkwP8H63t4EzjxRRqcNYzyfxLuALJiZaNV\"]},\"contracts/Vault.sol\":{\"keccak256\":\"0xda5d530a92e641fe5359b017e587b5cf0b63756aace8d957efbf6d161d15168a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fded3d7c4a51c3a11104ae3b7cfee88a712b0d92ec24b17645813c353414f84b\",\"dweb:/ipfs/QmXFTkVxvbjF7bGVoU9K38U8APh2L6G4TL2XVg8gV1gopm\"]},\"contracts/YieldDistributor.sol\":{\"keccak256\":\"0xfd8b1bff25cb34435f11030b1f9067d2489e1db588dc1ad6a775a982c13bf565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://227ae4149c54af3981dbc600e42b2990a52c91117c80ded889c0c485cc626f5f\",\"dweb:/ipfs/Qma1HJqTyuHTmFvYGW3KgtR67be3TRuc9fD8AFUEsHVot6\"]},\"contracts/ZKModule.sol\":{\"keccak256\":\"0xea92b2e63c2ff388ff6480895c252ef00c51c2793a4bf49da9bcfbceaca6d762\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51ce9598b95acac277a30ef5720fa012e9c6cd9126c5fbcd1c3924cb89b2b710\",\"dweb:/ipfs/QmaQPsJypfixTAH24iva1nytMevkKYd7kFpW4yfytPuQFt\"]}},\"version\":1}"}},"contracts/YieldDistributor.sol":{"YieldDistributor":{"abi":[{"inputs":[{"internalType":"contract ERC20","name":"_rewardToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"period","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"name":"YieldDistributed","type":"event"},{"inputs":[{"internalType":"uint256","name":"period","type":"uint256"},{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"claimYield","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"claimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"period","type":"uint256"},{"internalType":"bytes32","name":"_merkleRoot","type":"bytes32"}],"name":"distributeYield","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"merkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardToken","outputs":[{"internalType":"contract ERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8930":{"entryPoint":null,"id":8930,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":263,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_contract$_ERC20_$824_fromMemory":{"entryPoint":562,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_ERC20_$824_fromMemory":{"entryPoint":585,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":635,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":652,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":496,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_ERC20_$824":{"entryPoint":516,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":464,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":459,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_contract$_ERC20_$824":{"entryPoint":536,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1744:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"379:81:29","statements":[{"nodeType":"YulAssignment","src":"389:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:29"},"nodeType":"YulFunctionCall","src":"400:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:29","type":""}],"src":"334:126:29"},{"body":{"nodeType":"YulBlock","src":"511:51:29","statements":[{"nodeType":"YulAssignment","src":"521:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:29"},"nodeType":"YulFunctionCall","src":"532:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:29","type":""}],"src":"466:96:29"},{"body":{"nodeType":"YulBlock","src":"626:51:29","statements":[{"nodeType":"YulAssignment","src":"636:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"665:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"647:17:29"},"nodeType":"YulFunctionCall","src":"647:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"636:7:29"}]}]},"name":"cleanup_t_contract$_ERC20_$824","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"608:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"618:7:29","type":""}],"src":"568:109:29"},{"body":{"nodeType":"YulBlock","src":"739:92:29","statements":[{"body":{"nodeType":"YulBlock","src":"809:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"818:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"821:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"811:6:29"},"nodeType":"YulFunctionCall","src":"811:12:29"},"nodeType":"YulExpressionStatement","src":"811:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"762:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"800:5:29"}],"functionName":{"name":"cleanup_t_contract$_ERC20_$824","nodeType":"YulIdentifier","src":"769:30:29"},"nodeType":"YulFunctionCall","src":"769:37:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"759:2:29"},"nodeType":"YulFunctionCall","src":"759:48:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"752:6:29"},"nodeType":"YulFunctionCall","src":"752:56:29"},"nodeType":"YulIf","src":"749:76:29"}]},"name":"validator_revert_t_contract$_ERC20_$824","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"732:5:29","type":""}],"src":"683:148:29"},{"body":{"nodeType":"YulBlock","src":"913:93:29","statements":[{"nodeType":"YulAssignment","src":"923:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"938:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"932:5:29"},"nodeType":"YulFunctionCall","src":"932:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"923:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"994:5:29"}],"functionName":{"name":"validator_revert_t_contract$_ERC20_$824","nodeType":"YulIdentifier","src":"954:39:29"},"nodeType":"YulFunctionCall","src":"954:46:29"},"nodeType":"YulExpressionStatement","src":"954:46:29"}]},"name":"abi_decode_t_contract$_ERC20_$824_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"891:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"899:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"907:5:29","type":""}],"src":"837:169:29"},{"body":{"nodeType":"YulBlock","src":"1102:287:29","statements":[{"body":{"nodeType":"YulBlock","src":"1148:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1150:77:29"},"nodeType":"YulFunctionCall","src":"1150:79:29"},"nodeType":"YulExpressionStatement","src":"1150:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1123:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1132:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1119:3:29"},"nodeType":"YulFunctionCall","src":"1119:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1144:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1115:3:29"},"nodeType":"YulFunctionCall","src":"1115:32:29"},"nodeType":"YulIf","src":"1112:119:29"},{"nodeType":"YulBlock","src":"1241:141:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1256:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1270:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1260:6:29","type":""}]},{"nodeType":"YulAssignment","src":"1285:87:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1344:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1355:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1340:3:29"},"nodeType":"YulFunctionCall","src":"1340:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1364:7:29"}],"functionName":{"name":"abi_decode_t_contract$_ERC20_$824_fromMemory","nodeType":"YulIdentifier","src":"1295:44:29"},"nodeType":"YulFunctionCall","src":"1295:77:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1285:6:29"}]}]}]},"name":"abi_decode_tuple_t_contract$_ERC20_$824_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1072:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1083:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1095:6:29","type":""}],"src":"1012:377:29"},{"body":{"nodeType":"YulBlock","src":"1460:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1477:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1500:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1482:17:29"},"nodeType":"YulFunctionCall","src":"1482:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1470:6:29"},"nodeType":"YulFunctionCall","src":"1470:37:29"},"nodeType":"YulExpressionStatement","src":"1470:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1448:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1455:3:29","type":""}],"src":"1395:118:29"},{"body":{"nodeType":"YulBlock","src":"1617:124:29","statements":[{"nodeType":"YulAssignment","src":"1627:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1639:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1650:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1635:3:29"},"nodeType":"YulFunctionCall","src":"1635:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1627:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1707:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1720:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1731:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1716:3:29"},"nodeType":"YulFunctionCall","src":"1716:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1663:43:29"},"nodeType":"YulFunctionCall","src":"1663:71:29"},"nodeType":"YulExpressionStatement","src":"1663:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1589:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1601:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1612:4:29","type":""}],"src":"1519:222:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC20_$824(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC20_$824(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$824(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC20_$824_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$824(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$824_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$824_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200106038038062001060833981810160405281019062000037919062000249565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200028c565b60405180910390fd5b620000be816200010760201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620002a9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fd82620001d0565b9050919050565b60006200021182620001f0565b9050919050565b620002238162000204565b81146200022f57600080fd5b50565b600081519050620002438162000218565b92915050565b600060208284031215620002625762000261620001cb565b5b6000620002728482850162000232565b91505092915050565b6200028681620001f0565b82525050565b6000602082019050620002a360008301846200027b565b92915050565b610da780620002b96000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b282d0021161005b578063b282d00214610103578063de14bdd81461011f578063f2fde38b1461013b578063f7c618c11461015757610088565b8063120aa8771461008d5780632eb4a7ab146100bd578063715018a6146100db5780638da5cb5b146100e5575b600080fd5b6100a760048036038101906100a291906107e8565b610175565b6040516100b49190610843565b60405180910390f35b6100c56101a4565b6040516100d29190610877565b60405180910390f35b6100e36101aa565b005b6100ed6101be565b6040516100fa91906108a1565b60405180910390f35b61011d600480360381019061011891906108e8565b6101e7565b005b6101396004803603810190610134919061098d565b610232565b005b61015560048036038101906101509190610a15565b61049c565b005b61015f610522565b60405161016c9190610aa1565b60405180910390f35b60036020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60025481565b6101b2610548565b6101bc60006105cf565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101ef610548565b80600281905550817fd72b4167ddee98b03fa0464106eecc202a58cd62dc5b9079b75ad44321497fc4826040516102269190610877565b60405180910390a25050565b6003600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156102d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c790610b19565b60405180910390fd5b600084846040516020016102e5929190610ba2565b60405160208183030381529060405280519060200120905061034b838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060025483610693565b61038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038190610c1a565b60405180910390fd5b60016003600088815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86866040518363ffffffff1660e01b8152600401610450929190610c49565b6020604051808303816000875af115801561046f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104939190610c9e565b50505050505050565b6104a4610548565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105165760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161050d91906108a1565b60405180910390fd5b61051f816105cf565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105506106aa565b73ffffffffffffffffffffffffffffffffffffffff1661056e6101be565b73ffffffffffffffffffffffffffffffffffffffff16146105cd576105916106aa565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016105c491906108a1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000826106a085846106b2565b1490509392505050565b600033905090565b60008082905060005b84518110156106fd576106e8828683815181106106db576106da610ccb565b5b6020026020010151610708565b915080806106f590610d29565b9150506106bb565b508091505092915050565b60008183106107205761071b8284610733565b61072b565b61072a8383610733565b5b905092915050565b600082600052816020526040600020905092915050565b600080fd5b600080fd5b6000819050919050565b61076781610754565b811461077257600080fd5b50565b6000813590506107848161075e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b58261078a565b9050919050565b6107c5816107aa565b81146107d057600080fd5b50565b6000813590506107e2816107bc565b92915050565b600080604083850312156107ff576107fe61074a565b5b600061080d85828601610775565b925050602061081e858286016107d3565b9150509250929050565b60008115159050919050565b61083d81610828565b82525050565b60006020820190506108586000830184610834565b92915050565b6000819050919050565b6108718161085e565b82525050565b600060208201905061088c6000830184610868565b92915050565b61089b816107aa565b82525050565b60006020820190506108b66000830184610892565b92915050565b6108c58161085e565b81146108d057600080fd5b50565b6000813590506108e2816108bc565b92915050565b600080604083850312156108ff576108fe61074a565b5b600061090d85828601610775565b925050602061091e858286016108d3565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f84011261094d5761094c610928565b5b8235905067ffffffffffffffff81111561096a5761096961092d565b5b60208301915083602082028301111561098657610985610932565b5b9250929050565b6000806000806000608086880312156109a9576109a861074a565b5b60006109b788828901610775565b95505060206109c8888289016107d3565b94505060406109d988828901610775565b935050606086013567ffffffffffffffff8111156109fa576109f961074f565b5b610a0688828901610937565b92509250509295509295909350565b600060208284031215610a2b57610a2a61074a565b5b6000610a39848285016107d3565b91505092915050565b6000819050919050565b6000610a67610a62610a5d8461078a565b610a42565b61078a565b9050919050565b6000610a7982610a4c565b9050919050565b6000610a8b82610a6e565b9050919050565b610a9b81610a80565b82525050565b6000602082019050610ab66000830184610a92565b92915050565b600082825260208201905092915050565b7f416c726561647920636c61696d65640000000000000000000000000000000000600082015250565b6000610b03600f83610abc565b9150610b0e82610acd565b602082019050919050565b60006020820190508181036000830152610b3281610af6565b9050919050565b60008160601b9050919050565b6000610b5182610b39565b9050919050565b6000610b6382610b46565b9050919050565b610b7b610b76826107aa565b610b58565b82525050565b6000819050919050565b610b9c610b9782610754565b610b81565b82525050565b6000610bae8285610b6a565b601482019150610bbe8284610b8b565b6020820191508190509392505050565b7f496e76616c69642070726f6f6600000000000000000000000000000000000000600082015250565b6000610c04600d83610abc565b9150610c0f82610bce565b602082019050919050565b60006020820190508181036000830152610c3381610bf7565b9050919050565b610c4381610754565b82525050565b6000604082019050610c5e6000830185610892565b610c6b6020830184610c3a565b9392505050565b610c7b81610828565b8114610c8657600080fd5b50565b600081519050610c9881610c72565b92915050565b600060208284031215610cb457610cb361074a565b5b6000610cc284828501610c89565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d3482610754565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d6657610d65610cfa565b5b60018201905091905056fea26469706673582212205ef065e6c08f2a0e9eb763bea1300f5a937e607a9705b15101803ec1b33a150464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1060 CODESIZE SUB DUP1 PUSH3 0x1060 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x249 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0x107 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x2A9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1FD DUP3 PUSH3 0x1D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x211 DUP3 PUSH3 0x1F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x223 DUP2 PUSH3 0x204 JUMP JUMPDEST DUP2 EQ PUSH3 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x243 DUP2 PUSH3 0x218 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x262 JUMPI PUSH3 0x261 PUSH3 0x1CB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x272 DUP5 DUP3 DUP6 ADD PUSH3 0x232 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x286 DUP2 PUSH3 0x1F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x27B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDA7 DUP1 PUSH3 0x2B9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB282D002 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB282D002 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xDE14BDD8 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x157 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x120AA877 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH2 0x1AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH2 0x1BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x8E8 JUMP JUMPDEST PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x98D JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x548 JUMP JUMPDEST PUSH2 0x1BC PUSH1 0x0 PUSH2 0x5CF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x548 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0xD72B4167DDEE98B03FA0464106EECC202A58CD62DC5B9079B75AD44321497FC4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C7 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2E5 SWAP3 SWAP2 SWAP1 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x34B DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x2 SLOAD DUP4 PUSH2 0x693 JUMP JUMPDEST PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x450 SWAP3 SWAP2 SWAP1 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0xC9E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4A4 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x516 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51F DUP2 PUSH2 0x5CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x550 PUSH2 0x6AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x56E PUSH2 0x1BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5CD JUMPI PUSH2 0x591 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x6A0 DUP6 DUP5 PUSH2 0x6B2 JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6FD JUMPI PUSH2 0x6E8 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6DB JUMPI PUSH2 0x6DA PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x708 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x6F5 SWAP1 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6BB JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x720 JUMPI PUSH2 0x71B DUP3 DUP5 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH2 0x72A DUP4 DUP4 PUSH2 0x733 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x767 DUP2 PUSH2 0x754 JUMP JUMPDEST DUP2 EQ PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x784 DUP2 PUSH2 0x75E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B5 DUP3 PUSH2 0x78A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C5 DUP2 PUSH2 0x7AA JUMP JUMPDEST DUP2 EQ PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7E2 DUP2 PUSH2 0x7BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7FF JUMPI PUSH2 0x7FE PUSH2 0x74A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x80D DUP6 DUP3 DUP7 ADD PUSH2 0x775 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x81E DUP6 DUP3 DUP7 ADD PUSH2 0x7D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x83D DUP2 PUSH2 0x828 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x858 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x834 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x871 DUP2 PUSH2 0x85E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x88C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x868 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x89B DUP2 PUSH2 0x7AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x892 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C5 DUP2 PUSH2 0x85E JUMP JUMPDEST DUP2 EQ PUSH2 0x8D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8E2 DUP2 PUSH2 0x8BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8FF JUMPI PUSH2 0x8FE PUSH2 0x74A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x90D DUP6 DUP3 DUP7 ADD PUSH2 0x775 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x91E DUP6 DUP3 DUP7 ADD PUSH2 0x8D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x94D JUMPI PUSH2 0x94C PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x96A JUMPI PUSH2 0x969 PUSH2 0x92D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x986 JUMPI PUSH2 0x985 PUSH2 0x932 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x9A9 JUMPI PUSH2 0x9A8 PUSH2 0x74A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9B7 DUP9 DUP3 DUP10 ADD PUSH2 0x775 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x9C8 DUP9 DUP3 DUP10 ADD PUSH2 0x7D3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x9D9 DUP9 DUP3 DUP10 ADD PUSH2 0x775 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9FA JUMPI PUSH2 0x9F9 PUSH2 0x74F JUMP JUMPDEST JUMPDEST PUSH2 0xA06 DUP9 DUP3 DUP10 ADD PUSH2 0x937 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2B JUMPI PUSH2 0xA2A PUSH2 0x74A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA39 DUP5 DUP3 DUP6 ADD PUSH2 0x7D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA67 PUSH2 0xA62 PUSH2 0xA5D DUP5 PUSH2 0x78A JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA79 DUP3 PUSH2 0xA4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8B DUP3 PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9B DUP2 PUSH2 0xA80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAB6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB03 PUSH1 0xF DUP4 PUSH2 0xABC JUMP JUMPDEST SWAP2 POP PUSH2 0xB0E DUP3 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB32 DUP2 PUSH2 0xAF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB51 DUP3 PUSH2 0xB39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB63 DUP3 PUSH2 0xB46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7B PUSH2 0xB76 DUP3 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9C PUSH2 0xB97 DUP3 PUSH2 0x754 JUMP JUMPDEST PUSH2 0xB81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAE DUP3 DUP6 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xBBE DUP3 DUP5 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642070726F6F6600000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC04 PUSH1 0xD DUP4 PUSH2 0xABC JUMP JUMPDEST SWAP2 POP PUSH2 0xC0F DUP3 PUSH2 0xBCE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC33 DUP2 PUSH2 0xBF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC43 DUP2 PUSH2 0x754 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC5E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x892 JUMP JUMPDEST PUSH2 0xC6B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC3A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC7B DUP2 PUSH2 0x828 JUMP JUMPDEST DUP2 EQ PUSH2 0xC86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC98 DUP2 PUSH2 0xC72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB4 JUMPI PUSH2 0xCB3 PUSH2 0x74A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCC2 DUP5 DUP3 DUP6 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD34 DUP3 PUSH2 0x754 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xD66 JUMPI PUSH2 0xD65 PUSH2 0xCFA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E CREATE PUSH6 0xE6C08F2A0E9E 0xB7 PUSH4 0xBEA1300F GAS SWAP4 PUSH31 0x607A9705B15101803EC1B33A150464736F6C63430008140033000000000000 ","sourceMap":"237:936:27:-:0;;;480:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;520:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;556:12:27::1;542:11;;:26;;;;;;;;;;;;;;;;;;480:95:::0;237:936;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:29:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:109::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;568:109;;;:::o;683:148::-;769:37;800:5;769:37;:::i;:::-;762:5;759:48;749:76;;821:1;818;811:12;749:76;683:148;:::o;837:169::-;907:5;938:6;932:13;923:22;;954:46;994:5;954:46;:::i;:::-;837:169;;;;:::o;1012:377::-;1095:6;1144:2;1132:9;1123:7;1119:23;1115:32;1112:119;;;1150:79;;:::i;:::-;1112:119;1270:1;1295:77;1364:7;1355:6;1344:9;1340:22;1295:77;:::i;:::-;1285:87;;1241:141;1012:377;;;;:::o;1395:118::-;1482:24;1500:5;1482:24;:::i;:::-;1477:3;1470:37;1395:118;;:::o;1519:222::-;1612:4;1650:2;1639:9;1635:18;1627:26;;1663:71;1731:1;1720:9;1716:17;1707:6;1663:71;:::i;:::-;1519:222;;;;:::o;237:936:27:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":1352,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1130":{"entryPoint":1706,"id":1130,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":1487,"id":146,"parameterSlots":1,"returnSlots":0},"@claimYield_9007":{"entryPoint":562,"id":9007,"parameterSlots":5,"returnSlots":0},"@claimed_8909":{"entryPoint":373,"id":8909,"parameterSlots":0,"returnSlots":0},"@commutativeKeccak256_3613":{"entryPoint":1800,"id":3613,"parameterSlots":2,"returnSlots":1},"@distributeYield_8949":{"entryPoint":487,"id":8949,"parameterSlots":2,"returnSlots":0},"@efficientKeccak256_3625":{"entryPoint":1843,"id":3625,"parameterSlots":2,"returnSlots":1},"@merkleRoot_8903":{"entryPoint":420,"id":8903,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":446,"id":67,"parameterSlots":0,"returnSlots":1},"@processProof_3696":{"entryPoint":1714,"id":3696,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":426,"id":98,"parameterSlots":0,"returnSlots":0},"@rewardToken_8901":{"entryPoint":1314,"id":8901,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1180,"id":126,"parameterSlots":1,"returnSlots":0},"@verify_3655":{"entryPoint":1683,"id":3655,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2003,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":2359,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool_fromMemory":{"entryPoint":3209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":2259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1909,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2581,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3230,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":2024,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_uint256t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":2445,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256t_bytes32":{"entryPoint":2280,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2194,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":2922,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2100,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2152,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ERC20_$824_to_t_address_fromStack":{"entryPoint":2706,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack":{"entryPoint":2806,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639_to_t_string_memory_ptr_fromStack":{"entryPoint":3063,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3130,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":2955,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":2978,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":3145,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2115,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":2167,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ERC20_$824__to_t_address__fromStack_reversed":{"entryPoint":2721,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2841,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3098,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2748,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1962,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2088,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2142,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1930,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1876,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ERC20_$824_to_t_address":{"entryPoint":2688,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":2670,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":2636,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":2626,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":3369,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":2904,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":2886,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":2945,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3322,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3275,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":2349,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2344,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":2354,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1871,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1866,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_96":{"entryPoint":2873,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf":{"entryPoint":2765,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639":{"entryPoint":3022,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1980,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":3186,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":2236,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1886,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11763:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"379:32:29","statements":[{"nodeType":"YulAssignment","src":"389:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:29","type":""}],"src":"334:77:29"},{"body":{"nodeType":"YulBlock","src":"460:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:29"},"nodeType":"YulFunctionCall","src":"519:12:29"},"nodeType":"YulExpressionStatement","src":"519:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:29"},"nodeType":"YulFunctionCall","src":"490:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:29"},"nodeType":"YulFunctionCall","src":"480:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:29"},"nodeType":"YulFunctionCall","src":"473:43:29"},"nodeType":"YulIf","src":"470:63:29"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:29","type":""}],"src":"417:122:29"},{"body":{"nodeType":"YulBlock","src":"597:87:29","statements":[{"nodeType":"YulAssignment","src":"607:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:29"},"nodeType":"YulFunctionCall","src":"616:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:29"},"nodeType":"YulFunctionCall","src":"645:33:29"},"nodeType":"YulExpressionStatement","src":"645:33:29"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:29","type":""}],"src":"545:139:29"},{"body":{"nodeType":"YulBlock","src":"735:81:29","statements":[{"nodeType":"YulAssignment","src":"745:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"760:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"767:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"756:3:29"},"nodeType":"YulFunctionCall","src":"756:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"745:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"717:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"727:7:29","type":""}],"src":"690:126:29"},{"body":{"nodeType":"YulBlock","src":"867:51:29","statements":[{"nodeType":"YulAssignment","src":"877:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"906:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"888:17:29"},"nodeType":"YulFunctionCall","src":"888:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"877:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"849:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"859:7:29","type":""}],"src":"822:96:29"},{"body":{"nodeType":"YulBlock","src":"967:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:29"},"nodeType":"YulFunctionCall","src":"1026:12:29"},"nodeType":"YulExpressionStatement","src":"1026:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"997:17:29"},"nodeType":"YulFunctionCall","src":"997:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:29"},"nodeType":"YulFunctionCall","src":"987:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:29"},"nodeType":"YulFunctionCall","src":"980:43:29"},"nodeType":"YulIf","src":"977:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:29","type":""}],"src":"924:122:29"},{"body":{"nodeType":"YulBlock","src":"1104:87:29","statements":[{"nodeType":"YulAssignment","src":"1114:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:29"},"nodeType":"YulFunctionCall","src":"1123:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1152:26:29"},"nodeType":"YulFunctionCall","src":"1152:33:29"},"nodeType":"YulExpressionStatement","src":"1152:33:29"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:29","type":""}],"src":"1052:139:29"},{"body":{"nodeType":"YulBlock","src":"1280:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:29"},"nodeType":"YulFunctionCall","src":"1328:79:29"},"nodeType":"YulExpressionStatement","src":"1328:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:29"},"nodeType":"YulFunctionCall","src":"1297:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:29"},"nodeType":"YulFunctionCall","src":"1293:32:29"},"nodeType":"YulIf","src":"1290:119:29"},{"nodeType":"YulBlock","src":"1419:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:29","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:29"},"nodeType":"YulFunctionCall","src":"1494:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1473:20:29"},"nodeType":"YulFunctionCall","src":"1473:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:29"}]}]},{"nodeType":"YulBlock","src":"1546:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:29","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:29"},"nodeType":"YulFunctionCall","src":"1622:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1601:20:29"},"nodeType":"YulFunctionCall","src":"1601:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:29","type":""}],"src":"1197:474:29"},{"body":{"nodeType":"YulBlock","src":"1719:48:29","statements":[{"nodeType":"YulAssignment","src":"1729:32:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1754:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1747:6:29"},"nodeType":"YulFunctionCall","src":"1747:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1740:6:29"},"nodeType":"YulFunctionCall","src":"1740:21:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1729:7:29"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1701:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1711:7:29","type":""}],"src":"1677:90:29"},{"body":{"nodeType":"YulBlock","src":"1832:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1849:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1869:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1854:14:29"},"nodeType":"YulFunctionCall","src":"1854:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1842:6:29"},"nodeType":"YulFunctionCall","src":"1842:34:29"},"nodeType":"YulExpressionStatement","src":"1842:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1820:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1827:3:29","type":""}],"src":"1773:109:29"},{"body":{"nodeType":"YulBlock","src":"1980:118:29","statements":[{"nodeType":"YulAssignment","src":"1990:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2002:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2013:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1998:3:29"},"nodeType":"YulFunctionCall","src":"1998:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1990:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2064:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2077:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2088:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2073:3:29"},"nodeType":"YulFunctionCall","src":"2073:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"2026:37:29"},"nodeType":"YulFunctionCall","src":"2026:65:29"},"nodeType":"YulExpressionStatement","src":"2026:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1952:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1964:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1975:4:29","type":""}],"src":"1888:210:29"},{"body":{"nodeType":"YulBlock","src":"2149:32:29","statements":[{"nodeType":"YulAssignment","src":"2159:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"2170:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2159:7:29"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2131:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2141:7:29","type":""}],"src":"2104:77:29"},{"body":{"nodeType":"YulBlock","src":"2252:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2269:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2292:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2274:17:29"},"nodeType":"YulFunctionCall","src":"2274:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2262:6:29"},"nodeType":"YulFunctionCall","src":"2262:37:29"},"nodeType":"YulExpressionStatement","src":"2262:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2240:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2247:3:29","type":""}],"src":"2187:118:29"},{"body":{"nodeType":"YulBlock","src":"2409:124:29","statements":[{"nodeType":"YulAssignment","src":"2419:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2431:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2442:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2427:3:29"},"nodeType":"YulFunctionCall","src":"2427:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2419:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2499:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2512:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2523:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2508:3:29"},"nodeType":"YulFunctionCall","src":"2508:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2455:43:29"},"nodeType":"YulFunctionCall","src":"2455:71:29"},"nodeType":"YulExpressionStatement","src":"2455:71:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2381:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2393:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2404:4:29","type":""}],"src":"2311:222:29"},{"body":{"nodeType":"YulBlock","src":"2604:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2621:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2644:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2626:17:29"},"nodeType":"YulFunctionCall","src":"2626:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2614:6:29"},"nodeType":"YulFunctionCall","src":"2614:37:29"},"nodeType":"YulExpressionStatement","src":"2614:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2592:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2599:3:29","type":""}],"src":"2539:118:29"},{"body":{"nodeType":"YulBlock","src":"2761:124:29","statements":[{"nodeType":"YulAssignment","src":"2771:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2783:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2794:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2779:3:29"},"nodeType":"YulFunctionCall","src":"2779:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2771:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2851:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2864:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2875:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2860:3:29"},"nodeType":"YulFunctionCall","src":"2860:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2807:43:29"},"nodeType":"YulFunctionCall","src":"2807:71:29"},"nodeType":"YulExpressionStatement","src":"2807:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2733:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2745:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2756:4:29","type":""}],"src":"2663:222:29"},{"body":{"nodeType":"YulBlock","src":"2934:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"2991:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3000:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3003:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2993:6:29"},"nodeType":"YulFunctionCall","src":"2993:12:29"},"nodeType":"YulExpressionStatement","src":"2993:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2957:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2982:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2964:17:29"},"nodeType":"YulFunctionCall","src":"2964:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2954:2:29"},"nodeType":"YulFunctionCall","src":"2954:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2947:6:29"},"nodeType":"YulFunctionCall","src":"2947:43:29"},"nodeType":"YulIf","src":"2944:63:29"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2927:5:29","type":""}],"src":"2891:122:29"},{"body":{"nodeType":"YulBlock","src":"3071:87:29","statements":[{"nodeType":"YulAssignment","src":"3081:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3103:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3090:12:29"},"nodeType":"YulFunctionCall","src":"3090:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3081:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3146:5:29"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"3119:26:29"},"nodeType":"YulFunctionCall","src":"3119:33:29"},"nodeType":"YulExpressionStatement","src":"3119:33:29"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3049:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3057:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3065:5:29","type":""}],"src":"3019:139:29"},{"body":{"nodeType":"YulBlock","src":"3247:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"3293:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3295:77:29"},"nodeType":"YulFunctionCall","src":"3295:79:29"},"nodeType":"YulExpressionStatement","src":"3295:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3268:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3277:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3264:3:29"},"nodeType":"YulFunctionCall","src":"3264:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3289:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3260:3:29"},"nodeType":"YulFunctionCall","src":"3260:32:29"},"nodeType":"YulIf","src":"3257:119:29"},{"nodeType":"YulBlock","src":"3386:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3401:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3415:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3405:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3430:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3465:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3476:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3461:3:29"},"nodeType":"YulFunctionCall","src":"3461:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3485:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3440:20:29"},"nodeType":"YulFunctionCall","src":"3440:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3430:6:29"}]}]},{"nodeType":"YulBlock","src":"3513:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3528:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3542:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3532:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3558:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3593:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3604:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3589:3:29"},"nodeType":"YulFunctionCall","src":"3589:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3613:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3568:20:29"},"nodeType":"YulFunctionCall","src":"3568:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3558:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3209:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3220:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3232:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3240:6:29","type":""}],"src":"3164:474:29"},{"body":{"nodeType":"YulBlock","src":"3733:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:29"},"nodeType":"YulFunctionCall","src":"3743:12:29"},"nodeType":"YulExpressionStatement","src":"3743:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3644:117:29"},{"body":{"nodeType":"YulBlock","src":"3856:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3873:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3876:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3866:6:29"},"nodeType":"YulFunctionCall","src":"3866:12:29"},"nodeType":"YulExpressionStatement","src":"3866:12:29"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"3767:117:29"},{"body":{"nodeType":"YulBlock","src":"3979:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3996:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3999:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3989:6:29"},"nodeType":"YulFunctionCall","src":"3989:12:29"},"nodeType":"YulExpressionStatement","src":"3989:12:29"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"3890:117:29"},{"body":{"nodeType":"YulBlock","src":"4120:478:29","statements":[{"body":{"nodeType":"YulBlock","src":"4169:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4171:77:29"},"nodeType":"YulFunctionCall","src":"4171:79:29"},"nodeType":"YulExpressionStatement","src":"4171:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4148:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4156:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4144:3:29"},"nodeType":"YulFunctionCall","src":"4144:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"4163:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4140:3:29"},"nodeType":"YulFunctionCall","src":"4140:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4133:6:29"},"nodeType":"YulFunctionCall","src":"4133:35:29"},"nodeType":"YulIf","src":"4130:122:29"},{"nodeType":"YulAssignment","src":"4261:30:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4284:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4271:12:29"},"nodeType":"YulFunctionCall","src":"4271:20:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4261:6:29"}]},{"body":{"nodeType":"YulBlock","src":"4334:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"4336:77:29"},"nodeType":"YulFunctionCall","src":"4336:79:29"},"nodeType":"YulExpressionStatement","src":"4336:79:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4306:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4314:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4303:2:29"},"nodeType":"YulFunctionCall","src":"4303:30:29"},"nodeType":"YulIf","src":"4300:117:29"},{"nodeType":"YulAssignment","src":"4426:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4442:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4450:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4438:3:29"},"nodeType":"YulFunctionCall","src":"4438:17:29"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"4426:8:29"}]},{"body":{"nodeType":"YulBlock","src":"4509:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"4511:77:29"},"nodeType":"YulFunctionCall","src":"4511:79:29"},"nodeType":"YulExpressionStatement","src":"4511:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"4474:8:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4488:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4496:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4484:3:29"},"nodeType":"YulFunctionCall","src":"4484:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4470:3:29"},"nodeType":"YulFunctionCall","src":"4470:32:29"},{"name":"end","nodeType":"YulIdentifier","src":"4504:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4467:2:29"},"nodeType":"YulFunctionCall","src":"4467:41:29"},"nodeType":"YulIf","src":"4464:128:29"}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4087:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"4095:3:29","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"4103:8:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"4113:6:29","type":""}],"src":"4030:568:29"},{"body":{"nodeType":"YulBlock","src":"4756:843:29","statements":[{"body":{"nodeType":"YulBlock","src":"4803:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4805:77:29"},"nodeType":"YulFunctionCall","src":"4805:79:29"},"nodeType":"YulExpressionStatement","src":"4805:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4777:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4786:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4773:3:29"},"nodeType":"YulFunctionCall","src":"4773:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4798:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4769:3:29"},"nodeType":"YulFunctionCall","src":"4769:33:29"},"nodeType":"YulIf","src":"4766:120:29"},{"nodeType":"YulBlock","src":"4896:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4911:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4925:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4915:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4940:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4975:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4986:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4971:3:29"},"nodeType":"YulFunctionCall","src":"4971:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4995:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4950:20:29"},"nodeType":"YulFunctionCall","src":"4950:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4940:6:29"}]}]},{"nodeType":"YulBlock","src":"5023:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5038:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5052:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5042:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5068:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5103:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5114:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5099:3:29"},"nodeType":"YulFunctionCall","src":"5099:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5123:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5078:20:29"},"nodeType":"YulFunctionCall","src":"5078:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5068:6:29"}]}]},{"nodeType":"YulBlock","src":"5151:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5166:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5180:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5170:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5196:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5231:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5242:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5227:3:29"},"nodeType":"YulFunctionCall","src":"5227:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5251:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5206:20:29"},"nodeType":"YulFunctionCall","src":"5206:53:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5196:6:29"}]}]},{"nodeType":"YulBlock","src":"5279:313:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5294:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5325:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5336:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5321:3:29"},"nodeType":"YulFunctionCall","src":"5321:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5308:12:29"},"nodeType":"YulFunctionCall","src":"5308:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5298:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"5387:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5389:77:29"},"nodeType":"YulFunctionCall","src":"5389:79:29"},"nodeType":"YulExpressionStatement","src":"5389:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5359:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5367:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5356:2:29"},"nodeType":"YulFunctionCall","src":"5356:30:29"},"nodeType":"YulIf","src":"5353:117:29"},{"nodeType":"YulAssignment","src":"5484:98:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5554:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5565:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5550:3:29"},"nodeType":"YulFunctionCall","src":"5550:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5574:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"5502:47:29"},"nodeType":"YulFunctionCall","src":"5502:80:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5484:6:29"},{"name":"value4","nodeType":"YulIdentifier","src":"5492:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_uint256t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4694:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4705:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4717:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4725:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4733:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4741:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4749:6:29","type":""}],"src":"4604:995:29"},{"body":{"nodeType":"YulBlock","src":"5671:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"5717:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5719:77:29"},"nodeType":"YulFunctionCall","src":"5719:79:29"},"nodeType":"YulExpressionStatement","src":"5719:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5692:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5701:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5688:3:29"},"nodeType":"YulFunctionCall","src":"5688:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"5713:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5684:3:29"},"nodeType":"YulFunctionCall","src":"5684:32:29"},"nodeType":"YulIf","src":"5681:119:29"},{"nodeType":"YulBlock","src":"5810:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5825:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5839:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5829:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5854:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5889:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5900:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5885:3:29"},"nodeType":"YulFunctionCall","src":"5885:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5909:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5864:20:29"},"nodeType":"YulFunctionCall","src":"5864:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5854:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5641:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5652:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5664:6:29","type":""}],"src":"5605:329:29"},{"body":{"nodeType":"YulBlock","src":"5972:28:29","statements":[{"nodeType":"YulAssignment","src":"5982:12:29","value":{"name":"value","nodeType":"YulIdentifier","src":"5989:5:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5982:3:29"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5958:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5968:3:29","type":""}],"src":"5940:60:29"},{"body":{"nodeType":"YulBlock","src":"6066:82:29","statements":[{"nodeType":"YulAssignment","src":"6076:66:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6134:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6116:17:29"},"nodeType":"YulFunctionCall","src":"6116:24:29"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"6107:8:29"},"nodeType":"YulFunctionCall","src":"6107:34:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6089:17:29"},"nodeType":"YulFunctionCall","src":"6089:53:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6076:9:29"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6046:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6056:9:29","type":""}],"src":"6006:142:29"},{"body":{"nodeType":"YulBlock","src":"6214:66:29","statements":[{"nodeType":"YulAssignment","src":"6224:50:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6268:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"6237:30:29"},"nodeType":"YulFunctionCall","src":"6237:37:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6224:9:29"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6194:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6204:9:29","type":""}],"src":"6154:126:29"},{"body":{"nodeType":"YulBlock","src":"6359:66:29","statements":[{"nodeType":"YulAssignment","src":"6369:50:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6413:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"6382:30:29"},"nodeType":"YulFunctionCall","src":"6382:37:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6369:9:29"}]}]},"name":"convert_t_contract$_ERC20_$824_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6339:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6349:9:29","type":""}],"src":"6286:139:29"},{"body":{"nodeType":"YulBlock","src":"6509:79:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6526:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6575:5:29"}],"functionName":{"name":"convert_t_contract$_ERC20_$824_to_t_address","nodeType":"YulIdentifier","src":"6531:43:29"},"nodeType":"YulFunctionCall","src":"6531:50:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6519:6:29"},"nodeType":"YulFunctionCall","src":"6519:63:29"},"nodeType":"YulExpressionStatement","src":"6519:63:29"}]},"name":"abi_encode_t_contract$_ERC20_$824_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6497:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6504:3:29","type":""}],"src":"6431:157:29"},{"body":{"nodeType":"YulBlock","src":"6705:137:29","statements":[{"nodeType":"YulAssignment","src":"6715:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6727:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6738:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6723:3:29"},"nodeType":"YulFunctionCall","src":"6723:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6715:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6808:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6821:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6832:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6817:3:29"},"nodeType":"YulFunctionCall","src":"6817:17:29"}],"functionName":{"name":"abi_encode_t_contract$_ERC20_$824_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6751:56:29"},"nodeType":"YulFunctionCall","src":"6751:84:29"},"nodeType":"YulExpressionStatement","src":"6751:84:29"}]},"name":"abi_encode_tuple_t_contract$_ERC20_$824__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6677:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6689:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6700:4:29","type":""}],"src":"6594:248:29"},{"body":{"nodeType":"YulBlock","src":"6944:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6961:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"6966:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6954:6:29"},"nodeType":"YulFunctionCall","src":"6954:19:29"},"nodeType":"YulExpressionStatement","src":"6954:19:29"},{"nodeType":"YulAssignment","src":"6982:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7001:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"7006:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6997:3:29"},"nodeType":"YulFunctionCall","src":"6997:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6982:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6916:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"6921:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6932:11:29","type":""}],"src":"6848:169:29"},{"body":{"nodeType":"YulBlock","src":"7129:59:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7151:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7159:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7147:3:29"},"nodeType":"YulFunctionCall","src":"7147:14:29"},{"hexValue":"416c726561647920636c61696d6564","kind":"string","nodeType":"YulLiteral","src":"7163:17:29","type":"","value":"Already claimed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7140:6:29"},"nodeType":"YulFunctionCall","src":"7140:41:29"},"nodeType":"YulExpressionStatement","src":"7140:41:29"}]},"name":"store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7121:6:29","type":""}],"src":"7023:165:29"},{"body":{"nodeType":"YulBlock","src":"7340:220:29","statements":[{"nodeType":"YulAssignment","src":"7350:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7416:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"7421:2:29","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7357:58:29"},"nodeType":"YulFunctionCall","src":"7357:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7350:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7522:3:29"}],"functionName":{"name":"store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","nodeType":"YulIdentifier","src":"7433:88:29"},"nodeType":"YulFunctionCall","src":"7433:93:29"},"nodeType":"YulExpressionStatement","src":"7433:93:29"},{"nodeType":"YulAssignment","src":"7535:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7546:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"7551:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7542:3:29"},"nodeType":"YulFunctionCall","src":"7542:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7535:3:29"}]}]},"name":"abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7328:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7336:3:29","type":""}],"src":"7194:366:29"},{"body":{"nodeType":"YulBlock","src":"7737:248:29","statements":[{"nodeType":"YulAssignment","src":"7747:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7759:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7770:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7755:3:29"},"nodeType":"YulFunctionCall","src":"7755:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7747:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7794:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7805:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7790:3:29"},"nodeType":"YulFunctionCall","src":"7790:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7813:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7819:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7809:3:29"},"nodeType":"YulFunctionCall","src":"7809:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7783:6:29"},"nodeType":"YulFunctionCall","src":"7783:47:29"},"nodeType":"YulExpressionStatement","src":"7783:47:29"},{"nodeType":"YulAssignment","src":"7839:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7973:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7847:124:29"},"nodeType":"YulFunctionCall","src":"7847:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7839:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7717:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7732:4:29","type":""}],"src":"7566:419:29"},{"body":{"nodeType":"YulBlock","src":"8033:52:29","statements":[{"nodeType":"YulAssignment","src":"8043:35:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8068:2:29","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"8072:5:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8064:3:29"},"nodeType":"YulFunctionCall","src":"8064:14:29"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"8043:8:29"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8014:5:29","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"8024:8:29","type":""}],"src":"7991:94:29"},{"body":{"nodeType":"YulBlock","src":"8138:47:29","statements":[{"nodeType":"YulAssignment","src":"8148:31:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8173:5:29"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"8159:13:29"},"nodeType":"YulFunctionCall","src":"8159:20:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"8148:7:29"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8120:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"8130:7:29","type":""}],"src":"8091:94:29"},{"body":{"nodeType":"YulBlock","src":"8238:53:29","statements":[{"nodeType":"YulAssignment","src":"8248:37:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8279:5:29"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"8259:19:29"},"nodeType":"YulFunctionCall","src":"8259:26:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"8248:7:29"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8220:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"8230:7:29","type":""}],"src":"8191:100:29"},{"body":{"nodeType":"YulBlock","src":"8380:74:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8397:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8440:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8422:17:29"},"nodeType":"YulFunctionCall","src":"8422:24:29"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"8402:19:29"},"nodeType":"YulFunctionCall","src":"8402:45:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8390:6:29"},"nodeType":"YulFunctionCall","src":"8390:58:29"},"nodeType":"YulExpressionStatement","src":"8390:58:29"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8368:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8375:3:29","type":""}],"src":"8297:157:29"},{"body":{"nodeType":"YulBlock","src":"8507:32:29","statements":[{"nodeType":"YulAssignment","src":"8517:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"8528:5:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"8517:7:29"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8489:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"8499:7:29","type":""}],"src":"8460:79:29"},{"body":{"nodeType":"YulBlock","src":"8628:74:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8645:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8688:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8670:17:29"},"nodeType":"YulFunctionCall","src":"8670:24:29"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"8650:19:29"},"nodeType":"YulFunctionCall","src":"8650:45:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8638:6:29"},"nodeType":"YulFunctionCall","src":"8638:58:29"},"nodeType":"YulExpressionStatement","src":"8638:58:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8616:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8623:3:29","type":""}],"src":"8545:157:29"},{"body":{"nodeType":"YulBlock","src":"8852:253:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8925:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"8934:3:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8863:61:29"},"nodeType":"YulFunctionCall","src":"8863:75:29"},"nodeType":"YulExpressionStatement","src":"8863:75:29"},{"nodeType":"YulAssignment","src":"8947:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8958:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"8963:2:29","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8954:3:29"},"nodeType":"YulFunctionCall","src":"8954:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8947:3:29"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9038:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"9047:3:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8976:61:29"},"nodeType":"YulFunctionCall","src":"8976:75:29"},"nodeType":"YulExpressionStatement","src":"8976:75:29"},{"nodeType":"YulAssignment","src":"9060:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9071:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9076:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9067:3:29"},"nodeType":"YulFunctionCall","src":"9067:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9060:3:29"}]},{"nodeType":"YulAssignment","src":"9089:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"9096:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9089:3:29"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8823:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8829:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8837:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8848:3:29","type":""}],"src":"8708:397:29"},{"body":{"nodeType":"YulBlock","src":"9217:57:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9239:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9247:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9235:3:29"},"nodeType":"YulFunctionCall","src":"9235:14:29"},{"hexValue":"496e76616c69642070726f6f66","kind":"string","nodeType":"YulLiteral","src":"9251:15:29","type":"","value":"Invalid proof"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9228:6:29"},"nodeType":"YulFunctionCall","src":"9228:39:29"},"nodeType":"YulExpressionStatement","src":"9228:39:29"}]},"name":"store_literal_in_memory_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9209:6:29","type":""}],"src":"9111:163:29"},{"body":{"nodeType":"YulBlock","src":"9426:220:29","statements":[{"nodeType":"YulAssignment","src":"9436:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9502:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9507:2:29","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9443:58:29"},"nodeType":"YulFunctionCall","src":"9443:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9436:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9608:3:29"}],"functionName":{"name":"store_literal_in_memory_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639","nodeType":"YulIdentifier","src":"9519:88:29"},"nodeType":"YulFunctionCall","src":"9519:93:29"},"nodeType":"YulExpressionStatement","src":"9519:93:29"},{"nodeType":"YulAssignment","src":"9621:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9632:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9637:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9628:3:29"},"nodeType":"YulFunctionCall","src":"9628:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9621:3:29"}]}]},"name":"abi_encode_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9414:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9422:3:29","type":""}],"src":"9280:366:29"},{"body":{"nodeType":"YulBlock","src":"9823:248:29","statements":[{"nodeType":"YulAssignment","src":"9833:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9845:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9856:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9841:3:29"},"nodeType":"YulFunctionCall","src":"9841:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9833:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9880:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9891:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9876:3:29"},"nodeType":"YulFunctionCall","src":"9876:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9899:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"9905:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9895:3:29"},"nodeType":"YulFunctionCall","src":"9895:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9869:6:29"},"nodeType":"YulFunctionCall","src":"9869:47:29"},"nodeType":"YulExpressionStatement","src":"9869:47:29"},{"nodeType":"YulAssignment","src":"9925:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10059:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9933:124:29"},"nodeType":"YulFunctionCall","src":"9933:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9925:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9803:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9818:4:29","type":""}],"src":"9652:419:29"},{"body":{"nodeType":"YulBlock","src":"10142:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10159:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10182:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10164:17:29"},"nodeType":"YulFunctionCall","src":"10164:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10152:6:29"},"nodeType":"YulFunctionCall","src":"10152:37:29"},"nodeType":"YulExpressionStatement","src":"10152:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10130:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10137:3:29","type":""}],"src":"10077:118:29"},{"body":{"nodeType":"YulBlock","src":"10327:206:29","statements":[{"nodeType":"YulAssignment","src":"10337:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10349:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10360:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10345:3:29"},"nodeType":"YulFunctionCall","src":"10345:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10337:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10417:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10430:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10441:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10426:3:29"},"nodeType":"YulFunctionCall","src":"10426:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10373:43:29"},"nodeType":"YulFunctionCall","src":"10373:71:29"},"nodeType":"YulExpressionStatement","src":"10373:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10498:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10511:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10522:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10507:3:29"},"nodeType":"YulFunctionCall","src":"10507:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10454:43:29"},"nodeType":"YulFunctionCall","src":"10454:72:29"},"nodeType":"YulExpressionStatement","src":"10454:72:29"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10291:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10303:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10311:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10322:4:29","type":""}],"src":"10201:332:29"},{"body":{"nodeType":"YulBlock","src":"10579:76:29","statements":[{"body":{"nodeType":"YulBlock","src":"10633:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10642:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10645:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10635:6:29"},"nodeType":"YulFunctionCall","src":"10635:12:29"},"nodeType":"YulExpressionStatement","src":"10635:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10602:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10624:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"10609:14:29"},"nodeType":"YulFunctionCall","src":"10609:21:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10599:2:29"},"nodeType":"YulFunctionCall","src":"10599:32:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10592:6:29"},"nodeType":"YulFunctionCall","src":"10592:40:29"},"nodeType":"YulIf","src":"10589:60:29"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10572:5:29","type":""}],"src":"10539:116:29"},{"body":{"nodeType":"YulBlock","src":"10721:77:29","statements":[{"nodeType":"YulAssignment","src":"10731:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10746:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10740:5:29"},"nodeType":"YulFunctionCall","src":"10740:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10731:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10786:5:29"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"10762:23:29"},"nodeType":"YulFunctionCall","src":"10762:30:29"},"nodeType":"YulExpressionStatement","src":"10762:30:29"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10699:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"10707:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10715:5:29","type":""}],"src":"10661:137:29"},{"body":{"nodeType":"YulBlock","src":"10878:271:29","statements":[{"body":{"nodeType":"YulBlock","src":"10924:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10926:77:29"},"nodeType":"YulFunctionCall","src":"10926:79:29"},"nodeType":"YulExpressionStatement","src":"10926:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10899:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10908:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10895:3:29"},"nodeType":"YulFunctionCall","src":"10895:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"10920:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10891:3:29"},"nodeType":"YulFunctionCall","src":"10891:32:29"},"nodeType":"YulIf","src":"10888:119:29"},{"nodeType":"YulBlock","src":"11017:125:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11032:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11046:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11036:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11061:71:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11104:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11115:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11100:3:29"},"nodeType":"YulFunctionCall","src":"11100:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11124:7:29"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"11071:28:29"},"nodeType":"YulFunctionCall","src":"11071:61:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11061:6:29"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10848:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10859:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10871:6:29","type":""}],"src":"10804:345:29"},{"body":{"nodeType":"YulBlock","src":"11183:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11200:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11203:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11193:6:29"},"nodeType":"YulFunctionCall","src":"11193:88:29"},"nodeType":"YulExpressionStatement","src":"11193:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11297:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11300:4:29","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11290:6:29"},"nodeType":"YulFunctionCall","src":"11290:15:29"},"nodeType":"YulExpressionStatement","src":"11290:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11321:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11324:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11314:6:29"},"nodeType":"YulFunctionCall","src":"11314:15:29"},"nodeType":"YulExpressionStatement","src":"11314:15:29"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"11155:180:29"},{"body":{"nodeType":"YulBlock","src":"11369:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11386:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11389:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11379:6:29"},"nodeType":"YulFunctionCall","src":"11379:88:29"},"nodeType":"YulExpressionStatement","src":"11379:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11483:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11486:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11476:6:29"},"nodeType":"YulFunctionCall","src":"11476:15:29"},"nodeType":"YulExpressionStatement","src":"11476:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11507:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11510:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11500:6:29"},"nodeType":"YulFunctionCall","src":"11500:15:29"},"nodeType":"YulExpressionStatement","src":"11500:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11341:180:29"},{"body":{"nodeType":"YulBlock","src":"11570:190:29","statements":[{"nodeType":"YulAssignment","src":"11580:33:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11607:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11589:17:29"},"nodeType":"YulFunctionCall","src":"11589:24:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11580:5:29"}]},{"body":{"nodeType":"YulBlock","src":"11703:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11705:16:29"},"nodeType":"YulFunctionCall","src":"11705:18:29"},"nodeType":"YulExpressionStatement","src":"11705:18:29"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11628:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"11635:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11625:2:29"},"nodeType":"YulFunctionCall","src":"11625:77:29"},"nodeType":"YulIf","src":"11622:103:29"},{"nodeType":"YulAssignment","src":"11734:20:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11745:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"11752:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11741:3:29"},"nodeType":"YulFunctionCall","src":"11741:13:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11734:3:29"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11556:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11566:3:29","type":""}],"src":"11527:233:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$824_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$824_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$824_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$824__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$824_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid proof\")\n\n    }\n\n    function abi_encode_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c8063b282d0021161005b578063b282d00214610103578063de14bdd81461011f578063f2fde38b1461013b578063f7c618c11461015757610088565b8063120aa8771461008d5780632eb4a7ab146100bd578063715018a6146100db5780638da5cb5b146100e5575b600080fd5b6100a760048036038101906100a291906107e8565b610175565b6040516100b49190610843565b60405180910390f35b6100c56101a4565b6040516100d29190610877565b60405180910390f35b6100e36101aa565b005b6100ed6101be565b6040516100fa91906108a1565b60405180910390f35b61011d600480360381019061011891906108e8565b6101e7565b005b6101396004803603810190610134919061098d565b610232565b005b61015560048036038101906101509190610a15565b61049c565b005b61015f610522565b60405161016c9190610aa1565b60405180910390f35b60036020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60025481565b6101b2610548565b6101bc60006105cf565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101ef610548565b80600281905550817fd72b4167ddee98b03fa0464106eecc202a58cd62dc5b9079b75ad44321497fc4826040516102269190610877565b60405180910390a25050565b6003600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156102d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c790610b19565b60405180910390fd5b600084846040516020016102e5929190610ba2565b60405160208183030381529060405280519060200120905061034b838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060025483610693565b61038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038190610c1a565b60405180910390fd5b60016003600088815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86866040518363ffffffff1660e01b8152600401610450929190610c49565b6020604051808303816000875af115801561046f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104939190610c9e565b50505050505050565b6104a4610548565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105165760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161050d91906108a1565b60405180910390fd5b61051f816105cf565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105506106aa565b73ffffffffffffffffffffffffffffffffffffffff1661056e6101be565b73ffffffffffffffffffffffffffffffffffffffff16146105cd576105916106aa565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016105c491906108a1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000826106a085846106b2565b1490509392505050565b600033905090565b60008082905060005b84518110156106fd576106e8828683815181106106db576106da610ccb565b5b6020026020010151610708565b915080806106f590610d29565b9150506106bb565b508091505092915050565b60008183106107205761071b8284610733565b61072b565b61072a8383610733565b5b905092915050565b600082600052816020526040600020905092915050565b600080fd5b600080fd5b6000819050919050565b61076781610754565b811461077257600080fd5b50565b6000813590506107848161075e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b58261078a565b9050919050565b6107c5816107aa565b81146107d057600080fd5b50565b6000813590506107e2816107bc565b92915050565b600080604083850312156107ff576107fe61074a565b5b600061080d85828601610775565b925050602061081e858286016107d3565b9150509250929050565b60008115159050919050565b61083d81610828565b82525050565b60006020820190506108586000830184610834565b92915050565b6000819050919050565b6108718161085e565b82525050565b600060208201905061088c6000830184610868565b92915050565b61089b816107aa565b82525050565b60006020820190506108b66000830184610892565b92915050565b6108c58161085e565b81146108d057600080fd5b50565b6000813590506108e2816108bc565b92915050565b600080604083850312156108ff576108fe61074a565b5b600061090d85828601610775565b925050602061091e858286016108d3565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f84011261094d5761094c610928565b5b8235905067ffffffffffffffff81111561096a5761096961092d565b5b60208301915083602082028301111561098657610985610932565b5b9250929050565b6000806000806000608086880312156109a9576109a861074a565b5b60006109b788828901610775565b95505060206109c8888289016107d3565b94505060406109d988828901610775565b935050606086013567ffffffffffffffff8111156109fa576109f961074f565b5b610a0688828901610937565b92509250509295509295909350565b600060208284031215610a2b57610a2a61074a565b5b6000610a39848285016107d3565b91505092915050565b6000819050919050565b6000610a67610a62610a5d8461078a565b610a42565b61078a565b9050919050565b6000610a7982610a4c565b9050919050565b6000610a8b82610a6e565b9050919050565b610a9b81610a80565b82525050565b6000602082019050610ab66000830184610a92565b92915050565b600082825260208201905092915050565b7f416c726561647920636c61696d65640000000000000000000000000000000000600082015250565b6000610b03600f83610abc565b9150610b0e82610acd565b602082019050919050565b60006020820190508181036000830152610b3281610af6565b9050919050565b60008160601b9050919050565b6000610b5182610b39565b9050919050565b6000610b6382610b46565b9050919050565b610b7b610b76826107aa565b610b58565b82525050565b6000819050919050565b610b9c610b9782610754565b610b81565b82525050565b6000610bae8285610b6a565b601482019150610bbe8284610b8b565b6020820191508190509392505050565b7f496e76616c69642070726f6f6600000000000000000000000000000000000000600082015250565b6000610c04600d83610abc565b9150610c0f82610bce565b602082019050919050565b60006020820190508181036000830152610c3381610bf7565b9050919050565b610c4381610754565b82525050565b6000604082019050610c5e6000830185610892565b610c6b6020830184610c3a565b9392505050565b610c7b81610828565b8114610c8657600080fd5b50565b600081519050610c9881610c72565b92915050565b600060208284031215610cb457610cb361074a565b5b6000610cc284828501610c89565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d3482610754565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d6657610d65610cfa565b5b60018201905091905056fea26469706673582212205ef065e6c08f2a0e9eb763bea1300f5a937e607a9705b15101803ec1b33a150464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB282D002 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB282D002 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xDE14BDD8 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x157 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x120AA877 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH2 0x1AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH2 0x1BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x8E8 JUMP JUMPDEST PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x98D JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x548 JUMP JUMPDEST PUSH2 0x1BC PUSH1 0x0 PUSH2 0x5CF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x548 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0xD72B4167DDEE98B03FA0464106EECC202A58CD62DC5B9079B75AD44321497FC4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C7 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2E5 SWAP3 SWAP2 SWAP1 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x34B DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x2 SLOAD DUP4 PUSH2 0x693 JUMP JUMPDEST PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x450 SWAP3 SWAP2 SWAP1 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0xC9E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4A4 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x516 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51F DUP2 PUSH2 0x5CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x550 PUSH2 0x6AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x56E PUSH2 0x1BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5CD JUMPI PUSH2 0x591 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x6A0 DUP6 DUP5 PUSH2 0x6B2 JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6FD JUMPI PUSH2 0x6E8 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6DB JUMPI PUSH2 0x6DA PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x708 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x6F5 SWAP1 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6BB JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x720 JUMPI PUSH2 0x71B DUP3 DUP5 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH2 0x72A DUP4 DUP4 PUSH2 0x733 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x767 DUP2 PUSH2 0x754 JUMP JUMPDEST DUP2 EQ PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x784 DUP2 PUSH2 0x75E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B5 DUP3 PUSH2 0x78A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C5 DUP2 PUSH2 0x7AA JUMP JUMPDEST DUP2 EQ PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7E2 DUP2 PUSH2 0x7BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7FF JUMPI PUSH2 0x7FE PUSH2 0x74A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x80D DUP6 DUP3 DUP7 ADD PUSH2 0x775 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x81E DUP6 DUP3 DUP7 ADD PUSH2 0x7D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x83D DUP2 PUSH2 0x828 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x858 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x834 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x871 DUP2 PUSH2 0x85E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x88C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x868 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x89B DUP2 PUSH2 0x7AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x892 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C5 DUP2 PUSH2 0x85E JUMP JUMPDEST DUP2 EQ PUSH2 0x8D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8E2 DUP2 PUSH2 0x8BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8FF JUMPI PUSH2 0x8FE PUSH2 0x74A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x90D DUP6 DUP3 DUP7 ADD PUSH2 0x775 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x91E DUP6 DUP3 DUP7 ADD PUSH2 0x8D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x94D JUMPI PUSH2 0x94C PUSH2 0x928 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x96A JUMPI PUSH2 0x969 PUSH2 0x92D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x986 JUMPI PUSH2 0x985 PUSH2 0x932 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x9A9 JUMPI PUSH2 0x9A8 PUSH2 0x74A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9B7 DUP9 DUP3 DUP10 ADD PUSH2 0x775 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x9C8 DUP9 DUP3 DUP10 ADD PUSH2 0x7D3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x9D9 DUP9 DUP3 DUP10 ADD PUSH2 0x775 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9FA JUMPI PUSH2 0x9F9 PUSH2 0x74F JUMP JUMPDEST JUMPDEST PUSH2 0xA06 DUP9 DUP3 DUP10 ADD PUSH2 0x937 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2B JUMPI PUSH2 0xA2A PUSH2 0x74A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA39 DUP5 DUP3 DUP6 ADD PUSH2 0x7D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA67 PUSH2 0xA62 PUSH2 0xA5D DUP5 PUSH2 0x78A JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA79 DUP3 PUSH2 0xA4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8B DUP3 PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9B DUP2 PUSH2 0xA80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAB6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB03 PUSH1 0xF DUP4 PUSH2 0xABC JUMP JUMPDEST SWAP2 POP PUSH2 0xB0E DUP3 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB32 DUP2 PUSH2 0xAF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB51 DUP3 PUSH2 0xB39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB63 DUP3 PUSH2 0xB46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7B PUSH2 0xB76 DUP3 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9C PUSH2 0xB97 DUP3 PUSH2 0x754 JUMP JUMPDEST PUSH2 0xB81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAE DUP3 DUP6 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xBBE DUP3 DUP5 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642070726F6F6600000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC04 PUSH1 0xD DUP4 PUSH2 0xABC JUMP JUMPDEST SWAP2 POP PUSH2 0xC0F DUP3 PUSH2 0xBCE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC33 DUP2 PUSH2 0xBF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC43 DUP2 PUSH2 0x754 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC5E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x892 JUMP JUMPDEST PUSH2 0xC6B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC3A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC7B DUP2 PUSH2 0x828 JUMP JUMPDEST DUP2 EQ PUSH2 0xC86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC98 DUP2 PUSH2 0xC72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB4 JUMPI PUSH2 0xCB3 PUSH2 0x74A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCC2 DUP5 DUP3 DUP6 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD34 DUP3 PUSH2 0x754 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xD66 JUMPI PUSH2 0xD65 PUSH2 0xCFA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E CREATE PUSH6 0xE6C08F2A0E9E 0xB7 PUSH4 0xBEA1300F GAS SWAP4 PUSH31 0x607A9705B15101803EC1B33A150464736F6C63430008140033000000000000 ","sourceMap":"237:936:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;341:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;310:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;581:174:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;761:410;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;280:24:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;341:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;310:25::-;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;581:174:27:-;1531:13:0;:11;:13::i;:::-;685:11:27::1;672:10;:24;;;;728:6;711:37;736:11;711:37;;;;;;:::i;:::-;;;;;;;;581:174:::0;;:::o;761:410::-;884:7;:15;892:6;884:15;;;;;;;;;;;:24;900:7;884:24;;;;;;;;;;;;;;;;;;;;;;;;;883:25;875:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;938:12;980:7;989:6;963:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;953:44;;;;;;938:59;;1015:43;1034:5;;1015:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1041:10;;1053:4;1015:18;:43::i;:::-;1007:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1113:4;1086:7;:15;1094:6;1086:15;;;;;;;;;;;:24;1102:7;1086:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1127:11;;;;;;;;;;;:20;;;1148:7;1157:6;1127:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;865:306;761:410;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;280:24:27:-;;;;;;;;;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1902:154:17:-;1993:4;2045;2016:25;2029:5;2036:4;2016:12;:25::i;:::-;:33;2009:40;;1902:154;;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;2457:308:17:-;2540:7;2559:20;2582:4;2559:27;;2601:9;2596:134;2620:5;:12;2616:1;:16;2596:134;;;2668:51;2696:12;2710:5;2716:1;2710:8;;;;;;;;:::i;:::-;;;;;;;;2668:27;:51::i;:::-;2653:66;;2634:3;;;;;:::i;:::-;;;;2596:134;;;;2746:12;2739:19;;;2457:308;;;;:::o;504:167:16:-;579:7;609:1;605;:5;:59;;640:24;659:1;662;640:18;:24::i;:::-;605:59;;;613:24;632:1;635;613:18;:24::i;:::-;605:59;598:66;;504:167;;;;:::o;791:239::-;864:13;941:1;935:4;928:15;969:1;963:4;956:15;1009:4;1003;993:21;984:30;;791:239;;;;:::o;88:117:29:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:77::-;2141:7;2170:5;2159:16;;2104:77;;;:::o;2187:118::-;2274:24;2292:5;2274:24;:::i;:::-;2269:3;2262:37;2187:118;;:::o;2311:222::-;2404:4;2442:2;2431:9;2427:18;2419:26;;2455:71;2523:1;2512:9;2508:17;2499:6;2455:71;:::i;:::-;2311:222;;;;:::o;2539:118::-;2626:24;2644:5;2626:24;:::i;:::-;2621:3;2614:37;2539:118;;:::o;2663:222::-;2756:4;2794:2;2783:9;2779:18;2771:26;;2807:71;2875:1;2864:9;2860:17;2851:6;2807:71;:::i;:::-;2663:222;;;;:::o;2891:122::-;2964:24;2982:5;2964:24;:::i;:::-;2957:5;2954:35;2944:63;;3003:1;3000;2993:12;2944:63;2891:122;:::o;3019:139::-;3065:5;3103:6;3090:20;3081:29;;3119:33;3146:5;3119:33;:::i;:::-;3019:139;;;;:::o;3164:474::-;3232:6;3240;3289:2;3277:9;3268:7;3264:23;3260:32;3257:119;;;3295:79;;:::i;:::-;3257:119;3415:1;3440:53;3485:7;3476:6;3465:9;3461:22;3440:53;:::i;:::-;3430:63;;3386:117;3542:2;3568:53;3613:7;3604:6;3593:9;3589:22;3568:53;:::i;:::-;3558:63;;3513:118;3164:474;;;;;:::o;3644:117::-;3753:1;3750;3743:12;3767:117;3876:1;3873;3866:12;3890:117;3999:1;3996;3989:12;4030:568;4103:8;4113:6;4163:3;4156:4;4148:6;4144:17;4140:27;4130:122;;4171:79;;:::i;:::-;4130:122;4284:6;4271:20;4261:30;;4314:18;4306:6;4303:30;4300:117;;;4336:79;;:::i;:::-;4300:117;4450:4;4442:6;4438:17;4426:29;;4504:3;4496:4;4488:6;4484:17;4474:8;4470:32;4467:41;4464:128;;;4511:79;;:::i;:::-;4464:128;4030:568;;;;;:::o;4604:995::-;4717:6;4725;4733;4741;4749;4798:3;4786:9;4777:7;4773:23;4769:33;4766:120;;;4805:79;;:::i;:::-;4766:120;4925:1;4950:53;4995:7;4986:6;4975:9;4971:22;4950:53;:::i;:::-;4940:63;;4896:117;5052:2;5078:53;5123:7;5114:6;5103:9;5099:22;5078:53;:::i;:::-;5068:63;;5023:118;5180:2;5206:53;5251:7;5242:6;5231:9;5227:22;5206:53;:::i;:::-;5196:63;;5151:118;5336:2;5325:9;5321:18;5308:32;5367:18;5359:6;5356:30;5353:117;;;5389:79;;:::i;:::-;5353:117;5502:80;5574:7;5565:6;5554:9;5550:22;5502:80;:::i;:::-;5484:98;;;;5279:313;4604:995;;;;;;;;:::o;5605:329::-;5664:6;5713:2;5701:9;5692:7;5688:23;5684:32;5681:119;;;5719:79;;:::i;:::-;5681:119;5839:1;5864:53;5909:7;5900:6;5889:9;5885:22;5864:53;:::i;:::-;5854:63;;5810:117;5605:329;;;;:::o;5940:60::-;5968:3;5989:5;5982:12;;5940:60;;;:::o;6006:142::-;6056:9;6089:53;6107:34;6116:24;6134:5;6116:24;:::i;:::-;6107:34;:::i;:::-;6089:53;:::i;:::-;6076:66;;6006:142;;;:::o;6154:126::-;6204:9;6237:37;6268:5;6237:37;:::i;:::-;6224:50;;6154:126;;;:::o;6286:139::-;6349:9;6382:37;6413:5;6382:37;:::i;:::-;6369:50;;6286:139;;;:::o;6431:157::-;6531:50;6575:5;6531:50;:::i;:::-;6526:3;6519:63;6431:157;;:::o;6594:248::-;6700:4;6738:2;6727:9;6723:18;6715:26;;6751:84;6832:1;6821:9;6817:17;6808:6;6751:84;:::i;:::-;6594:248;;;;:::o;6848:169::-;6932:11;6966:6;6961:3;6954:19;7006:4;7001:3;6997:14;6982:29;;6848:169;;;;:::o;7023:165::-;7163:17;7159:1;7151:6;7147:14;7140:41;7023:165;:::o;7194:366::-;7336:3;7357:67;7421:2;7416:3;7357:67;:::i;:::-;7350:74;;7433:93;7522:3;7433:93;:::i;:::-;7551:2;7546:3;7542:12;7535:19;;7194:366;;;:::o;7566:419::-;7732:4;7770:2;7759:9;7755:18;7747:26;;7819:9;7813:4;7809:20;7805:1;7794:9;7790:17;7783:47;7847:131;7973:4;7847:131;:::i;:::-;7839:139;;7566:419;;;:::o;7991:94::-;8024:8;8072:5;8068:2;8064:14;8043:35;;7991:94;;;:::o;8091:::-;8130:7;8159:20;8173:5;8159:20;:::i;:::-;8148:31;;8091:94;;;:::o;8191:100::-;8230:7;8259:26;8279:5;8259:26;:::i;:::-;8248:37;;8191:100;;;:::o;8297:157::-;8402:45;8422:24;8440:5;8422:24;:::i;:::-;8402:45;:::i;:::-;8397:3;8390:58;8297:157;;:::o;8460:79::-;8499:7;8528:5;8517:16;;8460:79;;;:::o;8545:157::-;8650:45;8670:24;8688:5;8670:24;:::i;:::-;8650:45;:::i;:::-;8645:3;8638:58;8545:157;;:::o;8708:397::-;8848:3;8863:75;8934:3;8925:6;8863:75;:::i;:::-;8963:2;8958:3;8954:12;8947:19;;8976:75;9047:3;9038:6;8976:75;:::i;:::-;9076:2;9071:3;9067:12;9060:19;;9096:3;9089:10;;8708:397;;;;;:::o;9111:163::-;9251:15;9247:1;9239:6;9235:14;9228:39;9111:163;:::o;9280:366::-;9422:3;9443:67;9507:2;9502:3;9443:67;:::i;:::-;9436:74;;9519:93;9608:3;9519:93;:::i;:::-;9637:2;9632:3;9628:12;9621:19;;9280:366;;;:::o;9652:419::-;9818:4;9856:2;9845:9;9841:18;9833:26;;9905:9;9899:4;9895:20;9891:1;9880:9;9876:17;9869:47;9933:131;10059:4;9933:131;:::i;:::-;9925:139;;9652:419;;;:::o;10077:118::-;10164:24;10182:5;10164:24;:::i;:::-;10159:3;10152:37;10077:118;;:::o;10201:332::-;10322:4;10360:2;10349:9;10345:18;10337:26;;10373:71;10441:1;10430:9;10426:17;10417:6;10373:71;:::i;:::-;10454:72;10522:2;10511:9;10507:18;10498:6;10454:72;:::i;:::-;10201:332;;;;;:::o;10539:116::-;10609:21;10624:5;10609:21;:::i;:::-;10602:5;10599:32;10589:60;;10645:1;10642;10635:12;10589:60;10539:116;:::o;10661:137::-;10715:5;10746:6;10740:13;10731:22;;10762:30;10786:5;10762:30;:::i;:::-;10661:137;;;;:::o;10804:345::-;10871:6;10920:2;10908:9;10899:7;10895:23;10891:32;10888:119;;;10926:79;;:::i;:::-;10888:119;11046:1;11071:61;11124:7;11115:6;11104:9;11100:22;11071:61;:::i;:::-;11061:71;;11017:125;10804:345;;;;:::o;11155:180::-;11203:77;11200:1;11193:88;11300:4;11297:1;11290:15;11324:4;11321:1;11314:15;11341:180;11389:77;11386:1;11379:88;11486:4;11483:1;11476:15;11510:4;11507:1;11500:15;11527:233;11566:3;11589:24;11607:5;11589:24;:::i;:::-;11580:33;;11635:66;11628:5;11625:77;11622:103;;11705:18;;:::i;:::-;11622:103;11752:1;11745:5;11741:13;11734:20;;11527:233;;;:::o"},"methodIdentifiers":{"claimYield(uint256,address,uint256,bytes32[])":"de14bdd8","claimed(uint256,address)":"120aa877","distributeYield(uint256,bytes32)":"b282d002","merkleRoot()":"2eb4a7ab","owner()":"8da5cb5b","renounceOwnership()":"715018a6","rewardToken()":"f7c618c1","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"YieldDistributed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"claimYield\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"distributeYield\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YieldDistributor.sol\":\"YieldDistributor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"contracts/YieldDistributor.sol\":{\"keccak256\":\"0xfd8b1bff25cb34435f11030b1f9067d2489e1db588dc1ad6a775a982c13bf565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://227ae4149c54af3981dbc600e42b2990a52c91117c80ded889c0c485cc626f5f\",\"dweb:/ipfs/Qma1HJqTyuHTmFvYGW3KgtR67be3TRuc9fD8AFUEsHVot6\"]}},\"version\":1}"}},"contracts/ZKModule.sol":{"ZKModule":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"bytes32","name":"proofHash","type":"bytes32"}],"name":"ProofSubmitted","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"proof","type":"bytes"},{"internalType":"bytes","name":"publicInputs","type":"bytes"}],"name":"verifyProof","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_9027":{"entryPoint":null,"id":9027,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":153,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":399,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":414,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":381,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":349,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:590:29","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:29","statements":[{"nodeType":"YulAssignment","src":"62:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:29"},"nodeType":"YulFunctionCall","src":"73:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:29","type":""}],"src":"7:126:29"},{"body":{"nodeType":"YulBlock","src":"184:51:29","statements":[{"nodeType":"YulAssignment","src":"194:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:29"},"nodeType":"YulFunctionCall","src":"205:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:29","type":""}],"src":"139:96:29"},{"body":{"nodeType":"YulBlock","src":"306:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:29"},"nodeType":"YulFunctionCall","src":"328:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:29"},"nodeType":"YulFunctionCall","src":"316:37:29"},"nodeType":"YulExpressionStatement","src":"316:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:29","type":""}],"src":"241:118:29"},{"body":{"nodeType":"YulBlock","src":"463:124:29","statements":[{"nodeType":"YulAssignment","src":"473:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:29"},"nodeType":"YulFunctionCall","src":"481:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:29"},"nodeType":"YulFunctionCall","src":"562:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:29"},"nodeType":"YulFunctionCall","src":"509:71:29"},"nodeType":"YulExpressionStatement","src":"509:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:29","type":""}],"src":"365:222:29"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007b919061019e565b60405180910390fd5b6100938161009960201b60201c565b506101b9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101888261015d565b9050919050565b6101988161017d565b82525050565b60006020820190506101b3600083018461018f565b92915050565b610676806101c86000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063b8e72af614610079578063f2fde38b146100a9575b600080fd5b6100596100c5565b005b6100636100d9565b6040516100709190610390565b60405180910390f35b610093600480360381019061008e9190610505565b610102565b6040516100a09190610598565b60405180910390f35b6100c360048036038101906100be91906105df565b610176565b005b6100cd6101fc565b6100d76000610283565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000808351111561016b573373ffffffffffffffffffffffffffffffffffffffff167f6001ac408879869d65636618cd8495cce3026445823e6de88d46ade8a9c81c79848051906020012060405161015a9190610625565b60405180910390a260019050610170565b600090505b92915050565b61017e6101fc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101f05760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101e79190610390565b60405180910390fd5b6101f981610283565b50565b610204610347565b73ffffffffffffffffffffffffffffffffffffffff166102226100d9565b73ffffffffffffffffffffffffffffffffffffffff161461028157610245610347565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102789190610390565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061037a8261034f565b9050919050565b61038a8161036f565b82525050565b60006020820190506103a56000830184610381565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610412826103c9565b810181811067ffffffffffffffff82111715610431576104306103da565b5b80604052505050565b60006104446103ab565b90506104508282610409565b919050565b600067ffffffffffffffff8211156104705761046f6103da565b5b610479826103c9565b9050602081019050919050565b82818337600083830152505050565b60006104a86104a384610455565b61043a565b9050828152602081018484840111156104c4576104c36103c4565b5b6104cf848285610486565b509392505050565b600082601f8301126104ec576104eb6103bf565b5b81356104fc848260208601610495565b91505092915050565b6000806040838503121561051c5761051b6103b5565b5b600083013567ffffffffffffffff81111561053a576105396103ba565b5b610546858286016104d7565b925050602083013567ffffffffffffffff811115610567576105666103ba565b5b610573858286016104d7565b9150509250929050565b60008115159050919050565b6105928161057d565b82525050565b60006020820190506105ad6000830184610589565b92915050565b6105bc8161036f565b81146105c757600080fd5b50565b6000813590506105d9816105b3565b92915050565b6000602082840312156105f5576105f46103b5565b5b6000610603848285016105ca565b91505092915050565b6000819050919050565b61061f8161060c565b82525050565b600060208201905061063a6000830184610616565b9291505056fea264697066735822122016e194294c46dacf1f9b631ef74eed2d3938a6aeea7d66090ae63e2bb20f826864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93 DUP2 PUSH2 0x99 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x188 DUP3 PUSH2 0x15D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x198 DUP2 PUSH2 0x17D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x676 DUP1 PUSH2 0x1C8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xB8E72AF6 EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x505 JUMP JUMPDEST PUSH2 0x102 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCD PUSH2 0x1FC JUMP JUMPDEST PUSH2 0xD7 PUSH1 0x0 PUSH2 0x283 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD GT ISZERO PUSH2 0x16B JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6001AC408879869D65636618CD8495CCE3026445823E6DE88D46ADE8A9C81C79 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP PUSH2 0x170 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F9 DUP2 PUSH2 0x283 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x204 PUSH2 0x347 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x222 PUSH2 0xD9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x281 JUMPI PUSH2 0x245 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A DUP3 PUSH2 0x34F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38A DUP2 PUSH2 0x36F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x381 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x412 DUP3 PUSH2 0x3C9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x431 JUMPI PUSH2 0x430 PUSH2 0x3DA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x444 PUSH2 0x3AB JUMP JUMPDEST SWAP1 POP PUSH2 0x450 DUP3 DUP3 PUSH2 0x409 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x470 JUMPI PUSH2 0x46F PUSH2 0x3DA JUMP JUMPDEST JUMPDEST PUSH2 0x479 DUP3 PUSH2 0x3C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A8 PUSH2 0x4A3 DUP5 PUSH2 0x455 JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4C4 JUMPI PUSH2 0x4C3 PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST PUSH2 0x4CF DUP5 DUP3 DUP6 PUSH2 0x486 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4EC JUMPI PUSH2 0x4EB PUSH2 0x3BF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4FC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x495 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x51C JUMPI PUSH2 0x51B PUSH2 0x3B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53A JUMPI PUSH2 0x539 PUSH2 0x3BA JUMP JUMPDEST JUMPDEST PUSH2 0x546 DUP6 DUP3 DUP7 ADD PUSH2 0x4D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x567 JUMPI PUSH2 0x566 PUSH2 0x3BA JUMP JUMPDEST JUMPDEST PUSH2 0x573 DUP6 DUP3 DUP7 ADD PUSH2 0x4D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x592 DUP2 PUSH2 0x57D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x589 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5BC DUP2 PUSH2 0x36F JUMP JUMPDEST DUP2 EQ PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5D9 DUP2 PUSH2 0x5B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F5 JUMPI PUSH2 0x5F4 PUSH2 0x3B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x603 DUP5 DUP3 DUP6 ADD PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x61F DUP2 PUSH2 0x60C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x63A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x616 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xE1 SWAP5 0x29 0x4C CHAINID 0xDA 0xCF 0x1F SWAP12 PUSH4 0x1EF74EED 0x2D CODECOPY CODESIZE 0xA6 0xAE 0xEA PUSH30 0x66090AE63E2BB20F826864736F6C63430008140033000000000000000000 ","sourceMap":"112:537:28:-:0;;;215:36;;;;;;;;;;237:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;112:537:28;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:29:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;112:537:28:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":508,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1130":{"entryPoint":839,"id":1130,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":643,"id":146,"parameterSlots":1,"returnSlots":0},"@owner_67":{"entryPoint":217,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":197,"id":98,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":374,"id":126,"parameterSlots":1,"returnSlots":0},"@verifyProof_9055":{"entryPoint":258,"id":9055,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":1173,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1482,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":1239,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1503,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptrt_bytes_memory_ptr":{"entryPoint":1285,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":897,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":1417,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":1558,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":912,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":1432,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":1573,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1082,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":939,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":1109,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":879,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":1405,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1548,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":847,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":1158,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":1033,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":986,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":959,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":964,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":954,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":949,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":969,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1459,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5436:29","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:29","statements":[{"nodeType":"YulAssignment","src":"62:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:29"},"nodeType":"YulFunctionCall","src":"73:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:29","type":""}],"src":"7:126:29"},{"body":{"nodeType":"YulBlock","src":"184:51:29","statements":[{"nodeType":"YulAssignment","src":"194:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:29"},"nodeType":"YulFunctionCall","src":"205:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:29","type":""}],"src":"139:96:29"},{"body":{"nodeType":"YulBlock","src":"306:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:29"},"nodeType":"YulFunctionCall","src":"328:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:29"},"nodeType":"YulFunctionCall","src":"316:37:29"},"nodeType":"YulExpressionStatement","src":"316:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:29","type":""}],"src":"241:118:29"},{"body":{"nodeType":"YulBlock","src":"463:124:29","statements":[{"nodeType":"YulAssignment","src":"473:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:29"},"nodeType":"YulFunctionCall","src":"481:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:29"},"nodeType":"YulFunctionCall","src":"562:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:29"},"nodeType":"YulFunctionCall","src":"509:71:29"},"nodeType":"YulExpressionStatement","src":"509:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:29","type":""}],"src":"365:222:29"},{"body":{"nodeType":"YulBlock","src":"633:35:29","statements":[{"nodeType":"YulAssignment","src":"643:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:29"},"nodeType":"YulFunctionCall","src":"653:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:29","type":""}],"src":"593:75:29"},{"body":{"nodeType":"YulBlock","src":"763:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:29"},"nodeType":"YulFunctionCall","src":"773:12:29"},"nodeType":"YulExpressionStatement","src":"773:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:29"},{"body":{"nodeType":"YulBlock","src":"886:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:29"},"nodeType":"YulFunctionCall","src":"896:12:29"},"nodeType":"YulExpressionStatement","src":"896:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:29"},{"body":{"nodeType":"YulBlock","src":"1009:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1026:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1029:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1019:6:29"},"nodeType":"YulFunctionCall","src":"1019:12:29"},"nodeType":"YulExpressionStatement","src":"1019:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"920:117:29"},{"body":{"nodeType":"YulBlock","src":"1132:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1149:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1152:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1142:6:29"},"nodeType":"YulFunctionCall","src":"1142:12:29"},"nodeType":"YulExpressionStatement","src":"1142:12:29"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"1043:117:29"},{"body":{"nodeType":"YulBlock","src":"1214:54:29","statements":[{"nodeType":"YulAssignment","src":"1224:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1242:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1249:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1238:3:29"},"nodeType":"YulFunctionCall","src":"1238:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1258:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1254:3:29"},"nodeType":"YulFunctionCall","src":"1254:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1234:3:29"},"nodeType":"YulFunctionCall","src":"1234:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1224:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1197:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1207:6:29","type":""}],"src":"1166:102:29"},{"body":{"nodeType":"YulBlock","src":"1302:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1319:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1322:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1312:6:29"},"nodeType":"YulFunctionCall","src":"1312:88:29"},"nodeType":"YulExpressionStatement","src":"1312:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1416:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1419:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1409:6:29"},"nodeType":"YulFunctionCall","src":"1409:15:29"},"nodeType":"YulExpressionStatement","src":"1409:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1440:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1443:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1433:6:29"},"nodeType":"YulFunctionCall","src":"1433:15:29"},"nodeType":"YulExpressionStatement","src":"1433:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1274:180:29"},{"body":{"nodeType":"YulBlock","src":"1503:238:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1513:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1535:6:29"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1565:4:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1543:21:29"},"nodeType":"YulFunctionCall","src":"1543:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1531:3:29"},"nodeType":"YulFunctionCall","src":"1531:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1517:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1682:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1684:16:29"},"nodeType":"YulFunctionCall","src":"1684:18:29"},"nodeType":"YulExpressionStatement","src":"1684:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1625:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1637:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1622:2:29"},"nodeType":"YulFunctionCall","src":"1622:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1661:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1673:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1658:2:29"},"nodeType":"YulFunctionCall","src":"1658:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1619:2:29"},"nodeType":"YulFunctionCall","src":"1619:62:29"},"nodeType":"YulIf","src":"1616:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1720:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1724:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1713:6:29"},"nodeType":"YulFunctionCall","src":"1713:22:29"},"nodeType":"YulExpressionStatement","src":"1713:22:29"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1489:6:29","type":""},{"name":"size","nodeType":"YulTypedName","src":"1497:4:29","type":""}],"src":"1460:281:29"},{"body":{"nodeType":"YulBlock","src":"1788:88:29","statements":[{"nodeType":"YulAssignment","src":"1798:30:29","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1808:18:29"},"nodeType":"YulFunctionCall","src":"1808:20:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1798:6:29"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1857:6:29"},{"name":"size","nodeType":"YulIdentifier","src":"1865:4:29"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1837:19:29"},"nodeType":"YulFunctionCall","src":"1837:33:29"},"nodeType":"YulExpressionStatement","src":"1837:33:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1772:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1781:6:29","type":""}],"src":"1747:129:29"},{"body":{"nodeType":"YulBlock","src":"1948:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"2053:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2055:16:29"},"nodeType":"YulFunctionCall","src":"2055:18:29"},"nodeType":"YulExpressionStatement","src":"2055:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2025:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2033:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2022:2:29"},"nodeType":"YulFunctionCall","src":"2022:30:29"},"nodeType":"YulIf","src":"2019:56:29"},{"nodeType":"YulAssignment","src":"2085:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2115:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2093:21:29"},"nodeType":"YulFunctionCall","src":"2093:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2085:4:29"}]},{"nodeType":"YulAssignment","src":"2159:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2171:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"2177:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2167:3:29"},"nodeType":"YulFunctionCall","src":"2167:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2159:4:29"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1932:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1943:4:29","type":""}],"src":"1882:307:29"},{"body":{"nodeType":"YulBlock","src":"2259:82:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2282:3:29"},{"name":"src","nodeType":"YulIdentifier","src":"2287:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2292:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2269:12:29"},"nodeType":"YulFunctionCall","src":"2269:30:29"},"nodeType":"YulExpressionStatement","src":"2269:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2319:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2324:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2315:3:29"},"nodeType":"YulFunctionCall","src":"2315:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"2333:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2308:6:29"},"nodeType":"YulFunctionCall","src":"2308:27:29"},"nodeType":"YulExpressionStatement","src":"2308:27:29"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2241:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2246:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"2251:6:29","type":""}],"src":"2195:146:29"},{"body":{"nodeType":"YulBlock","src":"2430:340:29","statements":[{"nodeType":"YulAssignment","src":"2440:74:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2506:6:29"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2465:40:29"},"nodeType":"YulFunctionCall","src":"2465:48:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2449:15:29"},"nodeType":"YulFunctionCall","src":"2449:65:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2440:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2530:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"2537:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2523:6:29"},"nodeType":"YulFunctionCall","src":"2523:21:29"},"nodeType":"YulExpressionStatement","src":"2523:21:29"},{"nodeType":"YulVariableDeclaration","src":"2553:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2568:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2575:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2564:3:29"},"nodeType":"YulFunctionCall","src":"2564:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2557:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2618:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2620:77:29"},"nodeType":"YulFunctionCall","src":"2620:79:29"},"nodeType":"YulExpressionStatement","src":"2620:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2599:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2604:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2595:3:29"},"nodeType":"YulFunctionCall","src":"2595:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"2613:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2592:2:29"},"nodeType":"YulFunctionCall","src":"2592:25:29"},"nodeType":"YulIf","src":"2589:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2747:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"2752:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2757:6:29"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2710:36:29"},"nodeType":"YulFunctionCall","src":"2710:54:29"},"nodeType":"YulExpressionStatement","src":"2710:54:29"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2403:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"2408:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2416:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2424:5:29","type":""}],"src":"2347:423:29"},{"body":{"nodeType":"YulBlock","src":"2850:277:29","statements":[{"body":{"nodeType":"YulBlock","src":"2899:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2901:77:29"},"nodeType":"YulFunctionCall","src":"2901:79:29"},"nodeType":"YulExpressionStatement","src":"2901:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2878:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2886:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2874:3:29"},"nodeType":"YulFunctionCall","src":"2874:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"2893:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2870:3:29"},"nodeType":"YulFunctionCall","src":"2870:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2863:6:29"},"nodeType":"YulFunctionCall","src":"2863:35:29"},"nodeType":"YulIf","src":"2860:122:29"},{"nodeType":"YulVariableDeclaration","src":"2991:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3018:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3005:12:29"},"nodeType":"YulFunctionCall","src":"3005:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2995:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3034:87:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3094:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3102:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3090:3:29"},"nodeType":"YulFunctionCall","src":"3090:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"3109:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"3117:3:29"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3043:46:29"},"nodeType":"YulFunctionCall","src":"3043:78:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3034:5:29"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2828:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2836:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2844:5:29","type":""}],"src":"2789:338:29"},{"body":{"nodeType":"YulBlock","src":"3234:729:29","statements":[{"body":{"nodeType":"YulBlock","src":"3280:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3282:77:29"},"nodeType":"YulFunctionCall","src":"3282:79:29"},"nodeType":"YulExpressionStatement","src":"3282:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3255:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3264:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3251:3:29"},"nodeType":"YulFunctionCall","src":"3251:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3276:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3247:3:29"},"nodeType":"YulFunctionCall","src":"3247:32:29"},"nodeType":"YulIf","src":"3244:119:29"},{"nodeType":"YulBlock","src":"3373:286:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3388:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:29"},"nodeType":"YulFunctionCall","src":"3415:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3402:12:29"},"nodeType":"YulFunctionCall","src":"3402:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3392:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3480:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3482:77:29"},"nodeType":"YulFunctionCall","src":"3482:79:29"},"nodeType":"YulExpressionStatement","src":"3482:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3452:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3460:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3449:2:29"},"nodeType":"YulFunctionCall","src":"3449:30:29"},"nodeType":"YulIf","src":"3446:117:29"},{"nodeType":"YulAssignment","src":"3577:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3621:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3632:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3617:3:29"},"nodeType":"YulFunctionCall","src":"3617:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3641:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3587:29:29"},"nodeType":"YulFunctionCall","src":"3587:62:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3577:6:29"}]}]},{"nodeType":"YulBlock","src":"3669:287:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3684:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3715:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3726:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3711:3:29"},"nodeType":"YulFunctionCall","src":"3711:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3698:12:29"},"nodeType":"YulFunctionCall","src":"3698:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3688:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3777:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3779:77:29"},"nodeType":"YulFunctionCall","src":"3779:79:29"},"nodeType":"YulExpressionStatement","src":"3779:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3749:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3757:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3746:2:29"},"nodeType":"YulFunctionCall","src":"3746:30:29"},"nodeType":"YulIf","src":"3743:117:29"},{"nodeType":"YulAssignment","src":"3874:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3918:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3929:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3914:3:29"},"nodeType":"YulFunctionCall","src":"3914:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3938:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3884:29:29"},"nodeType":"YulFunctionCall","src":"3884:62:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3874:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3196:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3207:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3219:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3227:6:29","type":""}],"src":"3133:830:29"},{"body":{"nodeType":"YulBlock","src":"4011:48:29","statements":[{"nodeType":"YulAssignment","src":"4021:32:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4046:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4039:6:29"},"nodeType":"YulFunctionCall","src":"4039:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4032:6:29"},"nodeType":"YulFunctionCall","src":"4032:21:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4021:7:29"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3993:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4003:7:29","type":""}],"src":"3969:90:29"},{"body":{"nodeType":"YulBlock","src":"4124:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4141:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4161:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"4146:14:29"},"nodeType":"YulFunctionCall","src":"4146:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4134:6:29"},"nodeType":"YulFunctionCall","src":"4134:34:29"},"nodeType":"YulExpressionStatement","src":"4134:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4112:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4119:3:29","type":""}],"src":"4065:109:29"},{"body":{"nodeType":"YulBlock","src":"4272:118:29","statements":[{"nodeType":"YulAssignment","src":"4282:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4294:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4305:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4290:3:29"},"nodeType":"YulFunctionCall","src":"4290:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4282:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4356:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4369:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4380:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4365:3:29"},"nodeType":"YulFunctionCall","src":"4365:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"4318:37:29"},"nodeType":"YulFunctionCall","src":"4318:65:29"},"nodeType":"YulExpressionStatement","src":"4318:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4244:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4256:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4267:4:29","type":""}],"src":"4180:210:29"},{"body":{"nodeType":"YulBlock","src":"4439:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"4496:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4505:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4508:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4498:6:29"},"nodeType":"YulFunctionCall","src":"4498:12:29"},"nodeType":"YulExpressionStatement","src":"4498:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4462:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4487:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4469:17:29"},"nodeType":"YulFunctionCall","src":"4469:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4459:2:29"},"nodeType":"YulFunctionCall","src":"4459:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4452:6:29"},"nodeType":"YulFunctionCall","src":"4452:43:29"},"nodeType":"YulIf","src":"4449:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4432:5:29","type":""}],"src":"4396:122:29"},{"body":{"nodeType":"YulBlock","src":"4576:87:29","statements":[{"nodeType":"YulAssignment","src":"4586:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4608:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4595:12:29"},"nodeType":"YulFunctionCall","src":"4595:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4586:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4651:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4624:26:29"},"nodeType":"YulFunctionCall","src":"4624:33:29"},"nodeType":"YulExpressionStatement","src":"4624:33:29"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4554:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"4562:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4570:5:29","type":""}],"src":"4524:139:29"},{"body":{"nodeType":"YulBlock","src":"4735:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"4781:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4783:77:29"},"nodeType":"YulFunctionCall","src":"4783:79:29"},"nodeType":"YulExpressionStatement","src":"4783:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4756:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4752:3:29"},"nodeType":"YulFunctionCall","src":"4752:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4777:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4748:3:29"},"nodeType":"YulFunctionCall","src":"4748:32:29"},"nodeType":"YulIf","src":"4745:119:29"},{"nodeType":"YulBlock","src":"4874:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4889:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4903:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4893:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4918:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4953:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4964:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4949:3:29"},"nodeType":"YulFunctionCall","src":"4949:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4973:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4928:20:29"},"nodeType":"YulFunctionCall","src":"4928:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4918:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4705:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4716:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4728:6:29","type":""}],"src":"4669:329:29"},{"body":{"nodeType":"YulBlock","src":"5049:32:29","statements":[{"nodeType":"YulAssignment","src":"5059:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"5070:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5059:7:29"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5031:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5041:7:29","type":""}],"src":"5004:77:29"},{"body":{"nodeType":"YulBlock","src":"5152:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5169:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5192:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5174:17:29"},"nodeType":"YulFunctionCall","src":"5174:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5162:6:29"},"nodeType":"YulFunctionCall","src":"5162:37:29"},"nodeType":"YulExpressionStatement","src":"5162:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5140:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5147:3:29","type":""}],"src":"5087:118:29"},{"body":{"nodeType":"YulBlock","src":"5309:124:29","statements":[{"nodeType":"YulAssignment","src":"5319:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5331:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5342:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5327:3:29"},"nodeType":"YulFunctionCall","src":"5327:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5319:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5399:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5412:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5423:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5408:3:29"},"nodeType":"YulFunctionCall","src":"5408:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5355:43:29"},"nodeType":"YulFunctionCall","src":"5355:71:29"},"nodeType":"YulExpressionStatement","src":"5355:71:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5281:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5293:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5304:4:29","type":""}],"src":"5211:222:29"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063b8e72af614610079578063f2fde38b146100a9575b600080fd5b6100596100c5565b005b6100636100d9565b6040516100709190610390565b60405180910390f35b610093600480360381019061008e9190610505565b610102565b6040516100a09190610598565b60405180910390f35b6100c360048036038101906100be91906105df565b610176565b005b6100cd6101fc565b6100d76000610283565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000808351111561016b573373ffffffffffffffffffffffffffffffffffffffff167f6001ac408879869d65636618cd8495cce3026445823e6de88d46ade8a9c81c79848051906020012060405161015a9190610625565b60405180910390a260019050610170565b600090505b92915050565b61017e6101fc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101f05760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101e79190610390565b60405180910390fd5b6101f981610283565b50565b610204610347565b73ffffffffffffffffffffffffffffffffffffffff166102226100d9565b73ffffffffffffffffffffffffffffffffffffffff161461028157610245610347565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102789190610390565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061037a8261034f565b9050919050565b61038a8161036f565b82525050565b60006020820190506103a56000830184610381565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610412826103c9565b810181811067ffffffffffffffff82111715610431576104306103da565b5b80604052505050565b60006104446103ab565b90506104508282610409565b919050565b600067ffffffffffffffff8211156104705761046f6103da565b5b610479826103c9565b9050602081019050919050565b82818337600083830152505050565b60006104a86104a384610455565b61043a565b9050828152602081018484840111156104c4576104c36103c4565b5b6104cf848285610486565b509392505050565b600082601f8301126104ec576104eb6103bf565b5b81356104fc848260208601610495565b91505092915050565b6000806040838503121561051c5761051b6103b5565b5b600083013567ffffffffffffffff81111561053a576105396103ba565b5b610546858286016104d7565b925050602083013567ffffffffffffffff811115610567576105666103ba565b5b610573858286016104d7565b9150509250929050565b60008115159050919050565b6105928161057d565b82525050565b60006020820190506105ad6000830184610589565b92915050565b6105bc8161036f565b81146105c757600080fd5b50565b6000813590506105d9816105b3565b92915050565b6000602082840312156105f5576105f46103b5565b5b6000610603848285016105ca565b91505092915050565b6000819050919050565b61061f8161060c565b82525050565b600060208201905061063a6000830184610616565b9291505056fea264697066735822122016e194294c46dacf1f9b631ef74eed2d3938a6aeea7d66090ae63e2bb20f826864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xB8E72AF6 EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x505 JUMP JUMPDEST PUSH2 0x102 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCD PUSH2 0x1FC JUMP JUMPDEST PUSH2 0xD7 PUSH1 0x0 PUSH2 0x283 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD GT ISZERO PUSH2 0x16B JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6001AC408879869D65636618CD8495CCE3026445823E6DE88D46ADE8A9C81C79 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP PUSH2 0x170 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F9 DUP2 PUSH2 0x283 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x204 PUSH2 0x347 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x222 PUSH2 0xD9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x281 JUMPI PUSH2 0x245 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A DUP3 PUSH2 0x34F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38A DUP2 PUSH2 0x36F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x381 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x412 DUP3 PUSH2 0x3C9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x431 JUMPI PUSH2 0x430 PUSH2 0x3DA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x444 PUSH2 0x3AB JUMP JUMPDEST SWAP1 POP PUSH2 0x450 DUP3 DUP3 PUSH2 0x409 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x470 JUMPI PUSH2 0x46F PUSH2 0x3DA JUMP JUMPDEST JUMPDEST PUSH2 0x479 DUP3 PUSH2 0x3C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A8 PUSH2 0x4A3 DUP5 PUSH2 0x455 JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4C4 JUMPI PUSH2 0x4C3 PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST PUSH2 0x4CF DUP5 DUP3 DUP6 PUSH2 0x486 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4EC JUMPI PUSH2 0x4EB PUSH2 0x3BF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4FC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x495 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x51C JUMPI PUSH2 0x51B PUSH2 0x3B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53A JUMPI PUSH2 0x539 PUSH2 0x3BA JUMP JUMPDEST JUMPDEST PUSH2 0x546 DUP6 DUP3 DUP7 ADD PUSH2 0x4D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x567 JUMPI PUSH2 0x566 PUSH2 0x3BA JUMP JUMPDEST JUMPDEST PUSH2 0x573 DUP6 DUP3 DUP7 ADD PUSH2 0x4D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x592 DUP2 PUSH2 0x57D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x589 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5BC DUP2 PUSH2 0x36F JUMP JUMPDEST DUP2 EQ PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5D9 DUP2 PUSH2 0x5B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F5 JUMPI PUSH2 0x5F4 PUSH2 0x3B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x603 DUP5 DUP3 DUP6 ADD PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x61F DUP2 PUSH2 0x60C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x63A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x616 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xE1 SWAP5 0x29 0x4C CHAINID 0xDA 0xCF 0x1F SWAP12 PUSH4 0x1EF74EED 0x2D CODECOPY CODESIZE 0xA6 0xAE 0xEA PUSH30 0x66090AE63E2BB20F826864736F6C63430008140033000000000000000000 ","sourceMap":"112:537:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;257:390:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;257:390:28:-;343:4;517:1;502:5;:12;:16;498:121;;;554:10;539:44;;;576:5;566:16;;;;;;539:44;;;;;;:::i;:::-;;;;;;;;604:4;597:11;;;;498:121;635:5;628:12;;257:390;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;7:126:29:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:75::-;626:6;659:2;653:9;643:19;;593:75;:::o;674:117::-;783:1;780;773:12;797:117;906:1;903;896:12;920:117;1029:1;1026;1019:12;1043:117;1152:1;1149;1142:12;1166:102;1207:6;1258:2;1254:7;1249:2;1242:5;1238:14;1234:28;1224:38;;1166:102;;;:::o;1274:180::-;1322:77;1319:1;1312:88;1419:4;1416:1;1409:15;1443:4;1440:1;1433:15;1460:281;1543:27;1565:4;1543:27;:::i;:::-;1535:6;1531:40;1673:6;1661:10;1658:22;1637:18;1625:10;1622:34;1619:62;1616:88;;;1684:18;;:::i;:::-;1616:88;1724:10;1720:2;1713:22;1503:238;1460:281;;:::o;1747:129::-;1781:6;1808:20;;:::i;:::-;1798:30;;1837:33;1865:4;1857:6;1837:33;:::i;:::-;1747:129;;;:::o;1882:307::-;1943:4;2033:18;2025:6;2022:30;2019:56;;;2055:18;;:::i;:::-;2019:56;2093:29;2115:6;2093:29;:::i;:::-;2085:37;;2177:4;2171;2167:15;2159:23;;1882:307;;;:::o;2195:146::-;2292:6;2287:3;2282;2269:30;2333:1;2324:6;2319:3;2315:16;2308:27;2195:146;;;:::o;2347:423::-;2424:5;2449:65;2465:48;2506:6;2465:48;:::i;:::-;2449:65;:::i;:::-;2440:74;;2537:6;2530:5;2523:21;2575:4;2568:5;2564:16;2613:3;2604:6;2599:3;2595:16;2592:25;2589:112;;;2620:79;;:::i;:::-;2589:112;2710:54;2757:6;2752:3;2747;2710:54;:::i;:::-;2430:340;2347:423;;;;;:::o;2789:338::-;2844:5;2893:3;2886:4;2878:6;2874:17;2870:27;2860:122;;2901:79;;:::i;:::-;2860:122;3018:6;3005:20;3043:78;3117:3;3109:6;3102:4;3094:6;3090:17;3043:78;:::i;:::-;3034:87;;2850:277;2789:338;;;;:::o;3133:830::-;3219:6;3227;3276:2;3264:9;3255:7;3251:23;3247:32;3244:119;;;3282:79;;:::i;:::-;3244:119;3430:1;3419:9;3415:17;3402:31;3460:18;3452:6;3449:30;3446:117;;;3482:79;;:::i;:::-;3446:117;3587:62;3641:7;3632:6;3621:9;3617:22;3587:62;:::i;:::-;3577:72;;3373:286;3726:2;3715:9;3711:18;3698:32;3757:18;3749:6;3746:30;3743:117;;;3779:79;;:::i;:::-;3743:117;3884:62;3938:7;3929:6;3918:9;3914:22;3884:62;:::i;:::-;3874:72;;3669:287;3133:830;;;;;:::o;3969:90::-;4003:7;4046:5;4039:13;4032:21;4021:32;;3969:90;;;:::o;4065:109::-;4146:21;4161:5;4146:21;:::i;:::-;4141:3;4134:34;4065:109;;:::o;4180:210::-;4267:4;4305:2;4294:9;4290:18;4282:26;;4318:65;4380:1;4369:9;4365:17;4356:6;4318:65;:::i;:::-;4180:210;;;;:::o;4396:122::-;4469:24;4487:5;4469:24;:::i;:::-;4462:5;4459:35;4449:63;;4508:1;4505;4498:12;4449:63;4396:122;:::o;4524:139::-;4570:5;4608:6;4595:20;4586:29;;4624:33;4651:5;4624:33;:::i;:::-;4524:139;;;;:::o;4669:329::-;4728:6;4777:2;4765:9;4756:7;4752:23;4748:32;4745:119;;;4783:79;;:::i;:::-;4745:119;4903:1;4928:53;4973:7;4964:6;4953:9;4949:22;4928:53;:::i;:::-;4918:63;;4874:117;4669:329;;;;:::o;5004:77::-;5041:7;5070:5;5059:16;;5004:77;;;:::o;5087:118::-;5174:24;5192:5;5174:24;:::i;:::-;5169:3;5162:37;5087:118;;:::o;5211:222::-;5304:4;5342:2;5331:9;5327:18;5319:26;;5355:71;5423:1;5412:9;5408:17;5399:6;5355:71;:::i;:::-;5211:222;;;;:::o"},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","verifyProof(bytes,bytes)":"b8e72af6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"}],\"name\":\"ProofSubmitted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"publicInputs\",\"type\":\"bytes\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZKModule.sol\":\"ZKModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/ZKModule.sol\":{\"keccak256\":\"0xea92b2e63c2ff388ff6480895c252ef00c51c2793a4bf49da9bcfbceaca6d762\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51ce9598b95acac277a30ef5720fa012e9c6cd9126c5fbcd1c3924cb89b2b710\",\"dweb:/ipfs/QmaQPsJypfixTAH24iva1nytMevkKYd7kFpW4yfytPuQFt\"]}},\"version\":1}"}}}}}